2025-07-22 16:47:29 [main] INFO  com.gigass.MarketVisionApplication - Starting MarketVisionApplication using Java 21.0.8 with PID 32354 (/Users/gigass/DEVELOP/GitHub/MarketVision/target/classes started by gigass in /Users/gigass/DEVELOP/GitHub/MarketVision)
2025-07-22 16:47:29 [main] DEBUG com.gigass.MarketVisionApplication - Running with Spring Boot v3.2.1, Spring v6.1.2
2025-07-22 16:47:29 [main] INFO  com.gigass.MarketVisionApplication - No active profile set, falling back to 1 default profile: "default"
2025-07-22 16:47:30 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-22 16:47:30 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-07-22 16:47:30 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 73 ms. Found 6 JPA repository interfaces.
2025-07-22 16:47:30 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-22 16:47:30 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-22 16:47:30 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.gigass.trading.repository.HotSearchRecordRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-22 16:47:30 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.gigass.trading.repository.HotsearchHistoryRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-22 16:47:30 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.gigass.trading.repository.MarketDataRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-22 16:47:30 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.gigass.trading.repository.OperationLogRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-22 16:47:30 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.gigass.trading.repository.StockInfoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-22 16:47:30 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.gigass.trading.repository.TimeSeriesDataRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-22 16:47:30 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 3 ms. Found 0 Redis repository interfaces.
2025-07-22 16:47:30 [main] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=460705c3-7388-3c9a-9073-72301c1cc223
2025-07-22 16:47:30 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$RetryInterceptorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$RetryInterceptorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2025-07-22 16:47:30 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-22 16:47:30 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-22 16:47:30 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' of type [org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-22 16:47:30 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-22 16:47:30 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerClientsDefaultsMappingsProvider' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda/0x000000a8015de440] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-22 16:47:30 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'defaultsBindHandlerAdvisor' of type [org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-22 16:47:30 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.cloud.loadbalancer-org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-22 16:47:30 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-22 16:47:30 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-22 16:47:30 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerClientFactory' of type [org.springframework.cloud.loadbalancer.support.LoadBalancerClientFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-22 16:47:30 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'blockingLoadBalancerClient' of type [org.springframework.cloud.loadbalancer.blocking.client.BlockingLoadBalancerClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-22 16:47:30 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerServiceInstanceCookieTransformer' of type [org.springframework.cloud.loadbalancer.core.LoadBalancerServiceInstanceCookieTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-22 16:47:30 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'xForwarderHeadersTransformer' of type [org.springframework.cloud.loadbalancer.blocking.XForwardedHeadersTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-22 16:47:30 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-22 16:47:30 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerRequestFactory' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerRequestFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-22 16:47:30 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerRetryConfig' of type [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerRetryConfig$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-22 16:47:30 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancedRetryFactory' of type [org.springframework.cloud.loadbalancer.blocking.retry.BlockingLoadBalancedRetryFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-22 16:47:30 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.RetryLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-22 16:47:30 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2025-07-22 16:47:30 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-22 16:47:30 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-22 16:47:31 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-07-22 16:47:31 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-07-22 16:47:31 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.17]
2025-07-22 16:47:31 [main] INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring embedded WebApplicationContext
2025-07-22 16:47:31 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1412 ms
2025-07-22 16:47:31 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-07-22 16:47:31 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:marketvision user=SA
2025-07-22 16:47:31 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-07-22 16:47:31 [main] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:marketvision'
2025-07-22 16:47:31 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-07-22 16:47:31 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2025-07-22 16:47:31 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-07-22 16:47:31 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-07-22 16:47:31 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-07-22 16:47:32 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-07-22 16:47:32 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-07-22 16:47:32 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-07-22 16:47:33 [main] ERROR i.n.r.d.DnsServerAddressStreamProviders - Unable to load io.netty.resolver.dns.macos.MacOSDnsServerAddressStreamProvider, fallback to system defaults. This may result in incorrect DNS resolutions on MacOS. Check whether you have a dependency on 'io.netty:netty-resolver-dns-native-macos'. Use DEBUG level to see the full stack: java.lang.UnsatisfiedLinkError: failed to load the required native library
2025-07-22 16:47:33 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'aiController': Unsatisfied dependency expressed through field 'aiService': Error creating bean with name 'aiServiceImpl': Unsatisfied dependency expressed through field 'geminiChatModel': Error creating bean with name 'vertexAiGeminiChat' defined in class path resource [org/springframework/ai/autoconfigure/vertexai/gemini/VertexAiGeminiAutoConfiguration.class]: Unsatisfied dependency expressed through method 'vertexAiGeminiChat' parameter 0: Error creating bean with name 'vertexAi' defined in class path resource [org/springframework/ai/autoconfigure/vertexai/gemini/VertexAiGeminiAutoConfiguration.class]: Failed to instantiate [com.google.cloud.vertexai.VertexAI]: Factory method 'vertexAi' threw exception with message: Vertex AI project-id must be set!
2025-07-22 16:47:35 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-07-22 16:47:35 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-07-22 16:47:35 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-07-22 16:47:35 [main] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2025-07-22 16:47:35 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-07-22 16:47:35 [main] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'aiController': Unsatisfied dependency expressed through field 'aiService': Error creating bean with name 'aiServiceImpl': Unsatisfied dependency expressed through field 'geminiChatModel': Error creating bean with name 'vertexAiGeminiChat' defined in class path resource [org/springframework/ai/autoconfigure/vertexai/gemini/VertexAiGeminiAutoConfiguration.class]: Unsatisfied dependency expressed through method 'vertexAiGeminiChat' parameter 0: Error creating bean with name 'vertexAi' defined in class path resource [org/springframework/ai/autoconfigure/vertexai/gemini/VertexAiGeminiAutoConfiguration.class]: Failed to instantiate [com.google.cloud.vertexai.VertexAI]: Factory method 'vertexAi' threw exception with message: Vertex AI project-id must be set!
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:787)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1418)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:598)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:960)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:762)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:464)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1358)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1347)
	at com.gigass.MarketVisionApplication.main(MarketVisionApplication.java:21)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'aiServiceImpl': Unsatisfied dependency expressed through field 'geminiChatModel': Error creating bean with name 'vertexAiGeminiChat' defined in class path resource [org/springframework/ai/autoconfigure/vertexai/gemini/VertexAiGeminiAutoConfiguration.class]: Unsatisfied dependency expressed through method 'vertexAiGeminiChat' parameter 0: Error creating bean with name 'vertexAi' defined in class path resource [org/springframework/ai/autoconfigure/vertexai/gemini/VertexAiGeminiAutoConfiguration.class]: Failed to instantiate [com.google.cloud.vertexai.VertexAI]: Factory method 'vertexAi' threw exception with message: Vertex AI project-id must be set!
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:787)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1418)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:598)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	... 20 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'vertexAiGeminiChat' defined in class path resource [org/springframework/ai/autoconfigure/vertexai/gemini/VertexAiGeminiAutoConfiguration.class]: Unsatisfied dependency expressed through method 'vertexAiGeminiChat' parameter 0: Error creating bean with name 'vertexAi' defined in class path resource [org/springframework/ai/autoconfigure/vertexai/gemini/VertexAiGeminiAutoConfiguration.class]: Failed to instantiate [com.google.cloud.vertexai.VertexAI]: Factory method 'vertexAi' threw exception with message: Vertex AI project-id must be set!
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:802)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1334)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1164)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:561)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	... 34 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'vertexAi' defined in class path resource [org/springframework/ai/autoconfigure/vertexai/gemini/VertexAiGeminiAutoConfiguration.class]: Failed to instantiate [com.google.cloud.vertexai.VertexAI]: Factory method 'vertexAi' threw exception with message: Vertex AI project-id must be set!
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:655)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:643)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1334)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1164)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:561)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:789)
	... 47 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [com.google.cloud.vertexai.VertexAI]: Factory method 'vertexAi' threw exception with message: Vertex AI project-id must be set!
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:177)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:651)
	... 61 common frames omitted
Caused by: java.lang.IllegalArgumentException: Vertex AI project-id must be set!
	at org.springframework.util.Assert.hasText(Assert.java:240)
	at org.springframework.ai.autoconfigure.vertexai.gemini.VertexAiGeminiAutoConfiguration.vertexAi(VertexAiGeminiAutoConfiguration.java:51)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:140)
	... 62 common frames omitted
2025-07-22 16:49:53 [main] INFO  com.gigass.MarketVisionApplication - Starting MarketVisionApplication using Java 21.0.8 with PID 32723 (/Users/gigass/DEVELOP/GitHub/MarketVision/target/classes started by gigass in /Users/gigass/DEVELOP/GitHub/MarketVision)
2025-07-22 16:49:53 [main] DEBUG com.gigass.MarketVisionApplication - Running with Spring Boot v3.2.1, Spring v6.1.2
2025-07-22 16:49:53 [main] INFO  com.gigass.MarketVisionApplication - No active profile set, falling back to 1 default profile: "default"
2025-07-22 16:49:53 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-22 16:49:53 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-07-22 16:49:53 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 56 ms. Found 6 JPA repository interfaces.
2025-07-22 16:49:53 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-22 16:49:53 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-22 16:49:53 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.gigass.trading.repository.HotSearchRecordRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-22 16:49:53 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.gigass.trading.repository.HotsearchHistoryRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-22 16:49:53 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.gigass.trading.repository.MarketDataRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-22 16:49:53 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.gigass.trading.repository.OperationLogRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-22 16:49:53 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.gigass.trading.repository.StockInfoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-22 16:49:53 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.gigass.trading.repository.TimeSeriesDataRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-22 16:49:53 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 3 ms. Found 0 Redis repository interfaces.
2025-07-22 16:49:53 [main] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=460705c3-7388-3c9a-9073-72301c1cc223
2025-07-22 16:49:53 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$RetryInterceptorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$RetryInterceptorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2025-07-22 16:49:53 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-22 16:49:53 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-22 16:49:53 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' of type [org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-22 16:49:53 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-22 16:49:53 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerClientsDefaultsMappingsProvider' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda/0x00000098015c2d28] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-22 16:49:53 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'defaultsBindHandlerAdvisor' of type [org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-22 16:49:53 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.cloud.loadbalancer-org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-22 16:49:53 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-22 16:49:53 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-22 16:49:53 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerClientFactory' of type [org.springframework.cloud.loadbalancer.support.LoadBalancerClientFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-22 16:49:53 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'blockingLoadBalancerClient' of type [org.springframework.cloud.loadbalancer.blocking.client.BlockingLoadBalancerClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-22 16:49:53 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerServiceInstanceCookieTransformer' of type [org.springframework.cloud.loadbalancer.core.LoadBalancerServiceInstanceCookieTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-22 16:49:53 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'xForwarderHeadersTransformer' of type [org.springframework.cloud.loadbalancer.blocking.XForwardedHeadersTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-22 16:49:53 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-22 16:49:53 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerRequestFactory' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerRequestFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-22 16:49:53 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerRetryConfig' of type [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerRetryConfig$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-22 16:49:53 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancedRetryFactory' of type [org.springframework.cloud.loadbalancer.blocking.retry.BlockingLoadBalancedRetryFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-22 16:49:53 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.RetryLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-22 16:49:53 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2025-07-22 16:49:53 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-22 16:49:53 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-22 16:49:54 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-07-22 16:49:54 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-07-22 16:49:54 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.17]
2025-07-22 16:49:54 [main] INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring embedded WebApplicationContext
2025-07-22 16:49:54 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1137 ms
2025-07-22 16:49:54 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-07-22 16:49:54 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:marketvision user=SA
2025-07-22 16:49:54 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-07-22 16:49:54 [main] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:marketvision'
2025-07-22 16:49:54 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-07-22 16:49:54 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2025-07-22 16:49:54 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-07-22 16:49:54 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-07-22 16:49:54 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-07-22 16:49:55 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-07-22 16:49:55 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-07-22 16:49:55 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-07-22 16:49:56 [main] ERROR i.n.r.d.DnsServerAddressStreamProviders - Unable to load io.netty.resolver.dns.macos.MacOSDnsServerAddressStreamProvider, fallback to system defaults. This may result in incorrect DNS resolutions on MacOS. Check whether you have a dependency on 'io.netty:netty-resolver-dns-native-macos'. Use DEBUG level to see the full stack: java.lang.UnsatisfiedLinkError: failed to load the required native library
2025-07-22 16:49:56 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'aiController': Unsatisfied dependency expressed through field 'aiService': Error creating bean with name 'aiServiceImpl': Unsatisfied dependency expressed through field 'geminiChatModel': Error creating bean with name 'vertexAiGeminiChat' defined in class path resource [org/springframework/ai/autoconfigure/vertexai/gemini/VertexAiGeminiAutoConfiguration.class]: Unsatisfied dependency expressed through method 'vertexAiGeminiChat' parameter 0: Error creating bean with name 'vertexAi' defined in class path resource [org/springframework/ai/autoconfigure/vertexai/gemini/VertexAiGeminiAutoConfiguration.class]: Failed to instantiate [com.google.cloud.vertexai.VertexAI]: Factory method 'vertexAi' threw exception with message: Vertex AI project-id must be set!
2025-07-22 16:49:58 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-07-22 16:49:58 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-07-22 16:49:58 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-07-22 16:49:58 [main] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2025-07-22 16:49:58 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-07-22 16:49:58 [main] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'aiController': Unsatisfied dependency expressed through field 'aiService': Error creating bean with name 'aiServiceImpl': Unsatisfied dependency expressed through field 'geminiChatModel': Error creating bean with name 'vertexAiGeminiChat' defined in class path resource [org/springframework/ai/autoconfigure/vertexai/gemini/VertexAiGeminiAutoConfiguration.class]: Unsatisfied dependency expressed through method 'vertexAiGeminiChat' parameter 0: Error creating bean with name 'vertexAi' defined in class path resource [org/springframework/ai/autoconfigure/vertexai/gemini/VertexAiGeminiAutoConfiguration.class]: Failed to instantiate [com.google.cloud.vertexai.VertexAI]: Factory method 'vertexAi' threw exception with message: Vertex AI project-id must be set!
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:787)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1418)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:598)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:960)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:762)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:464)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1358)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1347)
	at com.gigass.MarketVisionApplication.main(MarketVisionApplication.java:21)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'aiServiceImpl': Unsatisfied dependency expressed through field 'geminiChatModel': Error creating bean with name 'vertexAiGeminiChat' defined in class path resource [org/springframework/ai/autoconfigure/vertexai/gemini/VertexAiGeminiAutoConfiguration.class]: Unsatisfied dependency expressed through method 'vertexAiGeminiChat' parameter 0: Error creating bean with name 'vertexAi' defined in class path resource [org/springframework/ai/autoconfigure/vertexai/gemini/VertexAiGeminiAutoConfiguration.class]: Failed to instantiate [com.google.cloud.vertexai.VertexAI]: Factory method 'vertexAi' threw exception with message: Vertex AI project-id must be set!
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:787)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1418)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:598)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	... 20 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'vertexAiGeminiChat' defined in class path resource [org/springframework/ai/autoconfigure/vertexai/gemini/VertexAiGeminiAutoConfiguration.class]: Unsatisfied dependency expressed through method 'vertexAiGeminiChat' parameter 0: Error creating bean with name 'vertexAi' defined in class path resource [org/springframework/ai/autoconfigure/vertexai/gemini/VertexAiGeminiAutoConfiguration.class]: Failed to instantiate [com.google.cloud.vertexai.VertexAI]: Factory method 'vertexAi' threw exception with message: Vertex AI project-id must be set!
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:802)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1334)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1164)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:561)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	... 34 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'vertexAi' defined in class path resource [org/springframework/ai/autoconfigure/vertexai/gemini/VertexAiGeminiAutoConfiguration.class]: Failed to instantiate [com.google.cloud.vertexai.VertexAI]: Factory method 'vertexAi' threw exception with message: Vertex AI project-id must be set!
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:655)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:643)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1334)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1164)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:561)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:789)
	... 47 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [com.google.cloud.vertexai.VertexAI]: Factory method 'vertexAi' threw exception with message: Vertex AI project-id must be set!
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:177)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:651)
	... 61 common frames omitted
Caused by: java.lang.IllegalArgumentException: Vertex AI project-id must be set!
	at org.springframework.util.Assert.hasText(Assert.java:240)
	at org.springframework.ai.autoconfigure.vertexai.gemini.VertexAiGeminiAutoConfiguration.vertexAi(VertexAiGeminiAutoConfiguration.java:51)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:140)
	... 62 common frames omitted
2025-07-22 16:59:32 [main] INFO  com.gigass.MarketVisionApplication - Starting MarketVisionApplication using Java 21.0.8 with PID 34587 (/Users/gigass/DEVELOP/GitHub/MarketVision/target/classes started by gigass in /Users/gigass/DEVELOP/GitHub/MarketVision)
2025-07-22 16:59:32 [main] DEBUG com.gigass.MarketVisionApplication - Running with Spring Boot v3.2.1, Spring v6.1.2
2025-07-22 16:59:32 [main] INFO  com.gigass.MarketVisionApplication - No active profile set, falling back to 1 default profile: "default"
2025-07-22 16:59:32 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-22 16:59:32 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-22 16:59:32 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 6 ms. Found 0 Redis repository interfaces.
2025-07-22 16:59:32 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: java.lang.IllegalArgumentException: Invalid value type for attribute 'factoryBeanObjectType': java.lang.String
2025-07-22 16:59:32 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-07-22 16:59:32 [main] ERROR o.s.boot.SpringApplication - Application run failed
java.lang.IllegalArgumentException: Invalid value type for attribute 'factoryBeanObjectType': java.lang.String
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.getTypeForFactoryBeanFromAttributes(FactoryBeanRegistrySupport.java:86)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:836)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:620)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:575)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:534)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:138)
	at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:789)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:606)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:762)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:464)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1358)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1347)
	at com.gigass.MarketVisionApplication.main(MarketVisionApplication.java:23)
2025-07-22 17:01:19 [main] INFO  com.gigass.MarketVisionApplication - Starting MarketVisionApplication using Java 21.0.8 with PID 34977 (/Users/gigass/DEVELOP/GitHub/MarketVision/target/classes started by gigass in /Users/gigass/DEVELOP/GitHub/MarketVision)
2025-07-22 17:01:19 [main] DEBUG com.gigass.MarketVisionApplication - Running with Spring Boot v3.2.1, Spring v6.1.2
2025-07-22 17:01:19 [main] INFO  com.gigass.MarketVisionApplication - No active profile set, falling back to 1 default profile: "default"
2025-07-22 17:01:19 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-22 17:01:19 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-22 17:01:19 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 6 ms. Found 0 Redis repository interfaces.
2025-07-22 17:01:19 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: java.lang.IllegalArgumentException: Invalid value type for attribute 'factoryBeanObjectType': java.lang.String
2025-07-22 17:01:19 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-07-22 17:01:19 [main] ERROR o.s.boot.SpringApplication - Application run failed
java.lang.IllegalArgumentException: Invalid value type for attribute 'factoryBeanObjectType': java.lang.String
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.getTypeForFactoryBeanFromAttributes(FactoryBeanRegistrySupport.java:86)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:836)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:620)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:575)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:534)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:138)
	at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:789)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:606)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:762)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:464)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1358)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1347)
	at com.gigass.MarketVisionApplication.main(MarketVisionApplication.java:23)
2025-07-22 17:06:04 [main] INFO  com.gigass.MarketVisionApplication - Starting MarketVisionApplication using Java 21.0.8 with PID 35531 (/Users/gigass/DEVELOP/GitHub/MarketVision/target/classes started by gigass in /Users/gigass/DEVELOP/GitHub/MarketVision)
2025-07-22 17:06:04 [main] DEBUG com.gigass.MarketVisionApplication - Running with Spring Boot v3.2.1, Spring v6.1.2
2025-07-22 17:06:04 [main] INFO  com.gigass.MarketVisionApplication - No active profile set, falling back to 1 default profile: "default"
2025-07-22 17:06:04 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-22 17:06:04 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-22 17:06:05 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 7 ms. Found 0 Redis repository interfaces.
2025-07-22 17:06:05 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: java.lang.IllegalArgumentException: Invalid value type for attribute 'factoryBeanObjectType': java.lang.String
2025-07-22 17:06:05 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-07-22 17:06:05 [main] ERROR o.s.boot.SpringApplication - Application run failed
java.lang.IllegalArgumentException: Invalid value type for attribute 'factoryBeanObjectType': java.lang.String
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.getTypeForFactoryBeanFromAttributes(FactoryBeanRegistrySupport.java:86)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:836)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:620)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:575)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:534)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:138)
	at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:789)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:606)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:762)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:464)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1358)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1347)
	at com.gigass.MarketVisionApplication.main(MarketVisionApplication.java:23)
2025-07-22 17:11:23 [main] INFO  com.gigass.MarketVisionApplication - Starting MarketVisionApplication using Java 21.0.8 with PID 36084 (/Users/gigass/DEVELOP/GitHub/MarketVision/target/classes started by gigass in /Users/gigass/DEVELOP/GitHub/MarketVision)
2025-07-22 17:11:23 [main] DEBUG com.gigass.MarketVisionApplication - Running with Spring Boot v3.2.1, Spring v6.1.2
2025-07-22 17:11:23 [main] INFO  com.gigass.MarketVisionApplication - No active profile set, falling back to 1 default profile: "default"
2025-07-22 17:11:24 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-22 17:11:24 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-22 17:11:24 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 7 ms. Found 0 Redis repository interfaces.
2025-07-22 17:11:24 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: java.lang.IllegalArgumentException: Invalid value type for attribute 'factoryBeanObjectType': java.lang.String
2025-07-22 17:11:24 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-07-22 17:11:24 [main] ERROR o.s.boot.SpringApplication - Application run failed
java.lang.IllegalArgumentException: Invalid value type for attribute 'factoryBeanObjectType': java.lang.String
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.getTypeForFactoryBeanFromAttributes(FactoryBeanRegistrySupport.java:86)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:836)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:620)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:575)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:534)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:138)
	at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:789)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:606)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:762)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:464)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1358)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1347)
	at com.gigass.MarketVisionApplication.main(MarketVisionApplication.java:23)
2025-07-22 17:11:47 [main] INFO  com.gigass.MarketVisionApplication - Starting MarketVisionApplication using Java 21.0.8 with PID 36133 (/Users/gigass/DEVELOP/GitHub/MarketVision/target/classes started by gigass in /Users/gigass/DEVELOP/GitHub/MarketVision)
2025-07-22 17:11:47 [main] DEBUG com.gigass.MarketVisionApplication - Running with Spring Boot v3.2.1, Spring v6.1.2
2025-07-22 17:11:47 [main] INFO  com.gigass.MarketVisionApplication - No active profile set, falling back to 1 default profile: "default"
2025-07-22 17:11:48 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: java.lang.IllegalArgumentException: Invalid value type for attribute 'factoryBeanObjectType': java.lang.String
2025-07-22 17:11:48 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-07-22 17:11:48 [main] ERROR o.s.boot.SpringApplication - Application run failed
java.lang.IllegalArgumentException: Invalid value type for attribute 'factoryBeanObjectType': java.lang.String
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.getTypeForFactoryBeanFromAttributes(FactoryBeanRegistrySupport.java:86)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:836)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:620)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:575)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:534)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:138)
	at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:789)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:606)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:762)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:464)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1358)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1347)
	at com.gigass.MarketVisionApplication.main(MarketVisionApplication.java:23)
2025-07-22 17:13:34 [main] INFO  com.gigass.MarketVisionApplication - Starting MarketVisionApplication using Java 21.0.8 with PID 36325 (/Users/gigass/DEVELOP/GitHub/MarketVision/target/classes started by gigass in /Users/gigass/DEVELOP/GitHub/MarketVision)
2025-07-22 17:13:34 [main] DEBUG com.gigass.MarketVisionApplication - Running with Spring Boot v3.2.1, Spring v6.1.2
2025-07-22 17:13:34 [main] INFO  com.gigass.MarketVisionApplication - No active profile set, falling back to 1 default profile: "default"
2025-07-22 17:13:35 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: java.lang.IllegalArgumentException: Invalid value type for attribute 'factoryBeanObjectType': java.lang.String
2025-07-22 17:13:35 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-07-22 17:13:35 [main] ERROR o.s.boot.SpringApplication - Application run failed
java.lang.IllegalArgumentException: Invalid value type for attribute 'factoryBeanObjectType': java.lang.String
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.getTypeForFactoryBeanFromAttributes(FactoryBeanRegistrySupport.java:86)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:836)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:620)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:575)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:534)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:138)
	at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:789)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:606)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:762)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:464)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1358)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1347)
	at com.gigass.MarketVisionApplication.main(MarketVisionApplication.java:19)
2025-07-22 17:17:45 [main] INFO  com.gigass.MarketVisionApplication - Starting MarketVisionApplication using Java 21.0.8 with PID 36761 (/Users/gigass/DEVELOP/GitHub/MarketVision/target/classes started by gigass in /Users/gigass/DEVELOP/GitHub/MarketVision)
2025-07-22 17:17:45 [main] DEBUG com.gigass.MarketVisionApplication - Running with Spring Boot v3.2.1, Spring v6.1.2
2025-07-22 17:17:45 [main] INFO  com.gigass.MarketVisionApplication - No active profile set, falling back to 1 default profile: "default"
2025-07-22 17:17:46 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: java.lang.IllegalArgumentException: Invalid value type for attribute 'factoryBeanObjectType': java.lang.String
2025-07-22 17:17:46 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-07-22 17:17:46 [main] ERROR o.s.boot.SpringApplication - Application run failed
java.lang.IllegalArgumentException: Invalid value type for attribute 'factoryBeanObjectType': java.lang.String
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.getTypeForFactoryBeanFromAttributes(FactoryBeanRegistrySupport.java:86)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:836)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:620)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:575)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:534)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:138)
	at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:789)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:606)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:762)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:464)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1358)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1347)
	at com.gigass.MarketVisionApplication.main(MarketVisionApplication.java:26)
2025-07-22 17:19:58 [main] INFO  com.gigass.MarketVisionApplication - Starting MarketVisionApplication using Java 21.0.8 with PID 37008 (/Users/gigass/DEVELOP/GitHub/MarketVision/target/classes started by gigass in /Users/gigass/DEVELOP/GitHub/MarketVision)
2025-07-22 17:19:58 [main] DEBUG com.gigass.MarketVisionApplication - Running with Spring Boot v3.2.1, Spring v6.1.2
2025-07-22 17:19:58 [main] INFO  com.gigass.MarketVisionApplication - No active profile set, falling back to 1 default profile: "default"
2025-07-22 17:19:59 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: java.lang.IllegalArgumentException: Invalid value type for attribute 'factoryBeanObjectType': java.lang.String
2025-07-22 17:19:59 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-07-22 17:19:59 [main] ERROR o.s.boot.SpringApplication - Application run failed
java.lang.IllegalArgumentException: Invalid value type for attribute 'factoryBeanObjectType': java.lang.String
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.getTypeForFactoryBeanFromAttributes(FactoryBeanRegistrySupport.java:86)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:836)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:620)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:575)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:534)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:138)
	at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:789)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:606)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:762)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:464)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1358)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1347)
	at com.gigass.MarketVisionApplication.main(MarketVisionApplication.java:19)
2025-07-22 17:22:56 [main] INFO  com.gigass.MarketVisionApplication - Starting MarketVisionApplication using Java 21.0.8 with PID 37501 (/Users/gigass/DEVELOP/GitHub/MarketVision/target/classes started by gigass in /Users/gigass/DEVELOP/GitHub/MarketVision)
2025-07-22 17:22:56 [main] DEBUG com.gigass.MarketVisionApplication - Running with Spring Boot v3.2.1, Spring v6.1.2
2025-07-22 17:22:56 [main] INFO  com.gigass.MarketVisionApplication - No active profile set, falling back to 1 default profile: "default"
2025-07-22 17:22:57 [main] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=f76e5310-0653-39a9-be09-865ef2118b45
2025-07-22 17:22:57 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$RetryInterceptorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$RetryInterceptorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2025-07-22 17:22:57 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-22 17:22:57 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-22 17:22:57 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' of type [org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-22 17:22:57 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-22 17:22:57 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerClientsDefaultsMappingsProvider' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda/0x000000700155ef38] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-22 17:22:57 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'defaultsBindHandlerAdvisor' of type [org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-22 17:22:57 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.cloud.loadbalancer-org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-22 17:22:57 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-22 17:22:57 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-22 17:22:57 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerClientFactory' of type [org.springframework.cloud.loadbalancer.support.LoadBalancerClientFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-22 17:22:57 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'blockingLoadBalancerClient' of type [org.springframework.cloud.loadbalancer.blocking.client.BlockingLoadBalancerClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-22 17:22:57 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerServiceInstanceCookieTransformer' of type [org.springframework.cloud.loadbalancer.core.LoadBalancerServiceInstanceCookieTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-22 17:22:57 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'xForwarderHeadersTransformer' of type [org.springframework.cloud.loadbalancer.blocking.XForwardedHeadersTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-22 17:22:57 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-22 17:22:57 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerRequestFactory' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerRequestFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-22 17:22:57 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerRetryConfig' of type [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerRetryConfig$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-22 17:22:57 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancedRetryFactory' of type [org.springframework.cloud.loadbalancer.blocking.retry.BlockingLoadBalancedRetryFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-22 17:22:57 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.RetryLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-22 17:22:57 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2025-07-22 17:22:57 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-22 17:22:57 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-22 17:22:57 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-07-22 17:22:58 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-07-22 17:22:58 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.17]
2025-07-22 17:22:58 [main] INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring embedded WebApplicationContext
2025-07-22 17:22:58 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 993 ms
2025-07-22 17:22:58 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-07-22 17:22:58 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.p6spy.engine.wrapper.ConnectionWrapper@767b9d66
2025-07-22 17:22:58 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-07-22 17:22:58 [main] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:marketvision'
2025-07-22 17:22:58 [main] ERROR i.n.r.d.DnsServerAddressStreamProviders - Unable to load io.netty.resolver.dns.macos.MacOSDnsServerAddressStreamProvider, fallback to system defaults. This may result in incorrect DNS resolutions on MacOS. Check whether you have a dependency on 'io.netty:netty-resolver-dns-native-macos'. Use DEBUG level to see the full stack: java.lang.UnsatisfiedLinkError: failed to load the required native library
2025-07-22 17:22:58 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'aiController': Unsatisfied dependency expressed through field 'aiService': Error creating bean with name 'aiServiceImpl': Unsatisfied dependency expressed through field 'geminiChatModel': Error creating bean with name 'vertexAiGeminiChat' defined in class path resource [org/springframework/ai/autoconfigure/vertexai/gemini/VertexAiGeminiAutoConfiguration.class]: Unsatisfied dependency expressed through method 'vertexAiGeminiChat' parameter 0: Error creating bean with name 'vertexAi' defined in class path resource [org/springframework/ai/autoconfigure/vertexai/gemini/VertexAiGeminiAutoConfiguration.class]: Failed to instantiate [com.google.cloud.vertexai.VertexAI]: Factory method 'vertexAi' threw exception with message: Vertex AI project-id must be set!
2025-07-22 17:23:00 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-07-22 17:23:00 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-07-22 17:23:00 [main] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2025-07-22 17:23:00 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-07-22 17:23:00 [main] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'aiController': Unsatisfied dependency expressed through field 'aiService': Error creating bean with name 'aiServiceImpl': Unsatisfied dependency expressed through field 'geminiChatModel': Error creating bean with name 'vertexAiGeminiChat' defined in class path resource [org/springframework/ai/autoconfigure/vertexai/gemini/VertexAiGeminiAutoConfiguration.class]: Unsatisfied dependency expressed through method 'vertexAiGeminiChat' parameter 0: Error creating bean with name 'vertexAi' defined in class path resource [org/springframework/ai/autoconfigure/vertexai/gemini/VertexAiGeminiAutoConfiguration.class]: Failed to instantiate [com.google.cloud.vertexai.VertexAI]: Factory method 'vertexAi' threw exception with message: Vertex AI project-id must be set!
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:787)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1418)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:598)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:960)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:762)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:464)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1358)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1347)
	at com.gigass.MarketVisionApplication.main(MarketVisionApplication.java:19)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'aiServiceImpl': Unsatisfied dependency expressed through field 'geminiChatModel': Error creating bean with name 'vertexAiGeminiChat' defined in class path resource [org/springframework/ai/autoconfigure/vertexai/gemini/VertexAiGeminiAutoConfiguration.class]: Unsatisfied dependency expressed through method 'vertexAiGeminiChat' parameter 0: Error creating bean with name 'vertexAi' defined in class path resource [org/springframework/ai/autoconfigure/vertexai/gemini/VertexAiGeminiAutoConfiguration.class]: Failed to instantiate [com.google.cloud.vertexai.VertexAI]: Factory method 'vertexAi' threw exception with message: Vertex AI project-id must be set!
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:787)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1418)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:598)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	... 20 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'vertexAiGeminiChat' defined in class path resource [org/springframework/ai/autoconfigure/vertexai/gemini/VertexAiGeminiAutoConfiguration.class]: Unsatisfied dependency expressed through method 'vertexAiGeminiChat' parameter 0: Error creating bean with name 'vertexAi' defined in class path resource [org/springframework/ai/autoconfigure/vertexai/gemini/VertexAiGeminiAutoConfiguration.class]: Failed to instantiate [com.google.cloud.vertexai.VertexAI]: Factory method 'vertexAi' threw exception with message: Vertex AI project-id must be set!
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:802)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1334)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1164)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:561)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	... 34 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'vertexAi' defined in class path resource [org/springframework/ai/autoconfigure/vertexai/gemini/VertexAiGeminiAutoConfiguration.class]: Failed to instantiate [com.google.cloud.vertexai.VertexAI]: Factory method 'vertexAi' threw exception with message: Vertex AI project-id must be set!
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:655)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:643)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1334)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1164)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:561)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:789)
	... 47 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [com.google.cloud.vertexai.VertexAI]: Factory method 'vertexAi' threw exception with message: Vertex AI project-id must be set!
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:177)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:651)
	... 61 common frames omitted
Caused by: java.lang.IllegalArgumentException: Vertex AI project-id must be set!
	at org.springframework.util.Assert.hasText(Assert.java:240)
	at org.springframework.ai.autoconfigure.vertexai.gemini.VertexAiGeminiAutoConfiguration.vertexAi(VertexAiGeminiAutoConfiguration.java:51)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:140)
	... 62 common frames omitted
2025-07-22 17:28:04 [main] INFO  com.gigass.MarketVisionApplication - Starting MarketVisionApplication using Java 21.0.8 with PID 38077 (/Users/gigass/DEVELOP/GitHub/MarketVision/target/classes started by gigass in /Users/gigass/DEVELOP/GitHub/MarketVision)
2025-07-22 17:28:04 [main] DEBUG com.gigass.MarketVisionApplication - Running with Spring Boot v3.2.1, Spring v6.1.2
2025-07-22 17:28:04 [main] INFO  com.gigass.MarketVisionApplication - No active profile set, falling back to 1 default profile: "default"
2025-07-22 17:28:05 [main] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=15d2bf9e-5ad9-327d-8b2f-c58cbe7325a6
2025-07-22 17:28:05 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$RetryInterceptorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$RetryInterceptorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2025-07-22 17:28:05 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-22 17:28:05 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-22 17:28:05 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' of type [org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-22 17:28:05 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-22 17:28:05 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerClientsDefaultsMappingsProvider' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda/0x00000078015460b8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-22 17:28:05 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'defaultsBindHandlerAdvisor' of type [org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-22 17:28:05 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.cloud.loadbalancer-org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-22 17:28:05 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-22 17:28:05 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-22 17:28:05 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerClientFactory' of type [org.springframework.cloud.loadbalancer.support.LoadBalancerClientFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-22 17:28:05 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'blockingLoadBalancerClient' of type [org.springframework.cloud.loadbalancer.blocking.client.BlockingLoadBalancerClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-22 17:28:05 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerServiceInstanceCookieTransformer' of type [org.springframework.cloud.loadbalancer.core.LoadBalancerServiceInstanceCookieTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-22 17:28:05 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'xForwarderHeadersTransformer' of type [org.springframework.cloud.loadbalancer.blocking.XForwardedHeadersTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-22 17:28:05 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-22 17:28:05 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerRequestFactory' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerRequestFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-22 17:28:05 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerRetryConfig' of type [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerRetryConfig$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-22 17:28:05 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancedRetryFactory' of type [org.springframework.cloud.loadbalancer.blocking.retry.BlockingLoadBalancedRetryFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-22 17:28:05 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.RetryLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-22 17:28:05 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2025-07-22 17:28:05 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-22 17:28:05 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-22 17:28:06 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-07-22 17:28:06 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-07-22 17:28:06 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.17]
2025-07-22 17:28:06 [main] INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring embedded WebApplicationContext
2025-07-22 17:28:06 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1025 ms
2025-07-22 17:28:06 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-07-22 17:28:06 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.p6spy.engine.wrapper.ConnectionWrapper@6e7f29d5
2025-07-22 17:28:06 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-07-22 17:28:06 [main] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:marketvision'
2025-07-22 17:28:06 [main] ERROR i.n.r.d.DnsServerAddressStreamProviders - Unable to load io.netty.resolver.dns.macos.MacOSDnsServerAddressStreamProvider, fallback to system defaults. This may result in incorrect DNS resolutions on MacOS. Check whether you have a dependency on 'io.netty:netty-resolver-dns-native-macos'. Use DEBUG level to see the full stack: java.lang.UnsatisfiedLinkError: failed to load the required native library
2025-07-22 17:28:07 [main] WARN  o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2025-07-22 17:28:07 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 3 endpoint(s) beneath base path '/actuator'
2025-07-22 17:28:07 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/api'
2025-07-22 17:28:07 [main] INFO  com.gigass.MarketVisionApplication - Started MarketVisionApplication in 2.98 seconds (process running for 4.667)
2025-07-22 17:28:07 [main] ERROR c.g.t.aspect.OperationLogAspect - 记录操作日志失败
org.springframework.jdbc.BadSqlGrammarException: 
### Error updating database.  Cause: org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "OPERATION_LOG" not found (this database is empty); SQL statement:
INSERT INTO operation_log  ( operation_type, operation_description, operation_time, operation_params,  operation_ip, operation_url, http_method, operation_status )  VALUES (  ?, ?, ?, ?,  ?, ?, ?, ?  ) [42104-224]
### The error may exist in com/gigass/trading/repository/OperationLogRepository.java (best guess)
### The error may involve com.gigass.trading.repository.OperationLogRepository.insert
### The error occurred while executing an update
### SQL: INSERT INTO operation_log  ( operation_type, operation_description, operation_time, operation_params,  operation_ip, operation_url, http_method, operation_status )  VALUES (  ?, ?, ?, ?,  ?, ?, ?, ?  )
### Cause: org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "OPERATION_LOG" not found (this database is empty); SQL statement:
INSERT INTO operation_log  ( operation_type, operation_description, operation_time, operation_params,  operation_ip, operation_url, http_method, operation_status )  VALUES (  ?, ?, ?, ?,  ?, ?, ?, ?  ) [42104-224]
; bad SQL grammar []
	at org.springframework.jdbc.support.SQLExceptionSubclassTranslator.doTranslate(SQLExceptionSubclassTranslator.java:103)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:107)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:116)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:92)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:439)
	at jdk.proxy2/jdk.proxy2.$Proxy106.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.execute(MybatisMapperMethod.java:59)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy$PlainMethodInvoker.invoke(MybatisMapperProxy.java:152)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy.invoke(MybatisMapperProxy.java:89)
	at jdk.proxy2/jdk.proxy2.$Proxy107.insert(Unknown Source)
	at com.gigass.trading.aspect.OperationLogAspect.doBefore(OperationLogAspect.java:90)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJMethodBeforeAdvice.before(AspectJMethodBeforeAdvice.java:44)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:57)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.module.acquisition.SocialMediaCrawlerFactory$$SpringCGLIB$$0.createCrawler(<generated>)
	at com.gigass.trading.demo.LifecycleDemo.run(LifecycleDemo.java:48)
	at org.springframework.boot.SpringApplication.lambda$callRunner$5(SpringApplication.java:798)
	at org.springframework.util.function.ThrowingConsumer$1.acceptWithException(ThrowingConsumer.java:83)
	at org.springframework.util.function.ThrowingConsumer.accept(ThrowingConsumer.java:60)
	at org.springframework.util.function.ThrowingConsumer$1.accept(ThrowingConsumer.java:88)
	at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:806)
	at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:797)
	at org.springframework.boot.SpringApplication.lambda$callRunners$3(SpringApplication.java:782)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.SortedOps$SizedRefSortingSink.end(SortedOps.java:357)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:510)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at org.springframework.boot.SpringApplication.callRunners(SpringApplication.java:782)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:341)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1358)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1347)
	at com.gigass.MarketVisionApplication.main(MarketVisionApplication.java:21)
Caused by: org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "OPERATION_LOG" not found (this database is empty); SQL statement:
INSERT INTO operation_log  ( operation_type, operation_description, operation_time, operation_params,  operation_ip, operation_url, http_method, operation_status )  VALUES (  ?, ?, ?, ?,  ?, ?, ?, ?  ) [42104-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.command.Parser.getTableOrViewNotFoundDbException(Parser.java:8051)
	at org.h2.command.Parser.getTableOrViewNotFoundDbException(Parser.java:8035)
	at org.h2.command.Parser.readTableOrView(Parser.java:8024)
	at org.h2.command.Parser.readTableOrView(Parser.java:7990)
	at org.h2.command.Parser.parseInsert(Parser.java:1540)
	at org.h2.command.Parser.parsePrepared(Parser.java:719)
	at org.h2.command.Parser.parse(Parser.java:592)
	at org.h2.command.Parser.parse(Parser.java:564)
	at org.h2.command.Parser.prepareCommand(Parser.java:483)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:639)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:559)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1166)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:93)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:1149)
	at com.p6spy.engine.wrapper.ConnectionWrapper.prepareStatement(ConnectionWrapper.java:143)
	at com.zaxxer.hikari.pool.ProxyConnection.prepareStatement(ProxyConnection.java:362)
	at com.zaxxer.hikari.pool.HikariProxyConnection.prepareStatement(HikariProxyConnection.java)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.apache.ibatis.logging.jdbc.ConnectionLogger.invoke(ConnectionLogger.java:53)
	at jdk.proxy3/jdk.proxy3.$Proxy102.prepareStatement(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.instantiateStatement(PreparedStatementHandler.java:84)
	at org.apache.ibatis.executor.statement.BaseStatementHandler.prepare(BaseStatementHandler.java:90)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.prepare(RoutingStatementHandler.java:60)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:90)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:49)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	... 41 common frames omitted
2025-07-22 17:28:07 [scheduling-1] ERROR c.g.t.aspect.OperationLogAspect - 记录操作日志失败
org.springframework.jdbc.BadSqlGrammarException: 
### Error updating database.  Cause: org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "OPERATION_LOG" not found (this database is empty); SQL statement:
INSERT INTO operation_log  ( operation_type, operation_description, operation_time, operation_params,  operation_ip, operation_url, http_method, operation_status )  VALUES (  ?, ?, ?, ?,  ?, ?, ?, ?  ) [42104-224]
### The error may exist in com/gigass/trading/repository/OperationLogRepository.java (best guess)
### The error may involve com.gigass.trading.repository.OperationLogRepository.insert
### The error occurred while executing an update
### SQL: INSERT INTO operation_log  ( operation_type, operation_description, operation_time, operation_params,  operation_ip, operation_url, http_method, operation_status )  VALUES (  ?, ?, ?, ?,  ?, ?, ?, ?  )
### Cause: org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "OPERATION_LOG" not found (this database is empty); SQL statement:
INSERT INTO operation_log  ( operation_type, operation_description, operation_time, operation_params,  operation_ip, operation_url, http_method, operation_status )  VALUES (  ?, ?, ?, ?,  ?, ?, ?, ?  ) [42104-224]
; bad SQL grammar []
	at org.springframework.jdbc.support.SQLExceptionSubclassTranslator.doTranslate(SQLExceptionSubclassTranslator.java:103)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:107)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:116)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:92)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:439)
	at jdk.proxy2/jdk.proxy2.$Proxy106.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.execute(MybatisMapperMethod.java:59)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy$PlainMethodInvoker.invoke(MybatisMapperProxy.java:152)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy.invoke(MybatisMapperProxy.java:89)
	at jdk.proxy2/jdk.proxy2.$Proxy107.insert(Unknown Source)
	at com.gigass.trading.aspect.OperationLogAspect.doBefore(OperationLogAspect.java:90)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJMethodBeforeAdvice.before(AspectJMethodBeforeAdvice.java:44)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:57)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.DataAcquisitionService$$SpringCGLIB$$0.scheduledDataCollection(<generated>)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:130)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$2(ScheduledMethodRunnable.java:124)
	at io.micrometer.observation.Observation.observe(Observation.java:499)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:124)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:358)
	at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "OPERATION_LOG" not found (this database is empty); SQL statement:
INSERT INTO operation_log  ( operation_type, operation_description, operation_time, operation_params,  operation_ip, operation_url, http_method, operation_status )  VALUES (  ?, ?, ?, ?,  ?, ?, ?, ?  ) [42104-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.command.Parser.getTableOrViewNotFoundDbException(Parser.java:8051)
	at org.h2.command.Parser.getTableOrViewNotFoundDbException(Parser.java:8035)
	at org.h2.command.Parser.readTableOrView(Parser.java:8024)
	at org.h2.command.Parser.readTableOrView(Parser.java:7990)
	at org.h2.command.Parser.parseInsert(Parser.java:1540)
	at org.h2.command.Parser.parsePrepared(Parser.java:719)
	at org.h2.command.Parser.parse(Parser.java:592)
	at org.h2.command.Parser.parse(Parser.java:564)
	at org.h2.command.Parser.prepareCommand(Parser.java:483)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:639)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:559)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1166)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:93)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:1149)
	at com.p6spy.engine.wrapper.ConnectionWrapper.prepareStatement(ConnectionWrapper.java:143)
	at com.zaxxer.hikari.pool.ProxyConnection.prepareStatement(ProxyConnection.java:362)
	at com.zaxxer.hikari.pool.HikariProxyConnection.prepareStatement(HikariProxyConnection.java)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.apache.ibatis.logging.jdbc.ConnectionLogger.invoke(ConnectionLogger.java:53)
	at jdk.proxy3/jdk.proxy3.$Proxy102.prepareStatement(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.instantiateStatement(PreparedStatementHandler.java:84)
	at org.apache.ibatis.executor.statement.BaseStatementHandler.prepare(BaseStatementHandler.java:90)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.prepare(RoutingStatementHandler.java:60)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:90)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:49)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	... 34 common frames omitted
2025-07-22 17:28:07 [scheduling-1] INFO  c.g.t.service.DataAcquisitionService - 开始定时数据采集任务
2025-07-22 17:28:07 [main] ERROR c.g.t.aspect.OperationLogAspect - 记录操作日志失败
org.springframework.jdbc.BadSqlGrammarException: 
### Error updating database.  Cause: org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "OPERATION_LOG" not found (this database is empty); SQL statement:
INSERT INTO operation_log  ( operation_type, operation_description, operation_time,  operation_result,    operation_status )  VALUES (  ?, ?, ?,  ?,    ?  ) [42104-224]
### The error may exist in com/gigass/trading/repository/OperationLogRepository.java (best guess)
### The error may involve com.gigass.trading.repository.OperationLogRepository.insert
### The error occurred while executing an update
### SQL: INSERT INTO operation_log  ( operation_type, operation_description, operation_time,  operation_result,    operation_status )  VALUES (  ?, ?, ?,  ?,    ?  )
### Cause: org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "OPERATION_LOG" not found (this database is empty); SQL statement:
INSERT INTO operation_log  ( operation_type, operation_description, operation_time,  operation_result,    operation_status )  VALUES (  ?, ?, ?,  ?,    ?  ) [42104-224]
; bad SQL grammar []
	at org.springframework.jdbc.support.SQLExceptionSubclassTranslator.doTranslate(SQLExceptionSubclassTranslator.java:103)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:107)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:116)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:92)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:439)
	at jdk.proxy2/jdk.proxy2.$Proxy106.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.execute(MybatisMapperMethod.java:59)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy$PlainMethodInvoker.invoke(MybatisMapperProxy.java:152)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy.invoke(MybatisMapperProxy.java:89)
	at jdk.proxy2/jdk.proxy2.$Proxy107.insert(Unknown Source)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:119)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.module.acquisition.SocialMediaCrawlerFactory$$SpringCGLIB$$0.createCrawler(<generated>)
	at com.gigass.trading.demo.LifecycleDemo.run(LifecycleDemo.java:48)
	at org.springframework.boot.SpringApplication.lambda$callRunner$5(SpringApplication.java:798)
	at org.springframework.util.function.ThrowingConsumer$1.acceptWithException(ThrowingConsumer.java:83)
	at org.springframework.util.function.ThrowingConsumer.accept(ThrowingConsumer.java:60)
	at org.springframework.util.function.ThrowingConsumer$1.accept(ThrowingConsumer.java:88)
	at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:806)
	at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:797)
	at org.springframework.boot.SpringApplication.lambda$callRunners$3(SpringApplication.java:782)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.SortedOps$SizedRefSortingSink.end(SortedOps.java:357)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:510)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at org.springframework.boot.SpringApplication.callRunners(SpringApplication.java:782)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:341)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1358)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1347)
	at com.gigass.MarketVisionApplication.main(MarketVisionApplication.java:21)
Caused by: org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "OPERATION_LOG" not found (this database is empty); SQL statement:
INSERT INTO operation_log  ( operation_type, operation_description, operation_time,  operation_result,    operation_status )  VALUES (  ?, ?, ?,  ?,    ?  ) [42104-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.command.Parser.getTableOrViewNotFoundDbException(Parser.java:8051)
	at org.h2.command.Parser.getTableOrViewNotFoundDbException(Parser.java:8035)
	at org.h2.command.Parser.readTableOrView(Parser.java:8024)
	at org.h2.command.Parser.readTableOrView(Parser.java:7990)
	at org.h2.command.Parser.parseInsert(Parser.java:1540)
	at org.h2.command.Parser.parsePrepared(Parser.java:719)
	at org.h2.command.Parser.parse(Parser.java:592)
	at org.h2.command.Parser.parse(Parser.java:564)
	at org.h2.command.Parser.prepareCommand(Parser.java:483)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:639)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:559)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1166)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:93)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:1149)
	at com.p6spy.engine.wrapper.ConnectionWrapper.prepareStatement(ConnectionWrapper.java:143)
	at com.zaxxer.hikari.pool.ProxyConnection.prepareStatement(ProxyConnection.java:362)
	at com.zaxxer.hikari.pool.HikariProxyConnection.prepareStatement(HikariProxyConnection.java)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.apache.ibatis.logging.jdbc.ConnectionLogger.invoke(ConnectionLogger.java:53)
	at jdk.proxy3/jdk.proxy3.$Proxy102.prepareStatement(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.instantiateStatement(PreparedStatementHandler.java:84)
	at org.apache.ibatis.executor.statement.BaseStatementHandler.prepare(BaseStatementHandler.java:90)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.prepare(RoutingStatementHandler.java:60)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:90)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:49)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	... 44 common frames omitted
2025-07-22 17:28:07 [scheduling-1] ERROR c.g.t.aspect.OperationLogAspect - 记录操作日志失败
org.springframework.jdbc.BadSqlGrammarException: 
### Error updating database.  Cause: org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "OPERATION_LOG" not found (this database is empty); SQL statement:
INSERT INTO operation_log  ( operation_type, operation_description, operation_time, operation_params,  operation_ip, operation_url, http_method, operation_status )  VALUES (  ?, ?, ?, ?,  ?, ?, ?, ?  ) [42104-224]
### The error may exist in com/gigass/trading/repository/OperationLogRepository.java (best guess)
### The error may involve com.gigass.trading.repository.OperationLogRepository.insert
### The error occurred while executing an update
### SQL: INSERT INTO operation_log  ( operation_type, operation_description, operation_time, operation_params,  operation_ip, operation_url, http_method, operation_status )  VALUES (  ?, ?, ?, ?,  ?, ?, ?, ?  )
### Cause: org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "OPERATION_LOG" not found (this database is empty); SQL statement:
INSERT INTO operation_log  ( operation_type, operation_description, operation_time, operation_params,  operation_ip, operation_url, http_method, operation_status )  VALUES (  ?, ?, ?, ?,  ?, ?, ?, ?  ) [42104-224]
; bad SQL grammar []
	at org.springframework.jdbc.support.SQLExceptionSubclassTranslator.doTranslate(SQLExceptionSubclassTranslator.java:103)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:107)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:116)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:92)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:439)
	at jdk.proxy2/jdk.proxy2.$Proxy106.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.execute(MybatisMapperMethod.java:59)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy$PlainMethodInvoker.invoke(MybatisMapperProxy.java:152)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy.invoke(MybatisMapperProxy.java:89)
	at jdk.proxy2/jdk.proxy2.$Proxy107.insert(Unknown Source)
	at com.gigass.trading.aspect.OperationLogAspect.doBefore(OperationLogAspect.java:90)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJMethodBeforeAdvice.before(AspectJMethodBeforeAdvice.java:44)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:57)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.module.acquisition.SocialMediaCrawlerFactory$$SpringCGLIB$$0.getAllCrawlers(<generated>)
	at com.gigass.trading.service.DataAcquisitionService.scheduledDataCollection(DataAcquisitionService.java:36)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:352)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:64)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:57)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.DataAcquisitionService$$SpringCGLIB$$0.scheduledDataCollection(<generated>)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:130)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$2(ScheduledMethodRunnable.java:124)
	at io.micrometer.observation.Observation.observe(Observation.java:499)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:124)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:358)
	at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "OPERATION_LOG" not found (this database is empty); SQL statement:
INSERT INTO operation_log  ( operation_type, operation_description, operation_time, operation_params,  operation_ip, operation_url, http_method, operation_status )  VALUES (  ?, ?, ?, ?,  ?, ?, ?, ?  ) [42104-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.command.Parser.getTableOrViewNotFoundDbException(Parser.java:8051)
	at org.h2.command.Parser.getTableOrViewNotFoundDbException(Parser.java:8035)
	at org.h2.command.Parser.readTableOrView(Parser.java:8024)
	at org.h2.command.Parser.readTableOrView(Parser.java:7990)
	at org.h2.command.Parser.parseInsert(Parser.java:1540)
	at org.h2.command.Parser.parsePrepared(Parser.java:719)
	at org.h2.command.Parser.parse(Parser.java:592)
	at org.h2.command.Parser.parse(Parser.java:564)
	at org.h2.command.Parser.prepareCommand(Parser.java:483)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:639)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:559)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1166)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:93)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:1149)
	at com.p6spy.engine.wrapper.ConnectionWrapper.prepareStatement(ConnectionWrapper.java:143)
	at com.zaxxer.hikari.pool.ProxyConnection.prepareStatement(ProxyConnection.java:362)
	at com.zaxxer.hikari.pool.HikariProxyConnection.prepareStatement(HikariProxyConnection.java)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.apache.ibatis.logging.jdbc.ConnectionLogger.invoke(ConnectionLogger.java:53)
	at jdk.proxy3/jdk.proxy3.$Proxy102.prepareStatement(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.instantiateStatement(PreparedStatementHandler.java:84)
	at org.apache.ibatis.executor.statement.BaseStatementHandler.prepare(BaseStatementHandler.java:90)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.prepare(RoutingStatementHandler.java:60)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:90)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:49)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	... 55 common frames omitted
2025-07-22 17:28:07 [main] ERROR c.g.t.aspect.OperationLogAspect - 记录操作日志失败
org.springframework.jdbc.BadSqlGrammarException: 
### Error updating database.  Cause: org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "OPERATION_LOG" not found (this database is empty); SQL statement:
INSERT INTO operation_log  ( operation_type, operation_description, operation_time, operation_params,  operation_ip, operation_url, http_method, operation_status )  VALUES (  ?, ?, ?, ?,  ?, ?, ?, ?  ) [42104-224]
### The error may exist in com/gigass/trading/repository/OperationLogRepository.java (best guess)
### The error may involve com.gigass.trading.repository.OperationLogRepository.insert
### The error occurred while executing an update
### SQL: INSERT INTO operation_log  ( operation_type, operation_description, operation_time, operation_params,  operation_ip, operation_url, http_method, operation_status )  VALUES (  ?, ?, ?, ?,  ?, ?, ?, ?  )
### Cause: org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "OPERATION_LOG" not found (this database is empty); SQL statement:
INSERT INTO operation_log  ( operation_type, operation_description, operation_time, operation_params,  operation_ip, operation_url, http_method, operation_status )  VALUES (  ?, ?, ?, ?,  ?, ?, ?, ?  ) [42104-224]
; bad SQL grammar []
	at org.springframework.jdbc.support.SQLExceptionSubclassTranslator.doTranslate(SQLExceptionSubclassTranslator.java:103)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:107)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:116)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:92)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:439)
	at jdk.proxy2/jdk.proxy2.$Proxy106.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.execute(MybatisMapperMethod.java:59)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy$PlainMethodInvoker.invoke(MybatisMapperProxy.java:152)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy.invoke(MybatisMapperProxy.java:89)
	at jdk.proxy2/jdk.proxy2.$Proxy107.insert(Unknown Source)
	at com.gigass.trading.aspect.OperationLogAspect.doBefore(OperationLogAspect.java:90)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJMethodBeforeAdvice.before(AspectJMethodBeforeAdvice.java:44)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:57)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.DataAcquisitionService$$SpringCGLIB$$0.acquireData(<generated>)
	at com.gigass.trading.demo.LifecycleDemo.run(LifecycleDemo.java:49)
	at org.springframework.boot.SpringApplication.lambda$callRunner$5(SpringApplication.java:798)
	at org.springframework.util.function.ThrowingConsumer$1.acceptWithException(ThrowingConsumer.java:83)
	at org.springframework.util.function.ThrowingConsumer.accept(ThrowingConsumer.java:60)
	at org.springframework.util.function.ThrowingConsumer$1.accept(ThrowingConsumer.java:88)
	at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:806)
	at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:797)
	at org.springframework.boot.SpringApplication.lambda$callRunners$3(SpringApplication.java:782)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.SortedOps$SizedRefSortingSink.end(SortedOps.java:357)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:510)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at org.springframework.boot.SpringApplication.callRunners(SpringApplication.java:782)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:341)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1358)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1347)
	at com.gigass.MarketVisionApplication.main(MarketVisionApplication.java:21)
Caused by: org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "OPERATION_LOG" not found (this database is empty); SQL statement:
INSERT INTO operation_log  ( operation_type, operation_description, operation_time, operation_params,  operation_ip, operation_url, http_method, operation_status )  VALUES (  ?, ?, ?, ?,  ?, ?, ?, ?  ) [42104-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.command.Parser.getTableOrViewNotFoundDbException(Parser.java:8051)
	at org.h2.command.Parser.getTableOrViewNotFoundDbException(Parser.java:8035)
	at org.h2.command.Parser.readTableOrView(Parser.java:8024)
	at org.h2.command.Parser.readTableOrView(Parser.java:7990)
	at org.h2.command.Parser.parseInsert(Parser.java:1540)
	at org.h2.command.Parser.parsePrepared(Parser.java:719)
	at org.h2.command.Parser.parse(Parser.java:592)
	at org.h2.command.Parser.parse(Parser.java:564)
	at org.h2.command.Parser.prepareCommand(Parser.java:483)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:639)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:559)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1166)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:93)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:1149)
	at com.p6spy.engine.wrapper.ConnectionWrapper.prepareStatement(ConnectionWrapper.java:143)
	at com.zaxxer.hikari.pool.ProxyConnection.prepareStatement(ProxyConnection.java:362)
	at com.zaxxer.hikari.pool.HikariProxyConnection.prepareStatement(HikariProxyConnection.java)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.apache.ibatis.logging.jdbc.ConnectionLogger.invoke(ConnectionLogger.java:53)
	at jdk.proxy3/jdk.proxy3.$Proxy102.prepareStatement(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.instantiateStatement(PreparedStatementHandler.java:84)
	at org.apache.ibatis.executor.statement.BaseStatementHandler.prepare(BaseStatementHandler.java:90)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.prepare(RoutingStatementHandler.java:60)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:90)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:49)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	... 41 common frames omitted
2025-07-22 17:28:07 [scheduling-1] ERROR c.g.t.aspect.OperationLogAspect - 记录操作日志失败
org.springframework.jdbc.BadSqlGrammarException: 
### Error updating database.  Cause: org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "OPERATION_LOG" not found (this database is empty); SQL statement:
INSERT INTO operation_log  ( operation_type, operation_description, operation_time,  operation_result,    operation_status )  VALUES (  ?, ?, ?,  ?,    ?  ) [42104-224]
### The error may exist in com/gigass/trading/repository/OperationLogRepository.java (best guess)
### The error may involve com.gigass.trading.repository.OperationLogRepository.insert
### The error occurred while executing an update
### SQL: INSERT INTO operation_log  ( operation_type, operation_description, operation_time,  operation_result,    operation_status )  VALUES (  ?, ?, ?,  ?,    ?  )
### Cause: org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "OPERATION_LOG" not found (this database is empty); SQL statement:
INSERT INTO operation_log  ( operation_type, operation_description, operation_time,  operation_result,    operation_status )  VALUES (  ?, ?, ?,  ?,    ?  ) [42104-224]
; bad SQL grammar []
	at org.springframework.jdbc.support.SQLExceptionSubclassTranslator.doTranslate(SQLExceptionSubclassTranslator.java:103)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:107)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:116)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:92)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:439)
	at jdk.proxy2/jdk.proxy2.$Proxy106.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.execute(MybatisMapperMethod.java:59)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy$PlainMethodInvoker.invoke(MybatisMapperProxy.java:152)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy.invoke(MybatisMapperProxy.java:89)
	at jdk.proxy2/jdk.proxy2.$Proxy107.insert(Unknown Source)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:119)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.module.acquisition.SocialMediaCrawlerFactory$$SpringCGLIB$$0.getAllCrawlers(<generated>)
	at com.gigass.trading.service.DataAcquisitionService.scheduledDataCollection(DataAcquisitionService.java:36)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:352)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:64)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:57)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.DataAcquisitionService$$SpringCGLIB$$0.scheduledDataCollection(<generated>)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:130)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$2(ScheduledMethodRunnable.java:124)
	at io.micrometer.observation.Observation.observe(Observation.java:499)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:124)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:358)
	at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "OPERATION_LOG" not found (this database is empty); SQL statement:
INSERT INTO operation_log  ( operation_type, operation_description, operation_time,  operation_result,    operation_status )  VALUES (  ?, ?, ?,  ?,    ?  ) [42104-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.command.Parser.getTableOrViewNotFoundDbException(Parser.java:8051)
	at org.h2.command.Parser.getTableOrViewNotFoundDbException(Parser.java:8035)
	at org.h2.command.Parser.readTableOrView(Parser.java:8024)
	at org.h2.command.Parser.readTableOrView(Parser.java:7990)
	at org.h2.command.Parser.parseInsert(Parser.java:1540)
	at org.h2.command.Parser.parsePrepared(Parser.java:719)
	at org.h2.command.Parser.parse(Parser.java:592)
	at org.h2.command.Parser.parse(Parser.java:564)
	at org.h2.command.Parser.prepareCommand(Parser.java:483)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:639)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:559)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1166)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:93)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:1149)
	at com.p6spy.engine.wrapper.ConnectionWrapper.prepareStatement(ConnectionWrapper.java:143)
	at com.zaxxer.hikari.pool.ProxyConnection.prepareStatement(ProxyConnection.java:362)
	at com.zaxxer.hikari.pool.HikariProxyConnection.prepareStatement(HikariProxyConnection.java)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.apache.ibatis.logging.jdbc.ConnectionLogger.invoke(ConnectionLogger.java:53)
	at jdk.proxy3/jdk.proxy3.$Proxy102.prepareStatement(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.instantiateStatement(PreparedStatementHandler.java:84)
	at org.apache.ibatis.executor.statement.BaseStatementHandler.prepare(BaseStatementHandler.java:90)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.prepare(RoutingStatementHandler.java:60)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:90)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:49)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	... 58 common frames omitted
2025-07-22 17:28:07 [scheduling-1] ERROR c.g.t.aspect.OperationLogAspect - 记录操作日志失败
org.springframework.jdbc.BadSqlGrammarException: 
### Error updating database.  Cause: org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "OPERATION_LOG" not found (this database is empty); SQL statement:
INSERT INTO operation_log  ( operation_type, operation_description, operation_time,  operation_result,    operation_status )  VALUES (  ?, ?, ?,  ?,    ?  ) [42104-224]
### The error may exist in com/gigass/trading/repository/OperationLogRepository.java (best guess)
### The error may involve com.gigass.trading.repository.OperationLogRepository.insert
### The error occurred while executing an update
### SQL: INSERT INTO operation_log  ( operation_type, operation_description, operation_time,  operation_result,    operation_status )  VALUES (  ?, ?, ?,  ?,    ?  )
### Cause: org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "OPERATION_LOG" not found (this database is empty); SQL statement:
INSERT INTO operation_log  ( operation_type, operation_description, operation_time,  operation_result,    operation_status )  VALUES (  ?, ?, ?,  ?,    ?  ) [42104-224]
; bad SQL grammar []
	at org.springframework.jdbc.support.SQLExceptionSubclassTranslator.doTranslate(SQLExceptionSubclassTranslator.java:103)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:107)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:116)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:92)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:439)
	at jdk.proxy2/jdk.proxy2.$Proxy106.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.execute(MybatisMapperMethod.java:59)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy$PlainMethodInvoker.invoke(MybatisMapperProxy.java:152)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy.invoke(MybatisMapperProxy.java:89)
	at jdk.proxy2/jdk.proxy2.$Proxy107.insert(Unknown Source)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:119)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.DataAcquisitionService$$SpringCGLIB$$0.scheduledDataCollection(<generated>)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:130)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$2(ScheduledMethodRunnable.java:124)
	at io.micrometer.observation.Observation.observe(Observation.java:499)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:124)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:358)
	at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "OPERATION_LOG" not found (this database is empty); SQL statement:
INSERT INTO operation_log  ( operation_type, operation_description, operation_time,  operation_result,    operation_status )  VALUES (  ?, ?, ?,  ?,    ?  ) [42104-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.command.Parser.getTableOrViewNotFoundDbException(Parser.java:8051)
	at org.h2.command.Parser.getTableOrViewNotFoundDbException(Parser.java:8035)
	at org.h2.command.Parser.readTableOrView(Parser.java:8024)
	at org.h2.command.Parser.readTableOrView(Parser.java:7990)
	at org.h2.command.Parser.parseInsert(Parser.java:1540)
	at org.h2.command.Parser.parsePrepared(Parser.java:719)
	at org.h2.command.Parser.parse(Parser.java:592)
	at org.h2.command.Parser.parse(Parser.java:564)
	at org.h2.command.Parser.prepareCommand(Parser.java:483)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:639)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:559)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1166)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:93)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:1149)
	at com.p6spy.engine.wrapper.ConnectionWrapper.prepareStatement(ConnectionWrapper.java:143)
	at com.zaxxer.hikari.pool.ProxyConnection.prepareStatement(ProxyConnection.java:362)
	at com.zaxxer.hikari.pool.HikariProxyConnection.prepareStatement(HikariProxyConnection.java)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.apache.ibatis.logging.jdbc.ConnectionLogger.invoke(ConnectionLogger.java:53)
	at jdk.proxy3/jdk.proxy3.$Proxy102.prepareStatement(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.instantiateStatement(PreparedStatementHandler.java:84)
	at org.apache.ibatis.executor.statement.BaseStatementHandler.prepare(BaseStatementHandler.java:90)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.prepare(RoutingStatementHandler.java:60)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:90)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:49)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	... 37 common frames omitted
2025-07-22 17:28:07 [main] ERROR c.g.t.aspect.OperationLogAspect - 记录操作日志失败
org.springframework.jdbc.BadSqlGrammarException: 
### Error updating database.  Cause: org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "OPERATION_LOG" not found (this database is empty); SQL statement:
INSERT INTO operation_log  ( operation_type, operation_description, operation_time,  operation_result,    operation_status )  VALUES (  ?, ?, ?,  ?,    ?  ) [42104-224]
### The error may exist in com/gigass/trading/repository/OperationLogRepository.java (best guess)
### The error may involve com.gigass.trading.repository.OperationLogRepository.insert
### The error occurred while executing an update
### SQL: INSERT INTO operation_log  ( operation_type, operation_description, operation_time,  operation_result,    operation_status )  VALUES (  ?, ?, ?,  ?,    ?  )
### Cause: org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "OPERATION_LOG" not found (this database is empty); SQL statement:
INSERT INTO operation_log  ( operation_type, operation_description, operation_time,  operation_result,    operation_status )  VALUES (  ?, ?, ?,  ?,    ?  ) [42104-224]
; bad SQL grammar []
	at org.springframework.jdbc.support.SQLExceptionSubclassTranslator.doTranslate(SQLExceptionSubclassTranslator.java:103)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:107)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:116)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:92)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:439)
	at jdk.proxy2/jdk.proxy2.$Proxy106.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.execute(MybatisMapperMethod.java:59)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy$PlainMethodInvoker.invoke(MybatisMapperProxy.java:152)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy.invoke(MybatisMapperProxy.java:89)
	at jdk.proxy2/jdk.proxy2.$Proxy107.insert(Unknown Source)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:119)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.DataAcquisitionService$$SpringCGLIB$$0.acquireData(<generated>)
	at com.gigass.trading.demo.LifecycleDemo.run(LifecycleDemo.java:49)
	at org.springframework.boot.SpringApplication.lambda$callRunner$5(SpringApplication.java:798)
	at org.springframework.util.function.ThrowingConsumer$1.acceptWithException(ThrowingConsumer.java:83)
	at org.springframework.util.function.ThrowingConsumer.accept(ThrowingConsumer.java:60)
	at org.springframework.util.function.ThrowingConsumer$1.accept(ThrowingConsumer.java:88)
	at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:806)
	at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:797)
	at org.springframework.boot.SpringApplication.lambda$callRunners$3(SpringApplication.java:782)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.SortedOps$SizedRefSortingSink.end(SortedOps.java:357)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:510)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at org.springframework.boot.SpringApplication.callRunners(SpringApplication.java:782)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:341)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1358)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1347)
	at com.gigass.MarketVisionApplication.main(MarketVisionApplication.java:21)
Caused by: org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "OPERATION_LOG" not found (this database is empty); SQL statement:
INSERT INTO operation_log  ( operation_type, operation_description, operation_time,  operation_result,    operation_status )  VALUES (  ?, ?, ?,  ?,    ?  ) [42104-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.command.Parser.getTableOrViewNotFoundDbException(Parser.java:8051)
	at org.h2.command.Parser.getTableOrViewNotFoundDbException(Parser.java:8035)
	at org.h2.command.Parser.readTableOrView(Parser.java:8024)
	at org.h2.command.Parser.readTableOrView(Parser.java:7990)
	at org.h2.command.Parser.parseInsert(Parser.java:1540)
	at org.h2.command.Parser.parsePrepared(Parser.java:719)
	at org.h2.command.Parser.parse(Parser.java:592)
	at org.h2.command.Parser.parse(Parser.java:564)
	at org.h2.command.Parser.prepareCommand(Parser.java:483)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:639)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:559)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1166)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:93)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:1149)
	at com.p6spy.engine.wrapper.ConnectionWrapper.prepareStatement(ConnectionWrapper.java:143)
	at com.zaxxer.hikari.pool.ProxyConnection.prepareStatement(ProxyConnection.java:362)
	at com.zaxxer.hikari.pool.HikariProxyConnection.prepareStatement(HikariProxyConnection.java)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.apache.ibatis.logging.jdbc.ConnectionLogger.invoke(ConnectionLogger.java:53)
	at jdk.proxy3/jdk.proxy3.$Proxy102.prepareStatement(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.instantiateStatement(PreparedStatementHandler.java:84)
	at org.apache.ibatis.executor.statement.BaseStatementHandler.prepare(BaseStatementHandler.java:90)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.prepare(RoutingStatementHandler.java:60)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:90)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:49)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	... 44 common frames omitted
2025-07-22 17:28:07 [main] ERROR c.g.t.aspect.OperationLogAspect - 记录操作日志失败
org.springframework.jdbc.BadSqlGrammarException: 
### Error updating database.  Cause: org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "OPERATION_LOG" not found (this database is empty); SQL statement:
INSERT INTO operation_log  ( operation_type, operation_description, operation_time, operation_params,  operation_ip, operation_url, http_method, operation_status )  VALUES (  ?, ?, ?, ?,  ?, ?, ?, ?  ) [42104-224]
### The error may exist in com/gigass/trading/repository/OperationLogRepository.java (best guess)
### The error may involve com.gigass.trading.repository.OperationLogRepository.insert
### The error occurred while executing an update
### SQL: INSERT INTO operation_log  ( operation_type, operation_description, operation_time, operation_params,  operation_ip, operation_url, http_method, operation_status )  VALUES (  ?, ?, ?, ?,  ?, ?, ?, ?  )
### Cause: org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "OPERATION_LOG" not found (this database is empty); SQL statement:
INSERT INTO operation_log  ( operation_type, operation_description, operation_time, operation_params,  operation_ip, operation_url, http_method, operation_status )  VALUES (  ?, ?, ?, ?,  ?, ?, ?, ?  ) [42104-224]
; bad SQL grammar []
	at org.springframework.jdbc.support.SQLExceptionSubclassTranslator.doTranslate(SQLExceptionSubclassTranslator.java:103)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:107)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:116)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:92)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:439)
	at jdk.proxy2/jdk.proxy2.$Proxy106.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.execute(MybatisMapperMethod.java:59)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy$PlainMethodInvoker.invoke(MybatisMapperProxy.java:152)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy.invoke(MybatisMapperProxy.java:89)
	at jdk.proxy2/jdk.proxy2.$Proxy107.insert(Unknown Source)
	at com.gigass.trading.aspect.OperationLogAspect.doBefore(OperationLogAspect.java:90)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJMethodBeforeAdvice.before(AspectJMethodBeforeAdvice.java:44)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:57)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.module.base.HotsearchProcessor$$SpringCGLIB$$0.processHotsearchData(<generated>)
	at com.gigass.trading.demo.LifecycleDemo.run(LifecycleDemo.java:50)
	at org.springframework.boot.SpringApplication.lambda$callRunner$5(SpringApplication.java:798)
	at org.springframework.util.function.ThrowingConsumer$1.acceptWithException(ThrowingConsumer.java:83)
	at org.springframework.util.function.ThrowingConsumer.accept(ThrowingConsumer.java:60)
	at org.springframework.util.function.ThrowingConsumer$1.accept(ThrowingConsumer.java:88)
	at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:806)
	at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:797)
	at org.springframework.boot.SpringApplication.lambda$callRunners$3(SpringApplication.java:782)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.SortedOps$SizedRefSortingSink.end(SortedOps.java:357)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:510)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at org.springframework.boot.SpringApplication.callRunners(SpringApplication.java:782)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:341)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1358)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1347)
	at com.gigass.MarketVisionApplication.main(MarketVisionApplication.java:21)
Caused by: org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "OPERATION_LOG" not found (this database is empty); SQL statement:
INSERT INTO operation_log  ( operation_type, operation_description, operation_time, operation_params,  operation_ip, operation_url, http_method, operation_status )  VALUES (  ?, ?, ?, ?,  ?, ?, ?, ?  ) [42104-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.command.Parser.getTableOrViewNotFoundDbException(Parser.java:8051)
	at org.h2.command.Parser.getTableOrViewNotFoundDbException(Parser.java:8035)
	at org.h2.command.Parser.readTableOrView(Parser.java:8024)
	at org.h2.command.Parser.readTableOrView(Parser.java:7990)
	at org.h2.command.Parser.parseInsert(Parser.java:1540)
	at org.h2.command.Parser.parsePrepared(Parser.java:719)
	at org.h2.command.Parser.parse(Parser.java:592)
	at org.h2.command.Parser.parse(Parser.java:564)
	at org.h2.command.Parser.prepareCommand(Parser.java:483)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:639)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:559)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1166)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:93)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:1149)
	at com.p6spy.engine.wrapper.ConnectionWrapper.prepareStatement(ConnectionWrapper.java:143)
	at com.zaxxer.hikari.pool.ProxyConnection.prepareStatement(ProxyConnection.java:362)
	at com.zaxxer.hikari.pool.HikariProxyConnection.prepareStatement(HikariProxyConnection.java)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.apache.ibatis.logging.jdbc.ConnectionLogger.invoke(ConnectionLogger.java:53)
	at jdk.proxy3/jdk.proxy3.$Proxy102.prepareStatement(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.instantiateStatement(PreparedStatementHandler.java:84)
	at org.apache.ibatis.executor.statement.BaseStatementHandler.prepare(BaseStatementHandler.java:90)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.prepare(RoutingStatementHandler.java:60)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:90)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:49)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	... 41 common frames omitted
2025-07-22 17:28:07 [main] ERROR c.g.t.aspect.OperationLogAspect - 记录操作日志失败
org.springframework.jdbc.BadSqlGrammarException: 
### Error updating database.  Cause: org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "OPERATION_LOG" not found (this database is empty); SQL statement:
INSERT INTO operation_log  ( operation_type, operation_description, operation_time,  operation_result,    operation_status )  VALUES (  ?, ?, ?,  ?,    ?  ) [42104-224]
### The error may exist in com/gigass/trading/repository/OperationLogRepository.java (best guess)
### The error may involve com.gigass.trading.repository.OperationLogRepository.insert
### The error occurred while executing an update
### SQL: INSERT INTO operation_log  ( operation_type, operation_description, operation_time,  operation_result,    operation_status )  VALUES (  ?, ?, ?,  ?,    ?  )
### Cause: org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "OPERATION_LOG" not found (this database is empty); SQL statement:
INSERT INTO operation_log  ( operation_type, operation_description, operation_time,  operation_result,    operation_status )  VALUES (  ?, ?, ?,  ?,    ?  ) [42104-224]
; bad SQL grammar []
	at org.springframework.jdbc.support.SQLExceptionSubclassTranslator.doTranslate(SQLExceptionSubclassTranslator.java:103)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:107)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:116)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:92)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:439)
	at jdk.proxy2/jdk.proxy2.$Proxy106.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.execute(MybatisMapperMethod.java:59)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy$PlainMethodInvoker.invoke(MybatisMapperProxy.java:152)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy.invoke(MybatisMapperProxy.java:89)
	at jdk.proxy2/jdk.proxy2.$Proxy107.insert(Unknown Source)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:119)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.module.base.HotsearchProcessor$$SpringCGLIB$$0.processHotsearchData(<generated>)
	at com.gigass.trading.demo.LifecycleDemo.run(LifecycleDemo.java:50)
	at org.springframework.boot.SpringApplication.lambda$callRunner$5(SpringApplication.java:798)
	at org.springframework.util.function.ThrowingConsumer$1.acceptWithException(ThrowingConsumer.java:83)
	at org.springframework.util.function.ThrowingConsumer.accept(ThrowingConsumer.java:60)
	at org.springframework.util.function.ThrowingConsumer$1.accept(ThrowingConsumer.java:88)
	at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:806)
	at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:797)
	at org.springframework.boot.SpringApplication.lambda$callRunners$3(SpringApplication.java:782)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.SortedOps$SizedRefSortingSink.end(SortedOps.java:357)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:510)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at org.springframework.boot.SpringApplication.callRunners(SpringApplication.java:782)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:341)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1358)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1347)
	at com.gigass.MarketVisionApplication.main(MarketVisionApplication.java:21)
Caused by: org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "OPERATION_LOG" not found (this database is empty); SQL statement:
INSERT INTO operation_log  ( operation_type, operation_description, operation_time,  operation_result,    operation_status )  VALUES (  ?, ?, ?,  ?,    ?  ) [42104-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.command.Parser.getTableOrViewNotFoundDbException(Parser.java:8051)
	at org.h2.command.Parser.getTableOrViewNotFoundDbException(Parser.java:8035)
	at org.h2.command.Parser.readTableOrView(Parser.java:8024)
	at org.h2.command.Parser.readTableOrView(Parser.java:7990)
	at org.h2.command.Parser.parseInsert(Parser.java:1540)
	at org.h2.command.Parser.parsePrepared(Parser.java:719)
	at org.h2.command.Parser.parse(Parser.java:592)
	at org.h2.command.Parser.parse(Parser.java:564)
	at org.h2.command.Parser.prepareCommand(Parser.java:483)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:639)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:559)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1166)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:93)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:1149)
	at com.p6spy.engine.wrapper.ConnectionWrapper.prepareStatement(ConnectionWrapper.java:143)
	at com.zaxxer.hikari.pool.ProxyConnection.prepareStatement(ProxyConnection.java:362)
	at com.zaxxer.hikari.pool.HikariProxyConnection.prepareStatement(HikariProxyConnection.java)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.apache.ibatis.logging.jdbc.ConnectionLogger.invoke(ConnectionLogger.java:53)
	at jdk.proxy3/jdk.proxy3.$Proxy102.prepareStatement(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.instantiateStatement(PreparedStatementHandler.java:84)
	at org.apache.ibatis.executor.statement.BaseStatementHandler.prepare(BaseStatementHandler.java:90)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.prepare(RoutingStatementHandler.java:60)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:90)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:49)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	... 44 common frames omitted
2025-07-22 17:28:07 [main] INFO  com.gigass.MarketVisionApplication - 热搜驱动交易系统启动完成！
2025-07-22 17:28:08 [RMI TCP Connection(3)-127.0.0.1] INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-07-22 17:28:08 [RMI TCP Connection(3)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-07-22 17:28:08 [RMI TCP Connection(3)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-07-22 17:28:24 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-07-22 17:28:24 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-07-22 19:24:32 [main] INFO  com.gigass.MarketVisionApplication - Starting MarketVisionApplication using Java 21.0.8 with PID 63369 (/Users/gigass/DEVELOP/GitHub/MarketVision/target/classes started by gigass in /Users/gigass/DEVELOP/GitHub/MarketVision)
2025-07-22 19:24:32 [main] DEBUG com.gigass.MarketVisionApplication - Running with Spring Boot v3.2.1, Spring v6.1.2
2025-07-22 19:24:32 [main] INFO  com.gigass.MarketVisionApplication - No active profile set, falling back to 1 default profile: "default"
2025-07-22 19:24:33 [main] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=00ad12f1-0b22-30e5-9a0b-8566477b3b7e
2025-07-22 19:24:33 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$RetryInterceptorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$RetryInterceptorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2025-07-22 19:24:33 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-22 19:24:33 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-22 19:24:33 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' of type [org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-22 19:24:33 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-22 19:24:33 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerClientsDefaultsMappingsProvider' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda/0x00000005015559b8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-22 19:24:33 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'defaultsBindHandlerAdvisor' of type [org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-22 19:24:33 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.cloud.loadbalancer-org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-22 19:24:33 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-22 19:24:33 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-22 19:24:33 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerClientFactory' of type [org.springframework.cloud.loadbalancer.support.LoadBalancerClientFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-22 19:24:33 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'blockingLoadBalancerClient' of type [org.springframework.cloud.loadbalancer.blocking.client.BlockingLoadBalancerClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-22 19:24:33 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerServiceInstanceCookieTransformer' of type [org.springframework.cloud.loadbalancer.core.LoadBalancerServiceInstanceCookieTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-22 19:24:33 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'xForwarderHeadersTransformer' of type [org.springframework.cloud.loadbalancer.blocking.XForwardedHeadersTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-22 19:24:33 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-22 19:24:33 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerRequestFactory' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerRequestFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-22 19:24:33 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerRetryConfig' of type [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerRetryConfig$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-22 19:24:33 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancedRetryFactory' of type [org.springframework.cloud.loadbalancer.blocking.retry.BlockingLoadBalancedRetryFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-22 19:24:33 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.RetryLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-22 19:24:33 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2025-07-22 19:24:33 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-22 19:24:33 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-22 19:24:33 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-07-22 19:24:33 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-07-22 19:24:33 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.17]
2025-07-22 19:24:33 [main] INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring embedded WebApplicationContext
2025-07-22 19:24:33 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1495 ms
2025-07-22 19:24:34 [main] ERROR i.n.r.d.DnsServerAddressStreamProviders - Unable to load io.netty.resolver.dns.macos.MacOSDnsServerAddressStreamProvider, fallback to system defaults. This may result in incorrect DNS resolutions on MacOS. Check whether you have a dependency on 'io.netty:netty-resolver-dns-native-macos'. Use DEBUG level to see the full stack: java.lang.UnsatisfiedLinkError: failed to load the required native library
2025-07-22 19:24:35 [main] WARN  o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2025-07-22 19:24:35 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 3 endpoint(s) beneath base path '/actuator'
2025-07-22 19:24:35 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/api'
2025-07-22 19:24:35 [main] INFO  com.gigass.MarketVisionApplication - Started MarketVisionApplication in 3.365 seconds (process running for 5.112)
2025-07-22 19:24:35 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-07-22 19:24:35 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.p6spy.engine.wrapper.ConnectionWrapper@40fd25c7
2025-07-22 19:24:35 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-07-22 19:24:35 [main] ERROR c.g.t.aspect.OperationLogAspect - 记录操作日志失败
org.springframework.jdbc.BadSqlGrammarException: 
### Error updating database.  Cause: java.sql.SQLSyntaxErrorException: Table 'marketvision.operation_log' doesn't exist
### The error may exist in com/gigass/trading/repository/OperationLogRepository.java (best guess)
### The error may involve com.gigass.trading.repository.OperationLogRepository.insert-Inline
### The error occurred while setting parameters
### SQL: INSERT INTO operation_log  ( operation_type, operation_description, operation_time, operation_params,  operation_ip, operation_url, http_method, operation_status )  VALUES (  ?, ?, ?, ?,  ?, ?, ?, ?  )
### Cause: java.sql.SQLSyntaxErrorException: Table 'marketvision.operation_log' doesn't exist
; bad SQL grammar []
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:246)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:107)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:92)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:439)
	at jdk.proxy2/jdk.proxy2.$Proxy105.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.execute(MybatisMapperMethod.java:59)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy$PlainMethodInvoker.invoke(MybatisMapperProxy.java:152)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy.invoke(MybatisMapperProxy.java:89)
	at jdk.proxy2/jdk.proxy2.$Proxy106.insert(Unknown Source)
	at com.gigass.trading.aspect.OperationLogAspect.doBefore(OperationLogAspect.java:90)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJMethodBeforeAdvice.before(AspectJMethodBeforeAdvice.java:44)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:57)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.module.acquisition.SocialMediaCrawlerFactory$$SpringCGLIB$$0.createCrawler(<generated>)
	at com.gigass.trading.demo.LifecycleDemo.run(LifecycleDemo.java:48)
	at org.springframework.boot.SpringApplication.lambda$callRunner$5(SpringApplication.java:798)
	at org.springframework.util.function.ThrowingConsumer$1.acceptWithException(ThrowingConsumer.java:83)
	at org.springframework.util.function.ThrowingConsumer.accept(ThrowingConsumer.java:60)
	at org.springframework.util.function.ThrowingConsumer$1.accept(ThrowingConsumer.java:88)
	at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:806)
	at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:797)
	at org.springframework.boot.SpringApplication.lambda$callRunners$3(SpringApplication.java:782)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.SortedOps$SizedRefSortingSink.end(SortedOps.java:357)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:510)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at org.springframework.boot.SpringApplication.callRunners(SpringApplication.java:782)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:341)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1358)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1347)
	at com.gigass.MarketVisionApplication.main(MarketVisionApplication.java:21)
Caused by: java.sql.SQLSyntaxErrorException: Table 'marketvision.operation_log' doesn't exist
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:912)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:354)
	at com.p6spy.engine.wrapper.PreparedStatementWrapper.execute(PreparedStatementWrapper.java:362)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:58)
	at jdk.proxy3/jdk.proxy3.$Proxy131.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	... 41 common frames omitted
2025-07-22 19:24:35 [scheduling-1] ERROR c.g.t.aspect.OperationLogAspect - 记录操作日志失败
org.springframework.jdbc.BadSqlGrammarException: 
### Error updating database.  Cause: java.sql.SQLSyntaxErrorException: Table 'marketvision.operation_log' doesn't exist
### The error may exist in com/gigass/trading/repository/OperationLogRepository.java (best guess)
### The error may involve com.gigass.trading.repository.OperationLogRepository.insert-Inline
### The error occurred while setting parameters
### SQL: INSERT INTO operation_log  ( operation_type, operation_description, operation_time, operation_params,  operation_ip, operation_url, http_method, operation_status )  VALUES (  ?, ?, ?, ?,  ?, ?, ?, ?  )
### Cause: java.sql.SQLSyntaxErrorException: Table 'marketvision.operation_log' doesn't exist
; bad SQL grammar []
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:246)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:107)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:92)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:439)
	at jdk.proxy2/jdk.proxy2.$Proxy105.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.execute(MybatisMapperMethod.java:59)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy$PlainMethodInvoker.invoke(MybatisMapperProxy.java:152)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy.invoke(MybatisMapperProxy.java:89)
	at jdk.proxy2/jdk.proxy2.$Proxy106.insert(Unknown Source)
	at com.gigass.trading.aspect.OperationLogAspect.doBefore(OperationLogAspect.java:90)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJMethodBeforeAdvice.before(AspectJMethodBeforeAdvice.java:44)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:57)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.DataAcquisitionService$$SpringCGLIB$$0.scheduledDataCollection(<generated>)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:130)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$2(ScheduledMethodRunnable.java:124)
	at io.micrometer.observation.Observation.observe(Observation.java:499)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:124)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:358)
	at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: java.sql.SQLSyntaxErrorException: Table 'marketvision.operation_log' doesn't exist
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:912)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:354)
	at com.p6spy.engine.wrapper.PreparedStatementWrapper.execute(PreparedStatementWrapper.java:362)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:58)
	at jdk.proxy3/jdk.proxy3.$Proxy131.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	... 34 common frames omitted
2025-07-22 19:24:35 [scheduling-1] INFO  c.g.t.service.DataAcquisitionService - 开始定时数据采集任务
2025-07-22 19:24:35 [main] ERROR c.g.t.aspect.OperationLogAspect - 记录操作日志失败
org.springframework.jdbc.BadSqlGrammarException: 
### Error updating database.  Cause: java.sql.SQLSyntaxErrorException: Table 'marketvision.operation_log' doesn't exist
### The error may exist in com/gigass/trading/repository/OperationLogRepository.java (best guess)
### The error may involve com.gigass.trading.repository.OperationLogRepository.insert-Inline
### The error occurred while setting parameters
### SQL: INSERT INTO operation_log  ( operation_type, operation_description, operation_time,  operation_result,    operation_status )  VALUES (  ?, ?, ?,  ?,    ?  )
### Cause: java.sql.SQLSyntaxErrorException: Table 'marketvision.operation_log' doesn't exist
; bad SQL grammar []
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:246)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:107)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:92)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:439)
	at jdk.proxy2/jdk.proxy2.$Proxy105.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.execute(MybatisMapperMethod.java:59)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy$PlainMethodInvoker.invoke(MybatisMapperProxy.java:152)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy.invoke(MybatisMapperProxy.java:89)
	at jdk.proxy2/jdk.proxy2.$Proxy106.insert(Unknown Source)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:119)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.module.acquisition.SocialMediaCrawlerFactory$$SpringCGLIB$$0.createCrawler(<generated>)
	at com.gigass.trading.demo.LifecycleDemo.run(LifecycleDemo.java:48)
	at org.springframework.boot.SpringApplication.lambda$callRunner$5(SpringApplication.java:798)
	at org.springframework.util.function.ThrowingConsumer$1.acceptWithException(ThrowingConsumer.java:83)
	at org.springframework.util.function.ThrowingConsumer.accept(ThrowingConsumer.java:60)
	at org.springframework.util.function.ThrowingConsumer$1.accept(ThrowingConsumer.java:88)
	at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:806)
	at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:797)
	at org.springframework.boot.SpringApplication.lambda$callRunners$3(SpringApplication.java:782)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.SortedOps$SizedRefSortingSink.end(SortedOps.java:357)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:510)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at org.springframework.boot.SpringApplication.callRunners(SpringApplication.java:782)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:341)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1358)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1347)
	at com.gigass.MarketVisionApplication.main(MarketVisionApplication.java:21)
Caused by: java.sql.SQLSyntaxErrorException: Table 'marketvision.operation_log' doesn't exist
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:912)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:354)
	at com.p6spy.engine.wrapper.PreparedStatementWrapper.execute(PreparedStatementWrapper.java:362)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:58)
	at jdk.proxy3/jdk.proxy3.$Proxy131.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	... 44 common frames omitted
2025-07-22 19:24:35 [scheduling-1] ERROR c.g.t.aspect.OperationLogAspect - 记录操作日志失败
org.springframework.jdbc.BadSqlGrammarException: 
### Error updating database.  Cause: java.sql.SQLSyntaxErrorException: Table 'marketvision.operation_log' doesn't exist
### The error may exist in com/gigass/trading/repository/OperationLogRepository.java (best guess)
### The error may involve com.gigass.trading.repository.OperationLogRepository.insert-Inline
### The error occurred while setting parameters
### SQL: INSERT INTO operation_log  ( operation_type, operation_description, operation_time, operation_params,  operation_ip, operation_url, http_method, operation_status )  VALUES (  ?, ?, ?, ?,  ?, ?, ?, ?  )
### Cause: java.sql.SQLSyntaxErrorException: Table 'marketvision.operation_log' doesn't exist
; bad SQL grammar []
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:246)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:107)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:92)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:439)
	at jdk.proxy2/jdk.proxy2.$Proxy105.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.execute(MybatisMapperMethod.java:59)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy$PlainMethodInvoker.invoke(MybatisMapperProxy.java:152)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy.invoke(MybatisMapperProxy.java:89)
	at jdk.proxy2/jdk.proxy2.$Proxy106.insert(Unknown Source)
	at com.gigass.trading.aspect.OperationLogAspect.doBefore(OperationLogAspect.java:90)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJMethodBeforeAdvice.before(AspectJMethodBeforeAdvice.java:44)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:57)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.module.acquisition.SocialMediaCrawlerFactory$$SpringCGLIB$$0.getAllCrawlers(<generated>)
	at com.gigass.trading.service.DataAcquisitionService.scheduledDataCollection(DataAcquisitionService.java:36)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:352)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:64)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:57)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.DataAcquisitionService$$SpringCGLIB$$0.scheduledDataCollection(<generated>)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:130)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$2(ScheduledMethodRunnable.java:124)
	at io.micrometer.observation.Observation.observe(Observation.java:499)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:124)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:358)
	at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: java.sql.SQLSyntaxErrorException: Table 'marketvision.operation_log' doesn't exist
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:912)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:354)
	at com.p6spy.engine.wrapper.PreparedStatementWrapper.execute(PreparedStatementWrapper.java:362)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:58)
	at jdk.proxy3/jdk.proxy3.$Proxy131.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	... 55 common frames omitted
2025-07-22 19:24:35 [main] ERROR c.g.t.aspect.OperationLogAspect - 记录操作日志失败
org.springframework.jdbc.BadSqlGrammarException: 
### Error updating database.  Cause: java.sql.SQLSyntaxErrorException: Table 'marketvision.operation_log' doesn't exist
### The error may exist in com/gigass/trading/repository/OperationLogRepository.java (best guess)
### The error may involve com.gigass.trading.repository.OperationLogRepository.insert-Inline
### The error occurred while setting parameters
### SQL: INSERT INTO operation_log  ( operation_type, operation_description, operation_time, operation_params,  operation_ip, operation_url, http_method, operation_status )  VALUES (  ?, ?, ?, ?,  ?, ?, ?, ?  )
### Cause: java.sql.SQLSyntaxErrorException: Table 'marketvision.operation_log' doesn't exist
; bad SQL grammar []
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:246)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:107)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:92)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:439)
	at jdk.proxy2/jdk.proxy2.$Proxy105.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.execute(MybatisMapperMethod.java:59)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy$PlainMethodInvoker.invoke(MybatisMapperProxy.java:152)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy.invoke(MybatisMapperProxy.java:89)
	at jdk.proxy2/jdk.proxy2.$Proxy106.insert(Unknown Source)
	at com.gigass.trading.aspect.OperationLogAspect.doBefore(OperationLogAspect.java:90)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJMethodBeforeAdvice.before(AspectJMethodBeforeAdvice.java:44)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:57)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.DataAcquisitionService$$SpringCGLIB$$0.acquireData(<generated>)
	at com.gigass.trading.demo.LifecycleDemo.run(LifecycleDemo.java:49)
	at org.springframework.boot.SpringApplication.lambda$callRunner$5(SpringApplication.java:798)
	at org.springframework.util.function.ThrowingConsumer$1.acceptWithException(ThrowingConsumer.java:83)
	at org.springframework.util.function.ThrowingConsumer.accept(ThrowingConsumer.java:60)
	at org.springframework.util.function.ThrowingConsumer$1.accept(ThrowingConsumer.java:88)
	at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:806)
	at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:797)
	at org.springframework.boot.SpringApplication.lambda$callRunners$3(SpringApplication.java:782)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.SortedOps$SizedRefSortingSink.end(SortedOps.java:357)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:510)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at org.springframework.boot.SpringApplication.callRunners(SpringApplication.java:782)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:341)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1358)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1347)
	at com.gigass.MarketVisionApplication.main(MarketVisionApplication.java:21)
Caused by: java.sql.SQLSyntaxErrorException: Table 'marketvision.operation_log' doesn't exist
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:912)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:354)
	at com.p6spy.engine.wrapper.PreparedStatementWrapper.execute(PreparedStatementWrapper.java:362)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:58)
	at jdk.proxy3/jdk.proxy3.$Proxy131.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	... 41 common frames omitted
2025-07-22 19:24:35 [scheduling-1] ERROR c.g.t.aspect.OperationLogAspect - 记录操作日志失败
org.springframework.jdbc.BadSqlGrammarException: 
### Error updating database.  Cause: java.sql.SQLSyntaxErrorException: Table 'marketvision.operation_log' doesn't exist
### The error may exist in com/gigass/trading/repository/OperationLogRepository.java (best guess)
### The error may involve com.gigass.trading.repository.OperationLogRepository.insert-Inline
### The error occurred while setting parameters
### SQL: INSERT INTO operation_log  ( operation_type, operation_description, operation_time,  operation_result,    operation_status )  VALUES (  ?, ?, ?,  ?,    ?  )
### Cause: java.sql.SQLSyntaxErrorException: Table 'marketvision.operation_log' doesn't exist
; bad SQL grammar []
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:246)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:107)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:92)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:439)
	at jdk.proxy2/jdk.proxy2.$Proxy105.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.execute(MybatisMapperMethod.java:59)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy$PlainMethodInvoker.invoke(MybatisMapperProxy.java:152)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy.invoke(MybatisMapperProxy.java:89)
	at jdk.proxy2/jdk.proxy2.$Proxy106.insert(Unknown Source)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:119)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.module.acquisition.SocialMediaCrawlerFactory$$SpringCGLIB$$0.getAllCrawlers(<generated>)
	at com.gigass.trading.service.DataAcquisitionService.scheduledDataCollection(DataAcquisitionService.java:36)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:352)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:64)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:57)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.DataAcquisitionService$$SpringCGLIB$$0.scheduledDataCollection(<generated>)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:130)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$2(ScheduledMethodRunnable.java:124)
	at io.micrometer.observation.Observation.observe(Observation.java:499)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:124)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:358)
	at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: java.sql.SQLSyntaxErrorException: Table 'marketvision.operation_log' doesn't exist
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:912)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:354)
	at com.p6spy.engine.wrapper.PreparedStatementWrapper.execute(PreparedStatementWrapper.java:362)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:58)
	at jdk.proxy3/jdk.proxy3.$Proxy131.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	... 58 common frames omitted
2025-07-22 19:24:35 [scheduling-1] ERROR c.g.t.aspect.OperationLogAspect - 记录操作日志失败
org.springframework.jdbc.BadSqlGrammarException: 
### Error updating database.  Cause: java.sql.SQLSyntaxErrorException: Table 'marketvision.operation_log' doesn't exist
### The error may exist in com/gigass/trading/repository/OperationLogRepository.java (best guess)
### The error may involve com.gigass.trading.repository.OperationLogRepository.insert-Inline
### The error occurred while setting parameters
### SQL: INSERT INTO operation_log  ( operation_type, operation_description, operation_time,  operation_result,    operation_status )  VALUES (  ?, ?, ?,  ?,    ?  )
### Cause: java.sql.SQLSyntaxErrorException: Table 'marketvision.operation_log' doesn't exist
; bad SQL grammar []
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:246)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:107)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:92)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:439)
	at jdk.proxy2/jdk.proxy2.$Proxy105.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.execute(MybatisMapperMethod.java:59)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy$PlainMethodInvoker.invoke(MybatisMapperProxy.java:152)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy.invoke(MybatisMapperProxy.java:89)
	at jdk.proxy2/jdk.proxy2.$Proxy106.insert(Unknown Source)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:119)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.DataAcquisitionService$$SpringCGLIB$$0.scheduledDataCollection(<generated>)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:130)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$2(ScheduledMethodRunnable.java:124)
	at io.micrometer.observation.Observation.observe(Observation.java:499)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:124)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:358)
	at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: java.sql.SQLSyntaxErrorException: Table 'marketvision.operation_log' doesn't exist
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:912)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:354)
	at com.p6spy.engine.wrapper.PreparedStatementWrapper.execute(PreparedStatementWrapper.java:362)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:58)
	at jdk.proxy3/jdk.proxy3.$Proxy131.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	... 37 common frames omitted
2025-07-22 19:24:35 [main] ERROR c.g.t.aspect.OperationLogAspect - 记录操作日志失败
org.springframework.jdbc.BadSqlGrammarException: 
### Error updating database.  Cause: java.sql.SQLSyntaxErrorException: Table 'marketvision.operation_log' doesn't exist
### The error may exist in com/gigass/trading/repository/OperationLogRepository.java (best guess)
### The error may involve com.gigass.trading.repository.OperationLogRepository.insert-Inline
### The error occurred while setting parameters
### SQL: INSERT INTO operation_log  ( operation_type, operation_description, operation_time,  operation_result,    operation_status )  VALUES (  ?, ?, ?,  ?,    ?  )
### Cause: java.sql.SQLSyntaxErrorException: Table 'marketvision.operation_log' doesn't exist
; bad SQL grammar []
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:246)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:107)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:92)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:439)
	at jdk.proxy2/jdk.proxy2.$Proxy105.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.execute(MybatisMapperMethod.java:59)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy$PlainMethodInvoker.invoke(MybatisMapperProxy.java:152)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy.invoke(MybatisMapperProxy.java:89)
	at jdk.proxy2/jdk.proxy2.$Proxy106.insert(Unknown Source)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:119)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.DataAcquisitionService$$SpringCGLIB$$0.acquireData(<generated>)
	at com.gigass.trading.demo.LifecycleDemo.run(LifecycleDemo.java:49)
	at org.springframework.boot.SpringApplication.lambda$callRunner$5(SpringApplication.java:798)
	at org.springframework.util.function.ThrowingConsumer$1.acceptWithException(ThrowingConsumer.java:83)
	at org.springframework.util.function.ThrowingConsumer.accept(ThrowingConsumer.java:60)
	at org.springframework.util.function.ThrowingConsumer$1.accept(ThrowingConsumer.java:88)
	at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:806)
	at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:797)
	at org.springframework.boot.SpringApplication.lambda$callRunners$3(SpringApplication.java:782)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.SortedOps$SizedRefSortingSink.end(SortedOps.java:357)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:510)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at org.springframework.boot.SpringApplication.callRunners(SpringApplication.java:782)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:341)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1358)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1347)
	at com.gigass.MarketVisionApplication.main(MarketVisionApplication.java:21)
Caused by: java.sql.SQLSyntaxErrorException: Table 'marketvision.operation_log' doesn't exist
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:912)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:354)
	at com.p6spy.engine.wrapper.PreparedStatementWrapper.execute(PreparedStatementWrapper.java:362)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:58)
	at jdk.proxy3/jdk.proxy3.$Proxy131.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	... 44 common frames omitted
2025-07-22 19:24:35 [main] ERROR c.g.t.aspect.OperationLogAspect - 记录操作日志失败
org.springframework.jdbc.BadSqlGrammarException: 
### Error updating database.  Cause: java.sql.SQLSyntaxErrorException: Table 'marketvision.operation_log' doesn't exist
### The error may exist in com/gigass/trading/repository/OperationLogRepository.java (best guess)
### The error may involve com.gigass.trading.repository.OperationLogRepository.insert-Inline
### The error occurred while setting parameters
### SQL: INSERT INTO operation_log  ( operation_type, operation_description, operation_time, operation_params,  operation_ip, operation_url, http_method, operation_status )  VALUES (  ?, ?, ?, ?,  ?, ?, ?, ?  )
### Cause: java.sql.SQLSyntaxErrorException: Table 'marketvision.operation_log' doesn't exist
; bad SQL grammar []
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:246)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:107)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:92)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:439)
	at jdk.proxy2/jdk.proxy2.$Proxy105.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.execute(MybatisMapperMethod.java:59)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy$PlainMethodInvoker.invoke(MybatisMapperProxy.java:152)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy.invoke(MybatisMapperProxy.java:89)
	at jdk.proxy2/jdk.proxy2.$Proxy106.insert(Unknown Source)
	at com.gigass.trading.aspect.OperationLogAspect.doBefore(OperationLogAspect.java:90)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJMethodBeforeAdvice.before(AspectJMethodBeforeAdvice.java:44)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:57)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.module.base.HotsearchProcessor$$SpringCGLIB$$0.processHotsearchData(<generated>)
	at com.gigass.trading.demo.LifecycleDemo.run(LifecycleDemo.java:50)
	at org.springframework.boot.SpringApplication.lambda$callRunner$5(SpringApplication.java:798)
	at org.springframework.util.function.ThrowingConsumer$1.acceptWithException(ThrowingConsumer.java:83)
	at org.springframework.util.function.ThrowingConsumer.accept(ThrowingConsumer.java:60)
	at org.springframework.util.function.ThrowingConsumer$1.accept(ThrowingConsumer.java:88)
	at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:806)
	at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:797)
	at org.springframework.boot.SpringApplication.lambda$callRunners$3(SpringApplication.java:782)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.SortedOps$SizedRefSortingSink.end(SortedOps.java:357)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:510)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at org.springframework.boot.SpringApplication.callRunners(SpringApplication.java:782)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:341)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1358)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1347)
	at com.gigass.MarketVisionApplication.main(MarketVisionApplication.java:21)
Caused by: java.sql.SQLSyntaxErrorException: Table 'marketvision.operation_log' doesn't exist
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:912)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:354)
	at com.p6spy.engine.wrapper.PreparedStatementWrapper.execute(PreparedStatementWrapper.java:362)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:58)
	at jdk.proxy3/jdk.proxy3.$Proxy131.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	... 41 common frames omitted
2025-07-22 19:24:35 [main] ERROR c.g.t.aspect.OperationLogAspect - 记录操作日志失败
org.springframework.jdbc.BadSqlGrammarException: 
### Error updating database.  Cause: java.sql.SQLSyntaxErrorException: Table 'marketvision.operation_log' doesn't exist
### The error may exist in com/gigass/trading/repository/OperationLogRepository.java (best guess)
### The error may involve com.gigass.trading.repository.OperationLogRepository.insert-Inline
### The error occurred while setting parameters
### SQL: INSERT INTO operation_log  ( operation_type, operation_description, operation_time,  operation_result,    operation_status )  VALUES (  ?, ?, ?,  ?,    ?  )
### Cause: java.sql.SQLSyntaxErrorException: Table 'marketvision.operation_log' doesn't exist
; bad SQL grammar []
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:246)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:107)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:92)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:439)
	at jdk.proxy2/jdk.proxy2.$Proxy105.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.execute(MybatisMapperMethod.java:59)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy$PlainMethodInvoker.invoke(MybatisMapperProxy.java:152)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy.invoke(MybatisMapperProxy.java:89)
	at jdk.proxy2/jdk.proxy2.$Proxy106.insert(Unknown Source)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:119)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.module.base.HotsearchProcessor$$SpringCGLIB$$0.processHotsearchData(<generated>)
	at com.gigass.trading.demo.LifecycleDemo.run(LifecycleDemo.java:50)
	at org.springframework.boot.SpringApplication.lambda$callRunner$5(SpringApplication.java:798)
	at org.springframework.util.function.ThrowingConsumer$1.acceptWithException(ThrowingConsumer.java:83)
	at org.springframework.util.function.ThrowingConsumer.accept(ThrowingConsumer.java:60)
	at org.springframework.util.function.ThrowingConsumer$1.accept(ThrowingConsumer.java:88)
	at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:806)
	at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:797)
	at org.springframework.boot.SpringApplication.lambda$callRunners$3(SpringApplication.java:782)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.SortedOps$SizedRefSortingSink.end(SortedOps.java:357)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:510)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at org.springframework.boot.SpringApplication.callRunners(SpringApplication.java:782)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:341)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1358)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1347)
	at com.gigass.MarketVisionApplication.main(MarketVisionApplication.java:21)
Caused by: java.sql.SQLSyntaxErrorException: Table 'marketvision.operation_log' doesn't exist
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:912)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:354)
	at com.p6spy.engine.wrapper.PreparedStatementWrapper.execute(PreparedStatementWrapper.java:362)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:58)
	at jdk.proxy3/jdk.proxy3.$Proxy131.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	... 44 common frames omitted
2025-07-22 19:24:35 [main] INFO  com.gigass.MarketVisionApplication - 热搜驱动交易系统启动完成！
2025-07-22 19:25:35 [scheduling-1] ERROR c.g.t.aspect.OperationLogAspect - 记录操作日志失败
org.springframework.jdbc.BadSqlGrammarException: 
### Error updating database.  Cause: java.sql.SQLSyntaxErrorException: Table 'marketvision.operation_log' doesn't exist
### The error may exist in com/gigass/trading/repository/OperationLogRepository.java (best guess)
### The error may involve com.gigass.trading.repository.OperationLogRepository.insert-Inline
### The error occurred while setting parameters
### SQL: INSERT INTO operation_log  ( operation_type, operation_description, operation_time, operation_params,  operation_ip, operation_url, http_method, operation_status )  VALUES (  ?, ?, ?, ?,  ?, ?, ?, ?  )
### Cause: java.sql.SQLSyntaxErrorException: Table 'marketvision.operation_log' doesn't exist
; bad SQL grammar []
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:246)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:107)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:92)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:439)
	at jdk.proxy2/jdk.proxy2.$Proxy105.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.execute(MybatisMapperMethod.java:59)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy$PlainMethodInvoker.invoke(MybatisMapperProxy.java:152)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy.invoke(MybatisMapperProxy.java:89)
	at jdk.proxy2/jdk.proxy2.$Proxy106.insert(Unknown Source)
	at com.gigass.trading.aspect.OperationLogAspect.doBefore(OperationLogAspect.java:90)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJMethodBeforeAdvice.before(AspectJMethodBeforeAdvice.java:44)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:57)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.DataAcquisitionService$$SpringCGLIB$$0.scheduledDataCollection(<generated>)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:130)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$2(ScheduledMethodRunnable.java:124)
	at io.micrometer.observation.Observation.observe(Observation.java:499)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:124)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:358)
	at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: java.sql.SQLSyntaxErrorException: Table 'marketvision.operation_log' doesn't exist
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:912)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:354)
	at com.p6spy.engine.wrapper.PreparedStatementWrapper.execute(PreparedStatementWrapper.java:362)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:58)
	at jdk.proxy3/jdk.proxy3.$Proxy131.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	... 34 common frames omitted
2025-07-22 19:25:35 [scheduling-1] INFO  c.g.t.service.DataAcquisitionService - 开始定时数据采集任务
2025-07-22 19:25:35 [scheduling-1] ERROR c.g.t.aspect.OperationLogAspect - 记录操作日志失败
org.springframework.jdbc.BadSqlGrammarException: 
### Error updating database.  Cause: java.sql.SQLSyntaxErrorException: Table 'marketvision.operation_log' doesn't exist
### The error may exist in com/gigass/trading/repository/OperationLogRepository.java (best guess)
### The error may involve com.gigass.trading.repository.OperationLogRepository.insert-Inline
### The error occurred while setting parameters
### SQL: INSERT INTO operation_log  ( operation_type, operation_description, operation_time, operation_params,  operation_ip, operation_url, http_method, operation_status )  VALUES (  ?, ?, ?, ?,  ?, ?, ?, ?  )
### Cause: java.sql.SQLSyntaxErrorException: Table 'marketvision.operation_log' doesn't exist
; bad SQL grammar []
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:246)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:107)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:92)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:439)
	at jdk.proxy2/jdk.proxy2.$Proxy105.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.execute(MybatisMapperMethod.java:59)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy$PlainMethodInvoker.invoke(MybatisMapperProxy.java:152)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy.invoke(MybatisMapperProxy.java:89)
	at jdk.proxy2/jdk.proxy2.$Proxy106.insert(Unknown Source)
	at com.gigass.trading.aspect.OperationLogAspect.doBefore(OperationLogAspect.java:90)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJMethodBeforeAdvice.before(AspectJMethodBeforeAdvice.java:44)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:57)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.module.acquisition.SocialMediaCrawlerFactory$$SpringCGLIB$$0.getAllCrawlers(<generated>)
	at com.gigass.trading.service.DataAcquisitionService.scheduledDataCollection(DataAcquisitionService.java:36)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:352)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:64)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:57)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.DataAcquisitionService$$SpringCGLIB$$0.scheduledDataCollection(<generated>)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:130)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$2(ScheduledMethodRunnable.java:124)
	at io.micrometer.observation.Observation.observe(Observation.java:499)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:124)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:358)
	at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: java.sql.SQLSyntaxErrorException: Table 'marketvision.operation_log' doesn't exist
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:912)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:354)
	at com.p6spy.engine.wrapper.PreparedStatementWrapper.execute(PreparedStatementWrapper.java:362)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:58)
	at jdk.proxy3/jdk.proxy3.$Proxy131.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	... 55 common frames omitted
2025-07-22 19:25:35 [scheduling-1] ERROR c.g.t.aspect.OperationLogAspect - 记录操作日志失败
org.springframework.jdbc.BadSqlGrammarException: 
### Error updating database.  Cause: java.sql.SQLSyntaxErrorException: Table 'marketvision.operation_log' doesn't exist
### The error may exist in com/gigass/trading/repository/OperationLogRepository.java (best guess)
### The error may involve com.gigass.trading.repository.OperationLogRepository.insert-Inline
### The error occurred while setting parameters
### SQL: INSERT INTO operation_log  ( operation_type, operation_description, operation_time,  operation_result,    operation_status )  VALUES (  ?, ?, ?,  ?,    ?  )
### Cause: java.sql.SQLSyntaxErrorException: Table 'marketvision.operation_log' doesn't exist
; bad SQL grammar []
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:246)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:107)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:92)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:439)
	at jdk.proxy2/jdk.proxy2.$Proxy105.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.execute(MybatisMapperMethod.java:59)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy$PlainMethodInvoker.invoke(MybatisMapperProxy.java:152)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy.invoke(MybatisMapperProxy.java:89)
	at jdk.proxy2/jdk.proxy2.$Proxy106.insert(Unknown Source)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:119)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.module.acquisition.SocialMediaCrawlerFactory$$SpringCGLIB$$0.getAllCrawlers(<generated>)
	at com.gigass.trading.service.DataAcquisitionService.scheduledDataCollection(DataAcquisitionService.java:36)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:352)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:64)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:57)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.DataAcquisitionService$$SpringCGLIB$$0.scheduledDataCollection(<generated>)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:130)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$2(ScheduledMethodRunnable.java:124)
	at io.micrometer.observation.Observation.observe(Observation.java:499)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:124)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:358)
	at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: java.sql.SQLSyntaxErrorException: Table 'marketvision.operation_log' doesn't exist
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:912)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:354)
	at com.p6spy.engine.wrapper.PreparedStatementWrapper.execute(PreparedStatementWrapper.java:362)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:58)
	at jdk.proxy3/jdk.proxy3.$Proxy131.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	... 58 common frames omitted
2025-07-22 19:25:35 [scheduling-1] ERROR c.g.t.aspect.OperationLogAspect - 记录操作日志失败
org.springframework.jdbc.BadSqlGrammarException: 
### Error updating database.  Cause: java.sql.SQLSyntaxErrorException: Table 'marketvision.operation_log' doesn't exist
### The error may exist in com/gigass/trading/repository/OperationLogRepository.java (best guess)
### The error may involve com.gigass.trading.repository.OperationLogRepository.insert-Inline
### The error occurred while setting parameters
### SQL: INSERT INTO operation_log  ( operation_type, operation_description, operation_time,  operation_result,    operation_status )  VALUES (  ?, ?, ?,  ?,    ?  )
### Cause: java.sql.SQLSyntaxErrorException: Table 'marketvision.operation_log' doesn't exist
; bad SQL grammar []
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:246)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:107)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:92)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:439)
	at jdk.proxy2/jdk.proxy2.$Proxy105.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.execute(MybatisMapperMethod.java:59)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy$PlainMethodInvoker.invoke(MybatisMapperProxy.java:152)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy.invoke(MybatisMapperProxy.java:89)
	at jdk.proxy2/jdk.proxy2.$Proxy106.insert(Unknown Source)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:119)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.DataAcquisitionService$$SpringCGLIB$$0.scheduledDataCollection(<generated>)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:130)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$2(ScheduledMethodRunnable.java:124)
	at io.micrometer.observation.Observation.observe(Observation.java:499)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:124)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:358)
	at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: java.sql.SQLSyntaxErrorException: Table 'marketvision.operation_log' doesn't exist
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:912)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:354)
	at com.p6spy.engine.wrapper.PreparedStatementWrapper.execute(PreparedStatementWrapper.java:362)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:58)
	at jdk.proxy3/jdk.proxy3.$Proxy131.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	... 37 common frames omitted
2025-07-22 19:26:36 [scheduling-1] ERROR c.g.t.aspect.OperationLogAspect - 记录操作日志失败
org.springframework.jdbc.BadSqlGrammarException: 
### Error updating database.  Cause: java.sql.SQLSyntaxErrorException: Table 'marketvision.operation_log' doesn't exist
### The error may exist in com/gigass/trading/repository/OperationLogRepository.java (best guess)
### The error may involve com.gigass.trading.repository.OperationLogRepository.insert-Inline
### The error occurred while setting parameters
### SQL: INSERT INTO operation_log  ( operation_type, operation_description, operation_time, operation_params,  operation_ip, operation_url, http_method, operation_status )  VALUES (  ?, ?, ?, ?,  ?, ?, ?, ?  )
### Cause: java.sql.SQLSyntaxErrorException: Table 'marketvision.operation_log' doesn't exist
; bad SQL grammar []
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:246)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:107)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:92)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:439)
	at jdk.proxy2/jdk.proxy2.$Proxy105.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.execute(MybatisMapperMethod.java:59)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy$PlainMethodInvoker.invoke(MybatisMapperProxy.java:152)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy.invoke(MybatisMapperProxy.java:89)
	at jdk.proxy2/jdk.proxy2.$Proxy106.insert(Unknown Source)
	at com.gigass.trading.aspect.OperationLogAspect.doBefore(OperationLogAspect.java:90)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJMethodBeforeAdvice.before(AspectJMethodBeforeAdvice.java:44)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:57)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.DataAcquisitionService$$SpringCGLIB$$0.scheduledDataCollection(<generated>)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:130)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$2(ScheduledMethodRunnable.java:124)
	at io.micrometer.observation.Observation.observe(Observation.java:499)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:124)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:358)
	at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: java.sql.SQLSyntaxErrorException: Table 'marketvision.operation_log' doesn't exist
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:912)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:354)
	at com.p6spy.engine.wrapper.PreparedStatementWrapper.execute(PreparedStatementWrapper.java:362)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:58)
	at jdk.proxy3/jdk.proxy3.$Proxy131.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	... 34 common frames omitted
2025-07-22 19:26:36 [scheduling-1] INFO  c.g.t.service.DataAcquisitionService - 开始定时数据采集任务
2025-07-22 19:26:36 [scheduling-1] ERROR c.g.t.aspect.OperationLogAspect - 记录操作日志失败
org.springframework.jdbc.BadSqlGrammarException: 
### Error updating database.  Cause: java.sql.SQLSyntaxErrorException: Table 'marketvision.operation_log' doesn't exist
### The error may exist in com/gigass/trading/repository/OperationLogRepository.java (best guess)
### The error may involve com.gigass.trading.repository.OperationLogRepository.insert-Inline
### The error occurred while setting parameters
### SQL: INSERT INTO operation_log  ( operation_type, operation_description, operation_time, operation_params,  operation_ip, operation_url, http_method, operation_status )  VALUES (  ?, ?, ?, ?,  ?, ?, ?, ?  )
### Cause: java.sql.SQLSyntaxErrorException: Table 'marketvision.operation_log' doesn't exist
; bad SQL grammar []
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:246)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:107)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:92)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:439)
	at jdk.proxy2/jdk.proxy2.$Proxy105.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.execute(MybatisMapperMethod.java:59)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy$PlainMethodInvoker.invoke(MybatisMapperProxy.java:152)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy.invoke(MybatisMapperProxy.java:89)
	at jdk.proxy2/jdk.proxy2.$Proxy106.insert(Unknown Source)
	at com.gigass.trading.aspect.OperationLogAspect.doBefore(OperationLogAspect.java:90)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJMethodBeforeAdvice.before(AspectJMethodBeforeAdvice.java:44)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:57)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.module.acquisition.SocialMediaCrawlerFactory$$SpringCGLIB$$0.getAllCrawlers(<generated>)
	at com.gigass.trading.service.DataAcquisitionService.scheduledDataCollection(DataAcquisitionService.java:36)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:352)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:64)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:57)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.DataAcquisitionService$$SpringCGLIB$$0.scheduledDataCollection(<generated>)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:130)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$2(ScheduledMethodRunnable.java:124)
	at io.micrometer.observation.Observation.observe(Observation.java:499)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:124)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:358)
	at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: java.sql.SQLSyntaxErrorException: Table 'marketvision.operation_log' doesn't exist
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:912)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:354)
	at com.p6spy.engine.wrapper.PreparedStatementWrapper.execute(PreparedStatementWrapper.java:362)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:58)
	at jdk.proxy3/jdk.proxy3.$Proxy131.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	... 55 common frames omitted
2025-07-22 19:26:36 [scheduling-1] ERROR c.g.t.aspect.OperationLogAspect - 记录操作日志失败
org.springframework.jdbc.BadSqlGrammarException: 
### Error updating database.  Cause: java.sql.SQLSyntaxErrorException: Table 'marketvision.operation_log' doesn't exist
### The error may exist in com/gigass/trading/repository/OperationLogRepository.java (best guess)
### The error may involve com.gigass.trading.repository.OperationLogRepository.insert-Inline
### The error occurred while setting parameters
### SQL: INSERT INTO operation_log  ( operation_type, operation_description, operation_time,  operation_result,    operation_status )  VALUES (  ?, ?, ?,  ?,    ?  )
### Cause: java.sql.SQLSyntaxErrorException: Table 'marketvision.operation_log' doesn't exist
; bad SQL grammar []
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:246)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:107)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:92)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:439)
	at jdk.proxy2/jdk.proxy2.$Proxy105.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.execute(MybatisMapperMethod.java:59)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy$PlainMethodInvoker.invoke(MybatisMapperProxy.java:152)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy.invoke(MybatisMapperProxy.java:89)
	at jdk.proxy2/jdk.proxy2.$Proxy106.insert(Unknown Source)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:119)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.module.acquisition.SocialMediaCrawlerFactory$$SpringCGLIB$$0.getAllCrawlers(<generated>)
	at com.gigass.trading.service.DataAcquisitionService.scheduledDataCollection(DataAcquisitionService.java:36)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:352)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:64)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:57)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.DataAcquisitionService$$SpringCGLIB$$0.scheduledDataCollection(<generated>)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:130)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$2(ScheduledMethodRunnable.java:124)
	at io.micrometer.observation.Observation.observe(Observation.java:499)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:124)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:358)
	at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: java.sql.SQLSyntaxErrorException: Table 'marketvision.operation_log' doesn't exist
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:912)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:354)
	at com.p6spy.engine.wrapper.PreparedStatementWrapper.execute(PreparedStatementWrapper.java:362)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:58)
	at jdk.proxy3/jdk.proxy3.$Proxy131.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	... 58 common frames omitted
2025-07-22 19:26:36 [scheduling-1] ERROR c.g.t.aspect.OperationLogAspect - 记录操作日志失败
org.springframework.jdbc.BadSqlGrammarException: 
### Error updating database.  Cause: java.sql.SQLSyntaxErrorException: Table 'marketvision.operation_log' doesn't exist
### The error may exist in com/gigass/trading/repository/OperationLogRepository.java (best guess)
### The error may involve com.gigass.trading.repository.OperationLogRepository.insert-Inline
### The error occurred while setting parameters
### SQL: INSERT INTO operation_log  ( operation_type, operation_description, operation_time,  operation_result,    operation_status )  VALUES (  ?, ?, ?,  ?,    ?  )
### Cause: java.sql.SQLSyntaxErrorException: Table 'marketvision.operation_log' doesn't exist
; bad SQL grammar []
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:246)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:107)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:92)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:439)
	at jdk.proxy2/jdk.proxy2.$Proxy105.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.execute(MybatisMapperMethod.java:59)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy$PlainMethodInvoker.invoke(MybatisMapperProxy.java:152)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy.invoke(MybatisMapperProxy.java:89)
	at jdk.proxy2/jdk.proxy2.$Proxy106.insert(Unknown Source)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:119)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.DataAcquisitionService$$SpringCGLIB$$0.scheduledDataCollection(<generated>)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:130)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$2(ScheduledMethodRunnable.java:124)
	at io.micrometer.observation.Observation.observe(Observation.java:499)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:124)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:358)
	at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: java.sql.SQLSyntaxErrorException: Table 'marketvision.operation_log' doesn't exist
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:912)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:354)
	at com.p6spy.engine.wrapper.PreparedStatementWrapper.execute(PreparedStatementWrapper.java:362)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:58)
	at jdk.proxy3/jdk.proxy3.$Proxy131.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	... 37 common frames omitted
2025-07-22 19:27:36 [scheduling-1] ERROR c.g.t.aspect.OperationLogAspect - 记录操作日志失败
org.springframework.jdbc.BadSqlGrammarException: 
### Error updating database.  Cause: java.sql.SQLSyntaxErrorException: Table 'marketvision.operation_log' doesn't exist
### The error may exist in com/gigass/trading/repository/OperationLogRepository.java (best guess)
### The error may involve com.gigass.trading.repository.OperationLogRepository.insert-Inline
### The error occurred while setting parameters
### SQL: INSERT INTO operation_log  ( operation_type, operation_description, operation_time, operation_params,  operation_ip, operation_url, http_method, operation_status )  VALUES (  ?, ?, ?, ?,  ?, ?, ?, ?  )
### Cause: java.sql.SQLSyntaxErrorException: Table 'marketvision.operation_log' doesn't exist
; bad SQL grammar []
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:246)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:107)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:92)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:439)
	at jdk.proxy2/jdk.proxy2.$Proxy105.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.execute(MybatisMapperMethod.java:59)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy$PlainMethodInvoker.invoke(MybatisMapperProxy.java:152)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy.invoke(MybatisMapperProxy.java:89)
	at jdk.proxy2/jdk.proxy2.$Proxy106.insert(Unknown Source)
	at com.gigass.trading.aspect.OperationLogAspect.doBefore(OperationLogAspect.java:90)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJMethodBeforeAdvice.before(AspectJMethodBeforeAdvice.java:44)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:57)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.DataAcquisitionService$$SpringCGLIB$$0.scheduledDataCollection(<generated>)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:130)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$2(ScheduledMethodRunnable.java:124)
	at io.micrometer.observation.Observation.observe(Observation.java:499)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:124)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:358)
	at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: java.sql.SQLSyntaxErrorException: Table 'marketvision.operation_log' doesn't exist
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:912)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:354)
	at com.p6spy.engine.wrapper.PreparedStatementWrapper.execute(PreparedStatementWrapper.java:362)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:58)
	at jdk.proxy3/jdk.proxy3.$Proxy131.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	... 34 common frames omitted
2025-07-22 19:27:36 [scheduling-1] INFO  c.g.t.service.DataAcquisitionService - 开始定时数据采集任务
2025-07-22 19:27:36 [scheduling-1] ERROR c.g.t.aspect.OperationLogAspect - 记录操作日志失败
org.springframework.jdbc.BadSqlGrammarException: 
### Error updating database.  Cause: java.sql.SQLSyntaxErrorException: Table 'marketvision.operation_log' doesn't exist
### The error may exist in com/gigass/trading/repository/OperationLogRepository.java (best guess)
### The error may involve com.gigass.trading.repository.OperationLogRepository.insert-Inline
### The error occurred while setting parameters
### SQL: INSERT INTO operation_log  ( operation_type, operation_description, operation_time, operation_params,  operation_ip, operation_url, http_method, operation_status )  VALUES (  ?, ?, ?, ?,  ?, ?, ?, ?  )
### Cause: java.sql.SQLSyntaxErrorException: Table 'marketvision.operation_log' doesn't exist
; bad SQL grammar []
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:246)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:107)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:92)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:439)
	at jdk.proxy2/jdk.proxy2.$Proxy105.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.execute(MybatisMapperMethod.java:59)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy$PlainMethodInvoker.invoke(MybatisMapperProxy.java:152)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy.invoke(MybatisMapperProxy.java:89)
	at jdk.proxy2/jdk.proxy2.$Proxy106.insert(Unknown Source)
	at com.gigass.trading.aspect.OperationLogAspect.doBefore(OperationLogAspect.java:90)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJMethodBeforeAdvice.before(AspectJMethodBeforeAdvice.java:44)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:57)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.module.acquisition.SocialMediaCrawlerFactory$$SpringCGLIB$$0.getAllCrawlers(<generated>)
	at com.gigass.trading.service.DataAcquisitionService.scheduledDataCollection(DataAcquisitionService.java:36)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:352)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:64)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:57)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.DataAcquisitionService$$SpringCGLIB$$0.scheduledDataCollection(<generated>)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:130)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$2(ScheduledMethodRunnable.java:124)
	at io.micrometer.observation.Observation.observe(Observation.java:499)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:124)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:358)
	at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: java.sql.SQLSyntaxErrorException: Table 'marketvision.operation_log' doesn't exist
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:912)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:354)
	at com.p6spy.engine.wrapper.PreparedStatementWrapper.execute(PreparedStatementWrapper.java:362)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:58)
	at jdk.proxy3/jdk.proxy3.$Proxy131.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	... 55 common frames omitted
2025-07-22 19:27:36 [scheduling-1] ERROR c.g.t.aspect.OperationLogAspect - 记录操作日志失败
org.springframework.jdbc.BadSqlGrammarException: 
### Error updating database.  Cause: java.sql.SQLSyntaxErrorException: Table 'marketvision.operation_log' doesn't exist
### The error may exist in com/gigass/trading/repository/OperationLogRepository.java (best guess)
### The error may involve com.gigass.trading.repository.OperationLogRepository.insert-Inline
### The error occurred while setting parameters
### SQL: INSERT INTO operation_log  ( operation_type, operation_description, operation_time,  operation_result,    operation_status )  VALUES (  ?, ?, ?,  ?,    ?  )
### Cause: java.sql.SQLSyntaxErrorException: Table 'marketvision.operation_log' doesn't exist
; bad SQL grammar []
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:246)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:107)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:92)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:439)
	at jdk.proxy2/jdk.proxy2.$Proxy105.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.execute(MybatisMapperMethod.java:59)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy$PlainMethodInvoker.invoke(MybatisMapperProxy.java:152)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy.invoke(MybatisMapperProxy.java:89)
	at jdk.proxy2/jdk.proxy2.$Proxy106.insert(Unknown Source)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:119)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.module.acquisition.SocialMediaCrawlerFactory$$SpringCGLIB$$0.getAllCrawlers(<generated>)
	at com.gigass.trading.service.DataAcquisitionService.scheduledDataCollection(DataAcquisitionService.java:36)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:352)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:64)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:57)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.DataAcquisitionService$$SpringCGLIB$$0.scheduledDataCollection(<generated>)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:130)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$2(ScheduledMethodRunnable.java:124)
	at io.micrometer.observation.Observation.observe(Observation.java:499)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:124)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:358)
	at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: java.sql.SQLSyntaxErrorException: Table 'marketvision.operation_log' doesn't exist
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:912)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:354)
	at com.p6spy.engine.wrapper.PreparedStatementWrapper.execute(PreparedStatementWrapper.java:362)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:58)
	at jdk.proxy3/jdk.proxy3.$Proxy131.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	... 58 common frames omitted
2025-07-22 19:27:36 [scheduling-1] ERROR c.g.t.aspect.OperationLogAspect - 记录操作日志失败
org.springframework.jdbc.BadSqlGrammarException: 
### Error updating database.  Cause: java.sql.SQLSyntaxErrorException: Table 'marketvision.operation_log' doesn't exist
### The error may exist in com/gigass/trading/repository/OperationLogRepository.java (best guess)
### The error may involve com.gigass.trading.repository.OperationLogRepository.insert-Inline
### The error occurred while setting parameters
### SQL: INSERT INTO operation_log  ( operation_type, operation_description, operation_time,  operation_result,    operation_status )  VALUES (  ?, ?, ?,  ?,    ?  )
### Cause: java.sql.SQLSyntaxErrorException: Table 'marketvision.operation_log' doesn't exist
; bad SQL grammar []
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:246)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:107)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:92)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:439)
	at jdk.proxy2/jdk.proxy2.$Proxy105.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.execute(MybatisMapperMethod.java:59)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy$PlainMethodInvoker.invoke(MybatisMapperProxy.java:152)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy.invoke(MybatisMapperProxy.java:89)
	at jdk.proxy2/jdk.proxy2.$Proxy106.insert(Unknown Source)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:119)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.DataAcquisitionService$$SpringCGLIB$$0.scheduledDataCollection(<generated>)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:130)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$2(ScheduledMethodRunnable.java:124)
	at io.micrometer.observation.Observation.observe(Observation.java:499)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:124)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:358)
	at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: java.sql.SQLSyntaxErrorException: Table 'marketvision.operation_log' doesn't exist
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:912)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:354)
	at com.p6spy.engine.wrapper.PreparedStatementWrapper.execute(PreparedStatementWrapper.java:362)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:58)
	at jdk.proxy3/jdk.proxy3.$Proxy131.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	... 37 common frames omitted
2025-07-22 19:28:36 [scheduling-1] DEBUG c.g.t.aspect.OperationLogAspect - 操作开始: com.gigass.trading.service.DataAcquisitionService.scheduledDataCollection, 参数: []
2025-07-22 19:28:36 [scheduling-1] INFO  c.g.t.service.DataAcquisitionService - 开始定时数据采集任务
2025-07-22 19:28:36 [scheduling-1] DEBUG c.g.t.aspect.OperationLogAspect - 操作开始: com.gigass.trading.module.acquisition.SocialMediaCrawlerFactory.getAllCrawlers, 参数: []
2025-07-22 19:28:36 [scheduling-1] DEBUG c.g.t.aspect.OperationLogAspect - 操作完成: com.gigass.trading.module.acquisition.SocialMediaCrawlerFactory.getAllCrawlers, 结果: {}
2025-07-22 19:28:36 [scheduling-1] DEBUG c.g.t.aspect.OperationLogAspect - 操作完成: com.gigass.trading.service.DataAcquisitionService.scheduledDataCollection, 结果: null
2025-07-22 19:29:36 [scheduling-1] DEBUG c.g.t.aspect.OperationLogAspect - 操作开始: com.gigass.trading.service.DataAcquisitionService.scheduledDataCollection, 参数: []
2025-07-22 19:29:36 [scheduling-1] INFO  c.g.t.service.DataAcquisitionService - 开始定时数据采集任务
2025-07-22 19:29:36 [scheduling-1] DEBUG c.g.t.aspect.OperationLogAspect - 操作开始: com.gigass.trading.module.acquisition.SocialMediaCrawlerFactory.getAllCrawlers, 参数: []
2025-07-22 19:29:36 [scheduling-1] DEBUG c.g.t.aspect.OperationLogAspect - 操作完成: com.gigass.trading.module.acquisition.SocialMediaCrawlerFactory.getAllCrawlers, 结果: {}
2025-07-22 19:29:36 [scheduling-1] DEBUG c.g.t.aspect.OperationLogAspect - 操作完成: com.gigass.trading.service.DataAcquisitionService.scheduledDataCollection, 结果: null
2025-07-22 19:30:00 [scheduling-1] INFO  c.g.t.scheduler.HotSearchCrawlTask - 开始执行热搜数据采集任务，时间: 2025-07-22T19:30:00.023338
2025-07-22 19:30:00 [scheduling-1] DEBUG c.g.t.aspect.OperationLogAspect - 操作开始: com.gigass.trading.module.acquisition.SocialMediaCrawlerFactory.createCrawler, 参数: [weibo]
2025-07-22 19:30:00 [scheduling-1] DEBUG c.g.t.aspect.OperationLogAspect - 操作完成: com.gigass.trading.module.acquisition.SocialMediaCrawlerFactory.createCrawler, 结果: java.lang.Object@32273c70
2025-07-22 19:30:00 [scheduling-1] DEBUG c.g.t.aspect.OperationLogAspect - 操作开始: com.gigass.trading.service.DataAcquisitionService.acquireData, 参数: [java.lang.Object@32273c70]
2025-07-22 19:30:00 [scheduling-1] DEBUG c.g.t.aspect.OperationLogAspect - 操作完成: com.gigass.trading.service.DataAcquisitionService.acquireData, 结果: []
2025-07-22 19:30:00 [scheduling-1] DEBUG c.g.t.aspect.OperationLogAspect - 操作开始: com.gigass.trading.module.base.HotsearchProcessor.processHotsearchData, 参数: [[]]
2025-07-22 19:30:00 [scheduling-1] DEBUG c.g.t.aspect.OperationLogAspect - 操作完成: com.gigass.trading.module.base.HotsearchProcessor.processHotsearchData, 结果: []
2025-07-22 19:30:00 [scheduling-1] DEBUG c.g.t.aspect.OperationLogAspect - 操作开始: com.gigass.trading.module.acquisition.SocialMediaCrawlerFactory.createCrawler, 参数: [baidu]
2025-07-22 19:30:00 [scheduling-1] DEBUG c.g.t.aspect.OperationLogAspect - 操作完成: com.gigass.trading.module.acquisition.SocialMediaCrawlerFactory.createCrawler, 结果: java.lang.Object@79a831bd
2025-07-22 19:30:00 [scheduling-1] DEBUG c.g.t.aspect.OperationLogAspect - 操作开始: com.gigass.trading.service.DataAcquisitionService.acquireData, 参数: [java.lang.Object@79a831bd]
2025-07-22 19:30:00 [scheduling-1] DEBUG c.g.t.aspect.OperationLogAspect - 操作完成: com.gigass.trading.service.DataAcquisitionService.acquireData, 结果: []
2025-07-22 19:30:00 [scheduling-1] DEBUG c.g.t.aspect.OperationLogAspect - 操作开始: com.gigass.trading.module.base.HotsearchProcessor.processHotsearchData, 参数: [[]]
2025-07-22 19:30:00 [scheduling-1] DEBUG c.g.t.aspect.OperationLogAspect - 操作完成: com.gigass.trading.module.base.HotsearchProcessor.processHotsearchData, 结果: []
2025-07-22 19:30:00 [scheduling-1] DEBUG c.g.t.aspect.OperationLogAspect - 操作开始: com.gigass.trading.module.acquisition.SocialMediaCrawlerFactory.createCrawler, 参数: [zhihu]
2025-07-22 19:30:00 [scheduling-1] DEBUG c.g.t.aspect.OperationLogAspect - 操作完成: com.gigass.trading.module.acquisition.SocialMediaCrawlerFactory.createCrawler, 结果: java.lang.Object@ab55f80
2025-07-22 19:30:00 [scheduling-1] DEBUG c.g.t.aspect.OperationLogAspect - 操作开始: com.gigass.trading.service.DataAcquisitionService.acquireData, 参数: [java.lang.Object@ab55f80]
2025-07-22 19:30:00 [scheduling-1] DEBUG c.g.t.aspect.OperationLogAspect - 操作完成: com.gigass.trading.service.DataAcquisitionService.acquireData, 结果: []
2025-07-22 19:30:00 [scheduling-1] DEBUG c.g.t.aspect.OperationLogAspect - 操作开始: com.gigass.trading.module.base.HotsearchProcessor.processHotsearchData, 参数: [[]]
2025-07-22 19:30:00 [scheduling-1] DEBUG c.g.t.aspect.OperationLogAspect - 操作完成: com.gigass.trading.module.base.HotsearchProcessor.processHotsearchData, 结果: []
2025-07-22 19:30:00 [scheduling-1] INFO  c.g.t.scheduler.HotSearchCrawlTask - 热搜数据采集任务执行完成，微博: 0条，百度: 0条，知乎: 0条
2025-07-22 19:30:36 [scheduling-1] DEBUG c.g.t.aspect.OperationLogAspect - 操作开始: com.gigass.trading.service.DataAcquisitionService.scheduledDataCollection, 参数: []
2025-07-22 19:30:36 [scheduling-1] INFO  c.g.t.service.DataAcquisitionService - 开始定时数据采集任务
2025-07-22 19:30:36 [scheduling-1] DEBUG c.g.t.aspect.OperationLogAspect - 操作开始: com.gigass.trading.module.acquisition.SocialMediaCrawlerFactory.getAllCrawlers, 参数: []
2025-07-22 19:30:36 [scheduling-1] DEBUG c.g.t.aspect.OperationLogAspect - 操作完成: com.gigass.trading.module.acquisition.SocialMediaCrawlerFactory.getAllCrawlers, 结果: {}
2025-07-22 19:30:36 [scheduling-1] DEBUG c.g.t.aspect.OperationLogAspect - 操作完成: com.gigass.trading.service.DataAcquisitionService.scheduledDataCollection, 结果: null
2025-07-22 19:31:03 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-07-22 19:31:03 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-07-22 19:31:06 [main] INFO  com.gigass.MarketVisionApplication - Starting MarketVisionApplication using Java 21.0.8 with PID 66541 (/Users/gigass/DEVELOP/GitHub/MarketVision/target/classes started by gigass in /Users/gigass/DEVELOP/GitHub/MarketVision)
2025-07-22 19:31:06 [main] DEBUG com.gigass.MarketVisionApplication - Running with Spring Boot v3.2.1, Spring v6.1.2
2025-07-22 19:31:06 [main] INFO  com.gigass.MarketVisionApplication - No active profile set, falling back to 1 default profile: "default"
2025-07-22 19:31:07 [main] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=00ad12f1-0b22-30e5-9a0b-8566477b3b7e
2025-07-22 19:31:07 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$RetryInterceptorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$RetryInterceptorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2025-07-22 19:31:07 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-22 19:31:07 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-22 19:31:07 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' of type [org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-22 19:31:07 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-22 19:31:07 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerClientsDefaultsMappingsProvider' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda/0x000000700155dc18] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-22 19:31:07 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'defaultsBindHandlerAdvisor' of type [org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-22 19:31:07 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.cloud.loadbalancer-org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-22 19:31:07 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-22 19:31:07 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-22 19:31:07 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerClientFactory' of type [org.springframework.cloud.loadbalancer.support.LoadBalancerClientFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-22 19:31:07 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'blockingLoadBalancerClient' of type [org.springframework.cloud.loadbalancer.blocking.client.BlockingLoadBalancerClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-22 19:31:07 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerServiceInstanceCookieTransformer' of type [org.springframework.cloud.loadbalancer.core.LoadBalancerServiceInstanceCookieTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-22 19:31:07 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'xForwarderHeadersTransformer' of type [org.springframework.cloud.loadbalancer.blocking.XForwardedHeadersTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-22 19:31:07 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-22 19:31:07 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerRequestFactory' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerRequestFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-22 19:31:07 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerRetryConfig' of type [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerRetryConfig$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-22 19:31:07 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancedRetryFactory' of type [org.springframework.cloud.loadbalancer.blocking.retry.BlockingLoadBalancedRetryFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-22 19:31:07 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.RetryLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-22 19:31:07 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2025-07-22 19:31:07 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-22 19:31:07 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-22 19:31:08 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-07-22 19:31:08 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-07-22 19:31:08 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.17]
2025-07-22 19:31:08 [main] INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring embedded WebApplicationContext
2025-07-22 19:31:08 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1233 ms
2025-07-22 19:31:08 [main] ERROR i.n.r.d.DnsServerAddressStreamProviders - Unable to load io.netty.resolver.dns.macos.MacOSDnsServerAddressStreamProvider, fallback to system defaults. This may result in incorrect DNS resolutions on MacOS. Check whether you have a dependency on 'io.netty:netty-resolver-dns-native-macos'. Use DEBUG level to see the full stack: java.lang.UnsatisfiedLinkError: failed to load the required native library
2025-07-22 19:31:09 [main] WARN  o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2025-07-22 19:31:09 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 3 endpoint(s) beneath base path '/actuator'
2025-07-22 19:31:09 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/api'
2025-07-22 19:31:09 [main] INFO  com.gigass.MarketVisionApplication - Started MarketVisionApplication in 3.354 seconds (process running for 5.41)
2025-07-22 19:31:10 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-07-22 19:31:10 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.p6spy.engine.wrapper.ConnectionWrapper@3ca43e5d
2025-07-22 19:31:10 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-07-22 19:31:10 [main] DEBUG c.g.t.aspect.OperationLogAspect - 操作开始: com.gigass.trading.module.acquisition.SocialMediaCrawlerFactory.createCrawler, 参数: [weibo]
2025-07-22 19:31:10 [scheduling-1] DEBUG c.g.t.aspect.OperationLogAspect - 操作开始: com.gigass.trading.service.DataAcquisitionService.scheduledDataCollection, 参数: []
2025-07-22 19:31:10 [scheduling-1] INFO  c.g.t.service.DataAcquisitionService - 开始定时数据采集任务
2025-07-22 19:31:10 [scheduling-1] DEBUG c.g.t.aspect.OperationLogAspect - 操作开始: com.gigass.trading.module.acquisition.SocialMediaCrawlerFactory.getAllCrawlers, 参数: []
2025-07-22 19:31:10 [main] DEBUG c.g.t.aspect.OperationLogAspect - 操作完成: com.gigass.trading.module.acquisition.SocialMediaCrawlerFactory.createCrawler, 结果: java.lang.Object@2197990b
2025-07-22 19:31:10 [scheduling-1] DEBUG c.g.t.aspect.OperationLogAspect - 操作完成: com.gigass.trading.module.acquisition.SocialMediaCrawlerFactory.getAllCrawlers, 结果: {}
2025-07-22 19:31:10 [main] DEBUG c.g.t.aspect.OperationLogAspect - 操作开始: com.gigass.trading.service.DataAcquisitionService.acquireData, 参数: [java.lang.Object@2197990b]
2025-07-22 19:31:10 [main] DEBUG c.g.t.aspect.OperationLogAspect - 操作完成: com.gigass.trading.service.DataAcquisitionService.acquireData, 结果: []
2025-07-22 19:31:10 [scheduling-1] DEBUG c.g.t.aspect.OperationLogAspect - 操作完成: com.gigass.trading.service.DataAcquisitionService.scheduledDataCollection, 结果: null
2025-07-22 19:31:10 [main] DEBUG c.g.t.aspect.OperationLogAspect - 操作开始: com.gigass.trading.module.base.HotsearchProcessor.processHotsearchData, 参数: [[]]
2025-07-22 19:31:10 [main] DEBUG c.g.t.aspect.OperationLogAspect - 操作完成: com.gigass.trading.module.base.HotsearchProcessor.processHotsearchData, 结果: []
2025-07-22 19:31:10 [main] INFO  com.gigass.MarketVisionApplication - 热搜驱动交易系统启动完成！
2025-07-22 19:31:10 [RMI TCP Connection(1)-127.0.0.1] INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-07-22 19:31:10 [RMI TCP Connection(1)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-07-22 19:31:10 [RMI TCP Connection(1)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 3 ms
2025-07-22 19:32:10 [scheduling-1] DEBUG c.g.t.aspect.OperationLogAspect - 操作开始: com.gigass.trading.service.DataAcquisitionService.scheduledDataCollection, 参数: []
2025-07-22 19:32:10 [scheduling-1] INFO  c.g.t.service.DataAcquisitionService - 开始定时数据采集任务
2025-07-22 19:32:10 [scheduling-1] DEBUG c.g.t.aspect.OperationLogAspect - 操作开始: com.gigass.trading.module.acquisition.SocialMediaCrawlerFactory.getAllCrawlers, 参数: []
2025-07-22 19:32:10 [scheduling-1] DEBUG c.g.t.aspect.OperationLogAspect - 操作完成: com.gigass.trading.module.acquisition.SocialMediaCrawlerFactory.getAllCrawlers, 结果: {}
2025-07-22 19:32:10 [scheduling-1] DEBUG c.g.t.aspect.OperationLogAspect - 操作完成: com.gigass.trading.service.DataAcquisitionService.scheduledDataCollection, 结果: null
2025-07-22 19:33:10 [scheduling-1] DEBUG c.g.t.aspect.OperationLogAspect - 操作开始: com.gigass.trading.service.DataAcquisitionService.scheduledDataCollection, 参数: []
2025-07-22 19:33:10 [scheduling-1] INFO  c.g.t.service.DataAcquisitionService - 开始定时数据采集任务
2025-07-22 19:33:10 [scheduling-1] DEBUG c.g.t.aspect.OperationLogAspect - 操作开始: com.gigass.trading.module.acquisition.SocialMediaCrawlerFactory.getAllCrawlers, 参数: []
2025-07-22 19:33:10 [scheduling-1] DEBUG c.g.t.aspect.OperationLogAspect - 操作完成: com.gigass.trading.module.acquisition.SocialMediaCrawlerFactory.getAllCrawlers, 结果: {}
2025-07-22 19:33:10 [scheduling-1] DEBUG c.g.t.aspect.OperationLogAspect - 操作完成: com.gigass.trading.service.DataAcquisitionService.scheduledDataCollection, 结果: null
2025-07-22 19:34:10 [scheduling-1] DEBUG c.g.t.aspect.OperationLogAspect - 操作开始: com.gigass.trading.service.DataAcquisitionService.scheduledDataCollection, 参数: []
2025-07-22 19:34:10 [scheduling-1] INFO  c.g.t.service.DataAcquisitionService - 开始定时数据采集任务
2025-07-22 19:34:10 [scheduling-1] DEBUG c.g.t.aspect.OperationLogAspect - 操作开始: com.gigass.trading.module.acquisition.SocialMediaCrawlerFactory.getAllCrawlers, 参数: []
2025-07-22 19:34:10 [scheduling-1] DEBUG c.g.t.aspect.OperationLogAspect - 操作完成: com.gigass.trading.module.acquisition.SocialMediaCrawlerFactory.getAllCrawlers, 结果: {}
2025-07-22 19:34:10 [scheduling-1] DEBUG c.g.t.aspect.OperationLogAspect - 操作完成: com.gigass.trading.service.DataAcquisitionService.scheduledDataCollection, 结果: null
2025-07-22 19:35:10 [scheduling-1] DEBUG c.g.t.aspect.OperationLogAspect - 操作开始: com.gigass.trading.service.DataAcquisitionService.scheduledDataCollection, 参数: []
2025-07-22 19:35:10 [scheduling-1] INFO  c.g.t.service.DataAcquisitionService - 开始定时数据采集任务
2025-07-22 19:35:10 [scheduling-1] DEBUG c.g.t.aspect.OperationLogAspect - 操作开始: com.gigass.trading.module.acquisition.SocialMediaCrawlerFactory.getAllCrawlers, 参数: []
2025-07-22 19:35:10 [scheduling-1] DEBUG c.g.t.aspect.OperationLogAspect - 操作完成: com.gigass.trading.module.acquisition.SocialMediaCrawlerFactory.getAllCrawlers, 结果: {}
2025-07-22 19:35:10 [scheduling-1] DEBUG c.g.t.aspect.OperationLogAspect - 操作完成: com.gigass.trading.service.DataAcquisitionService.scheduledDataCollection, 结果: null
2025-07-22 19:35:35 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-07-22 19:35:35 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-07-23 00:12:56 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2025-07-23 00:12:56 [main] INFO  com.gigass.MarketVisionApplication - Starting MarketVisionApplication using Java 21.0.8 with PID 61330 (/Users/gigass/DEVELOP/GitHub/MarketVision/target/classes started by gigass in /Users/gigass/DEVELOP/GitHub/MarketVision)
2025-07-23 00:12:56 [main] DEBUG com.gigass.MarketVisionApplication - Running with Spring Boot v3.2.1, Spring v6.1.2
2025-07-23 00:12:56 [main] INFO  com.gigass.MarketVisionApplication - No active profile set, falling back to 1 default profile: "default"
2025-07-23 00:12:56 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2025-07-23 00:12:56 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 48 ms. Found 1 Elasticsearch repository interface.
2025-07-23 00:12:56 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2025-07-23 00:12:56 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 1 ms. Found 1 Elasticsearch repository interface.
2025-07-23 00:12:56 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2025-07-23 00:12:56 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 11 ms. Found 0 Reactive Elasticsearch repository interfaces.
2025-07-23 00:12:56 [main] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=5a9dfd1a-56da-3808-84e5-b650b2d7c637
2025-07-23 00:12:57 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$RetryInterceptorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$RetryInterceptorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2025-07-23 00:12:57 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 00:12:57 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 00:12:57 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' of type [org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 00:12:57 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 00:12:57 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerClientsDefaultsMappingsProvider' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda/0x000000d80160c400] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 00:12:57 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'defaultsBindHandlerAdvisor' of type [org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 00:12:57 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.cloud.loadbalancer-org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 00:12:57 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 00:12:57 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 00:12:57 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerClientFactory' of type [org.springframework.cloud.loadbalancer.support.LoadBalancerClientFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 00:12:57 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'blockingLoadBalancerClient' of type [org.springframework.cloud.loadbalancer.blocking.client.BlockingLoadBalancerClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 00:12:57 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerServiceInstanceCookieTransformer' of type [org.springframework.cloud.loadbalancer.core.LoadBalancerServiceInstanceCookieTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 00:12:57 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'xForwarderHeadersTransformer' of type [org.springframework.cloud.loadbalancer.blocking.XForwardedHeadersTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 00:12:57 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 00:12:57 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerRequestFactory' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerRequestFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 00:12:57 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerRetryConfig' of type [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerRetryConfig$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 00:12:57 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancedRetryFactory' of type [org.springframework.cloud.loadbalancer.blocking.retry.BlockingLoadBalancedRetryFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 00:12:57 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.RetryLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 00:12:57 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2025-07-23 00:12:57 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 00:12:57 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 00:12:57 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8091 (http)
2025-07-23 00:12:57 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8091"]
2025-07-23 00:12:57 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-07-23 00:12:57 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.17]
2025-07-23 00:12:57 [main] INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring embedded WebApplicationContext
2025-07-23 00:12:57 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1131 ms
2025-07-23 00:13:00 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 3 endpoint(s) beneath base path '/actuator'
2025-07-23 00:13:00 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8091"]
2025-07-23 00:13:00 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8091 (http) with context path '/api'
2025-07-23 00:13:00 [main] INFO  com.gigass.MarketVisionApplication - Started MarketVisionApplication in 4.587 seconds (process running for 5.295)
2025-07-23 00:13:12 [main] INFO  c.g.ai.service.impl.AiServiceImpl - AI响应成功，模型: gemini, 消息长度: 100
2025-07-23 00:13:12 [main] INFO  com.gigass.MarketVisionApplication - 热搜驱动交易系统启动完成！
2025-07-23 00:13:12 [RMI TCP Connection(4)-127.0.0.1] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-07-23 00:13:12 [RMI TCP Connection(1)-127.0.0.1] INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-07-23 00:13:12 [RMI TCP Connection(1)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-07-23 00:13:12 [RMI TCP Connection(1)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 3 ms
2025-07-23 00:13:12 [RMI TCP Connection(4)-127.0.0.1] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.p6spy.engine.wrapper.ConnectionWrapper@d97eb60
2025-07-23 00:13:12 [RMI TCP Connection(4)-127.0.0.1] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-07-23 00:13:59 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2025-07-23 00:13:59 [main] INFO  com.gigass.MarketVisionApplication - Starting MarketVisionApplication using Java 21.0.8 with PID 61849 (/Users/gigass/DEVELOP/GitHub/MarketVision/target/classes started by gigass in /Users/gigass/DEVELOP/GitHub/MarketVision)
2025-07-23 00:13:59 [main] DEBUG com.gigass.MarketVisionApplication - Running with Spring Boot v3.2.1, Spring v6.1.2
2025-07-23 00:13:59 [main] INFO  com.gigass.MarketVisionApplication - No active profile set, falling back to 1 default profile: "default"
2025-07-23 00:14:00 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2025-07-23 00:14:00 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 47 ms. Found 1 Elasticsearch repository interface.
2025-07-23 00:14:00 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2025-07-23 00:14:00 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 1 ms. Found 1 Elasticsearch repository interface.
2025-07-23 00:14:00 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2025-07-23 00:14:00 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 8 ms. Found 0 Reactive Elasticsearch repository interfaces.
2025-07-23 00:14:00 [main] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=5a9dfd1a-56da-3808-84e5-b650b2d7c637
2025-07-23 00:14:00 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$RetryInterceptorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$RetryInterceptorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2025-07-23 00:14:00 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 00:14:00 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 00:14:00 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' of type [org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 00:14:00 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 00:14:00 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerClientsDefaultsMappingsProvider' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda/0x000000700160f3c0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 00:14:00 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'defaultsBindHandlerAdvisor' of type [org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 00:14:00 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.cloud.loadbalancer-org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 00:14:00 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 00:14:00 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 00:14:00 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerClientFactory' of type [org.springframework.cloud.loadbalancer.support.LoadBalancerClientFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 00:14:00 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'blockingLoadBalancerClient' of type [org.springframework.cloud.loadbalancer.blocking.client.BlockingLoadBalancerClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 00:14:00 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerServiceInstanceCookieTransformer' of type [org.springframework.cloud.loadbalancer.core.LoadBalancerServiceInstanceCookieTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 00:14:00 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'xForwarderHeadersTransformer' of type [org.springframework.cloud.loadbalancer.blocking.XForwardedHeadersTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 00:14:00 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 00:14:00 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerRequestFactory' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerRequestFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 00:14:00 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerRetryConfig' of type [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerRetryConfig$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 00:14:00 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancedRetryFactory' of type [org.springframework.cloud.loadbalancer.blocking.retry.BlockingLoadBalancedRetryFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 00:14:00 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.RetryLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 00:14:00 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2025-07-23 00:14:00 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 00:14:00 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 00:14:00 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8091 (http)
2025-07-23 00:14:00 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8091"]
2025-07-23 00:14:00 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-07-23 00:14:00 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.17]
2025-07-23 00:14:00 [main] INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring embedded WebApplicationContext
2025-07-23 00:14:00 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1070 ms
2025-07-23 00:14:03 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 3 endpoint(s) beneath base path '/actuator'
2025-07-23 00:14:03 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8091"]
2025-07-23 00:14:03 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8091 (http) with context path '/api'
2025-07-23 00:14:03 [main] INFO  com.gigass.MarketVisionApplication - Started MarketVisionApplication in 4.03 seconds (process running for 4.636)
2025-07-23 00:14:04 [main] WARN  o.s.a.a.r.SpringAiRetryAutoConfiguration - Retry error. Retry count:1
org.springframework.web.client.ResourceAccessException: I/O error on POST request for "https://max.brother99.top/v1/chat/completions": Remote host terminated the handshake
	at org.springframework.web.client.DefaultRestClient$DefaultRequestBodyUriSpec.createResourceAccessException(DefaultRestClient.java:549)
	at org.springframework.web.client.DefaultRestClient$DefaultRequestBodyUriSpec.exchangeInternal(DefaultRestClient.java:474)
	at org.springframework.web.client.DefaultRestClient$DefaultRequestBodyUriSpec.retrieve(DefaultRestClient.java:439)
	at org.springframework.ai.openai.api.OpenAiApi.chatCompletionEntity(OpenAiApi.java:777)
	at org.springframework.ai.openai.OpenAiChatModel.doChatCompletion(OpenAiChatModel.java:376)
	at org.springframework.ai.openai.OpenAiChatModel.doChatCompletion(OpenAiChatModel.java:76)
	at org.springframework.ai.model.function.AbstractFunctionCallSupport.callWithFunctionSupport(AbstractFunctionCallSupport.java:127)
	at org.springframework.ai.openai.OpenAiChatModel.lambda$call$1(OpenAiChatModel.java:144)
	at org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:335)
	at org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:211)
	at org.springframework.ai.openai.OpenAiChatModel.call(OpenAiChatModel.java:142)
	at com.gigass.ai.service.impl.AiServiceImpl.chat(AiServiceImpl.java:64)
	at com.gigass.ai.demo.GeminiTestDemo.testSimpleChat(GeminiTestDemo.java:65)
	at com.gigass.ai.demo.GeminiTestDemo.run(GeminiTestDemo.java:49)
	at org.springframework.boot.SpringApplication.lambda$callRunner$5(SpringApplication.java:798)
	at org.springframework.util.function.ThrowingConsumer$1.acceptWithException(ThrowingConsumer.java:83)
	at org.springframework.util.function.ThrowingConsumer.accept(ThrowingConsumer.java:60)
	at org.springframework.util.function.ThrowingConsumer$1.accept(ThrowingConsumer.java:88)
	at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:806)
	at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:797)
	at org.springframework.boot.SpringApplication.lambda$callRunners$3(SpringApplication.java:782)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.SortedOps$SizedRefSortingSink.end(SortedOps.java:357)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:510)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at org.springframework.boot.SpringApplication.callRunners(SpringApplication.java:782)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:341)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1358)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1347)
	at com.gigass.MarketVisionApplication.main(MarketVisionApplication.java:29)
Caused by: javax.net.ssl.SSLHandshakeException: Remote host terminated the handshake
	at java.base/sun.security.ssl.SSLSocketImpl.handleEOF(SSLSocketImpl.java:1714)
	at java.base/sun.security.ssl.SSLSocketImpl.decode(SSLSocketImpl.java:1514)
	at java.base/sun.security.ssl.SSLSocketImpl.readHandshakeRecord(SSLSocketImpl.java:1421)
	at java.base/sun.security.ssl.SSLSocketImpl.startHandshake(SSLSocketImpl.java:455)
	at java.base/sun.security.ssl.SSLSocketImpl.startHandshake(SSLSocketImpl.java:426)
	at java.base/sun.net.www.protocol.https.HttpsClient.afterConnect(HttpsClient.java:586)
	at java.base/sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:187)
	at java.base/sun.net.www.protocol.https.HttpsURLConnectionImpl.connect(HttpsURLConnectionImpl.java:141)
	at org.springframework.http.client.SimpleClientHttpRequest.executeInternal(SimpleClientHttpRequest.java:79)
	at org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:70)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.DefaultRestClient$DefaultRequestBodyUriSpec.exchangeInternal(DefaultRestClient.java:468)
	... 32 common frames omitted
Caused by: java.io.EOFException: SSL peer shut down incorrectly
	at java.base/sun.security.ssl.SSLSocketInputRecord.read(SSLSocketInputRecord.java:494)
	at java.base/sun.security.ssl.SSLSocketInputRecord.readHeader(SSLSocketInputRecord.java:483)
	at java.base/sun.security.ssl.SSLSocketInputRecord.decode(SSLSocketInputRecord.java:160)
	at java.base/sun.security.ssl.SSLTransport.decode(SSLTransport.java:111)
	at java.base/sun.security.ssl.SSLSocketImpl.decode(SSLSocketImpl.java:1506)
	... 42 common frames omitted
2025-07-23 00:14:04 [main] ERROR c.g.ai.service.impl.AiServiceImpl - AI调用失败: I/O error on POST request for "https://max.brother99.top/v1/chat/completions": Remote host terminated the handshake
org.springframework.web.client.ResourceAccessException: I/O error on POST request for "https://max.brother99.top/v1/chat/completions": Remote host terminated the handshake
	at org.springframework.web.client.DefaultRestClient$DefaultRequestBodyUriSpec.createResourceAccessException(DefaultRestClient.java:549)
	at org.springframework.web.client.DefaultRestClient$DefaultRequestBodyUriSpec.exchangeInternal(DefaultRestClient.java:474)
	at org.springframework.web.client.DefaultRestClient$DefaultRequestBodyUriSpec.retrieve(DefaultRestClient.java:439)
	at org.springframework.ai.openai.api.OpenAiApi.chatCompletionEntity(OpenAiApi.java:777)
	at org.springframework.ai.openai.OpenAiChatModel.doChatCompletion(OpenAiChatModel.java:376)
	at org.springframework.ai.openai.OpenAiChatModel.doChatCompletion(OpenAiChatModel.java:76)
	at org.springframework.ai.model.function.AbstractFunctionCallSupport.callWithFunctionSupport(AbstractFunctionCallSupport.java:127)
	at org.springframework.ai.openai.OpenAiChatModel.lambda$call$1(OpenAiChatModel.java:144)
	at org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:335)
	at org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:211)
	at org.springframework.ai.openai.OpenAiChatModel.call(OpenAiChatModel.java:142)
	at com.gigass.ai.service.impl.AiServiceImpl.chat(AiServiceImpl.java:64)
	at com.gigass.ai.demo.GeminiTestDemo.testSimpleChat(GeminiTestDemo.java:65)
	at com.gigass.ai.demo.GeminiTestDemo.run(GeminiTestDemo.java:49)
	at org.springframework.boot.SpringApplication.lambda$callRunner$5(SpringApplication.java:798)
	at org.springframework.util.function.ThrowingConsumer$1.acceptWithException(ThrowingConsumer.java:83)
	at org.springframework.util.function.ThrowingConsumer.accept(ThrowingConsumer.java:60)
	at org.springframework.util.function.ThrowingConsumer$1.accept(ThrowingConsumer.java:88)
	at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:806)
	at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:797)
	at org.springframework.boot.SpringApplication.lambda$callRunners$3(SpringApplication.java:782)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.SortedOps$SizedRefSortingSink.end(SortedOps.java:357)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:510)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at org.springframework.boot.SpringApplication.callRunners(SpringApplication.java:782)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:341)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1358)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1347)
	at com.gigass.MarketVisionApplication.main(MarketVisionApplication.java:29)
Caused by: javax.net.ssl.SSLHandshakeException: Remote host terminated the handshake
	at java.base/sun.security.ssl.SSLSocketImpl.handleEOF(SSLSocketImpl.java:1714)
	at java.base/sun.security.ssl.SSLSocketImpl.decode(SSLSocketImpl.java:1514)
	at java.base/sun.security.ssl.SSLSocketImpl.readHandshakeRecord(SSLSocketImpl.java:1421)
	at java.base/sun.security.ssl.SSLSocketImpl.startHandshake(SSLSocketImpl.java:455)
	at java.base/sun.security.ssl.SSLSocketImpl.startHandshake(SSLSocketImpl.java:426)
	at java.base/sun.net.www.protocol.https.HttpsClient.afterConnect(HttpsClient.java:586)
	at java.base/sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:187)
	at java.base/sun.net.www.protocol.https.HttpsURLConnectionImpl.connect(HttpsURLConnectionImpl.java:141)
	at org.springframework.http.client.SimpleClientHttpRequest.executeInternal(SimpleClientHttpRequest.java:79)
	at org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:70)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.DefaultRestClient$DefaultRequestBodyUriSpec.exchangeInternal(DefaultRestClient.java:468)
	... 32 common frames omitted
Caused by: java.io.EOFException: SSL peer shut down incorrectly
	at java.base/sun.security.ssl.SSLSocketInputRecord.read(SSLSocketInputRecord.java:494)
	at java.base/sun.security.ssl.SSLSocketInputRecord.readHeader(SSLSocketInputRecord.java:483)
	at java.base/sun.security.ssl.SSLSocketInputRecord.decode(SSLSocketInputRecord.java:160)
	at java.base/sun.security.ssl.SSLTransport.decode(SSLTransport.java:111)
	at java.base/sun.security.ssl.SSLSocketImpl.decode(SSLSocketImpl.java:1506)
	... 42 common frames omitted
2025-07-23 00:14:04 [main] INFO  com.gigass.MarketVisionApplication - 热搜驱动交易系统启动完成！
2025-07-23 00:14:05 [RMI TCP Connection(1)-127.0.0.1] INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-07-23 00:14:05 [RMI TCP Connection(1)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-07-23 00:14:05 [RMI TCP Connection(3)-127.0.0.1] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-07-23 00:14:05 [RMI TCP Connection(1)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-07-23 00:14:05 [RMI TCP Connection(3)-127.0.0.1] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.p6spy.engine.wrapper.ConnectionWrapper@6d92095c
2025-07-23 00:14:05 [RMI TCP Connection(3)-127.0.0.1] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-07-23 00:14:22 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2025-07-23 00:14:22 [main] INFO  com.gigass.MarketVisionApplication - Starting MarketVisionApplication using Java 21.0.8 with PID 62025 (/Users/gigass/DEVELOP/GitHub/MarketVision/target/classes started by gigass in /Users/gigass/DEVELOP/GitHub/MarketVision)
2025-07-23 00:14:22 [main] DEBUG com.gigass.MarketVisionApplication - Running with Spring Boot v3.2.1, Spring v6.1.2
2025-07-23 00:14:22 [main] INFO  com.gigass.MarketVisionApplication - No active profile set, falling back to 1 default profile: "default"
2025-07-23 00:14:22 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2025-07-23 00:14:22 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 48 ms. Found 1 Elasticsearch repository interface.
2025-07-23 00:14:22 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2025-07-23 00:14:22 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 1 ms. Found 1 Elasticsearch repository interface.
2025-07-23 00:14:23 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2025-07-23 00:14:23 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 10 ms. Found 0 Reactive Elasticsearch repository interfaces.
2025-07-23 00:14:23 [main] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=5a9dfd1a-56da-3808-84e5-b650b2d7c637
2025-07-23 00:14:23 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$RetryInterceptorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$RetryInterceptorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2025-07-23 00:14:23 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 00:14:23 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 00:14:23 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' of type [org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 00:14:23 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 00:14:23 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerClientsDefaultsMappingsProvider' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda/0x000000080160a000] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 00:14:23 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'defaultsBindHandlerAdvisor' of type [org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 00:14:23 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.cloud.loadbalancer-org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 00:14:23 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 00:14:23 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 00:14:23 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerClientFactory' of type [org.springframework.cloud.loadbalancer.support.LoadBalancerClientFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 00:14:23 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'blockingLoadBalancerClient' of type [org.springframework.cloud.loadbalancer.blocking.client.BlockingLoadBalancerClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 00:14:23 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerServiceInstanceCookieTransformer' of type [org.springframework.cloud.loadbalancer.core.LoadBalancerServiceInstanceCookieTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 00:14:23 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'xForwarderHeadersTransformer' of type [org.springframework.cloud.loadbalancer.blocking.XForwardedHeadersTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 00:14:23 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 00:14:23 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerRequestFactory' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerRequestFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 00:14:23 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerRetryConfig' of type [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerRetryConfig$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 00:14:23 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancedRetryFactory' of type [org.springframework.cloud.loadbalancer.blocking.retry.BlockingLoadBalancedRetryFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 00:14:23 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.RetryLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 00:14:23 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2025-07-23 00:14:23 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 00:14:23 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 00:14:23 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8091 (http)
2025-07-23 00:14:23 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8091"]
2025-07-23 00:14:23 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-07-23 00:14:23 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.17]
2025-07-23 00:14:23 [main] INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring embedded WebApplicationContext
2025-07-23 00:14:23 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1219 ms
2025-07-23 00:14:25 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 3 endpoint(s) beneath base path '/actuator'
2025-07-23 00:14:25 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8091"]
2025-07-23 00:14:25 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8091 (http) with context path '/api'
2025-07-23 00:14:25 [main] INFO  com.gigass.MarketVisionApplication - Started MarketVisionApplication in 3.852 seconds (process running for 4.612)
2025-07-23 00:14:27 [main] WARN  o.s.a.a.r.SpringAiRetryAutoConfiguration - Retry error. Retry count:1
org.springframework.web.client.ResourceAccessException: I/O error on POST request for "https://max.brother99.top/v1/chat/completions": Remote host terminated the handshake
	at org.springframework.web.client.DefaultRestClient$DefaultRequestBodyUriSpec.createResourceAccessException(DefaultRestClient.java:549)
	at org.springframework.web.client.DefaultRestClient$DefaultRequestBodyUriSpec.exchangeInternal(DefaultRestClient.java:474)
	at org.springframework.web.client.DefaultRestClient$DefaultRequestBodyUriSpec.retrieve(DefaultRestClient.java:439)
	at org.springframework.ai.openai.api.OpenAiApi.chatCompletionEntity(OpenAiApi.java:777)
	at org.springframework.ai.openai.OpenAiChatModel.doChatCompletion(OpenAiChatModel.java:376)
	at org.springframework.ai.openai.OpenAiChatModel.doChatCompletion(OpenAiChatModel.java:76)
	at org.springframework.ai.model.function.AbstractFunctionCallSupport.callWithFunctionSupport(AbstractFunctionCallSupport.java:127)
	at org.springframework.ai.openai.OpenAiChatModel.lambda$call$1(OpenAiChatModel.java:144)
	at org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:335)
	at org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:211)
	at org.springframework.ai.openai.OpenAiChatModel.call(OpenAiChatModel.java:142)
	at com.gigass.ai.service.impl.AiServiceImpl.chat(AiServiceImpl.java:64)
	at com.gigass.ai.demo.GeminiTestDemo.testSimpleChat(GeminiTestDemo.java:65)
	at com.gigass.ai.demo.GeminiTestDemo.run(GeminiTestDemo.java:49)
	at org.springframework.boot.SpringApplication.lambda$callRunner$5(SpringApplication.java:798)
	at org.springframework.util.function.ThrowingConsumer$1.acceptWithException(ThrowingConsumer.java:83)
	at org.springframework.util.function.ThrowingConsumer.accept(ThrowingConsumer.java:60)
	at org.springframework.util.function.ThrowingConsumer$1.accept(ThrowingConsumer.java:88)
	at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:806)
	at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:797)
	at org.springframework.boot.SpringApplication.lambda$callRunners$3(SpringApplication.java:782)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.SortedOps$SizedRefSortingSink.end(SortedOps.java:357)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:510)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at org.springframework.boot.SpringApplication.callRunners(SpringApplication.java:782)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:341)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1358)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1347)
	at com.gigass.MarketVisionApplication.main(MarketVisionApplication.java:29)
Caused by: javax.net.ssl.SSLHandshakeException: Remote host terminated the handshake
	at java.base/sun.security.ssl.SSLSocketImpl.handleEOF(SSLSocketImpl.java:1714)
	at java.base/sun.security.ssl.SSLSocketImpl.decode(SSLSocketImpl.java:1514)
	at java.base/sun.security.ssl.SSLSocketImpl.readHandshakeRecord(SSLSocketImpl.java:1421)
	at java.base/sun.security.ssl.SSLSocketImpl.startHandshake(SSLSocketImpl.java:455)
	at java.base/sun.security.ssl.SSLSocketImpl.startHandshake(SSLSocketImpl.java:426)
	at java.base/sun.net.www.protocol.https.HttpsClient.afterConnect(HttpsClient.java:586)
	at java.base/sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:187)
	at java.base/sun.net.www.protocol.https.HttpsURLConnectionImpl.connect(HttpsURLConnectionImpl.java:141)
	at org.springframework.http.client.SimpleClientHttpRequest.executeInternal(SimpleClientHttpRequest.java:79)
	at org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:70)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.DefaultRestClient$DefaultRequestBodyUriSpec.exchangeInternal(DefaultRestClient.java:468)
	... 32 common frames omitted
Caused by: java.io.EOFException: SSL peer shut down incorrectly
	at java.base/sun.security.ssl.SSLSocketInputRecord.read(SSLSocketInputRecord.java:494)
	at java.base/sun.security.ssl.SSLSocketInputRecord.readHeader(SSLSocketInputRecord.java:483)
	at java.base/sun.security.ssl.SSLSocketInputRecord.decode(SSLSocketInputRecord.java:160)
	at java.base/sun.security.ssl.SSLTransport.decode(SSLTransport.java:111)
	at java.base/sun.security.ssl.SSLSocketImpl.decode(SSLSocketImpl.java:1506)
	... 42 common frames omitted
2025-07-23 00:14:27 [main] ERROR c.g.ai.service.impl.AiServiceImpl - AI调用失败: I/O error on POST request for "https://max.brother99.top/v1/chat/completions": Remote host terminated the handshake
org.springframework.web.client.ResourceAccessException: I/O error on POST request for "https://max.brother99.top/v1/chat/completions": Remote host terminated the handshake
	at org.springframework.web.client.DefaultRestClient$DefaultRequestBodyUriSpec.createResourceAccessException(DefaultRestClient.java:549)
	at org.springframework.web.client.DefaultRestClient$DefaultRequestBodyUriSpec.exchangeInternal(DefaultRestClient.java:474)
	at org.springframework.web.client.DefaultRestClient$DefaultRequestBodyUriSpec.retrieve(DefaultRestClient.java:439)
	at org.springframework.ai.openai.api.OpenAiApi.chatCompletionEntity(OpenAiApi.java:777)
	at org.springframework.ai.openai.OpenAiChatModel.doChatCompletion(OpenAiChatModel.java:376)
	at org.springframework.ai.openai.OpenAiChatModel.doChatCompletion(OpenAiChatModel.java:76)
	at org.springframework.ai.model.function.AbstractFunctionCallSupport.callWithFunctionSupport(AbstractFunctionCallSupport.java:127)
	at org.springframework.ai.openai.OpenAiChatModel.lambda$call$1(OpenAiChatModel.java:144)
	at org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:335)
	at org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:211)
	at org.springframework.ai.openai.OpenAiChatModel.call(OpenAiChatModel.java:142)
	at com.gigass.ai.service.impl.AiServiceImpl.chat(AiServiceImpl.java:64)
	at com.gigass.ai.demo.GeminiTestDemo.testSimpleChat(GeminiTestDemo.java:65)
	at com.gigass.ai.demo.GeminiTestDemo.run(GeminiTestDemo.java:49)
	at org.springframework.boot.SpringApplication.lambda$callRunner$5(SpringApplication.java:798)
	at org.springframework.util.function.ThrowingConsumer$1.acceptWithException(ThrowingConsumer.java:83)
	at org.springframework.util.function.ThrowingConsumer.accept(ThrowingConsumer.java:60)
	at org.springframework.util.function.ThrowingConsumer$1.accept(ThrowingConsumer.java:88)
	at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:806)
	at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:797)
	at org.springframework.boot.SpringApplication.lambda$callRunners$3(SpringApplication.java:782)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.SortedOps$SizedRefSortingSink.end(SortedOps.java:357)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:510)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at org.springframework.boot.SpringApplication.callRunners(SpringApplication.java:782)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:341)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1358)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1347)
	at com.gigass.MarketVisionApplication.main(MarketVisionApplication.java:29)
Caused by: javax.net.ssl.SSLHandshakeException: Remote host terminated the handshake
	at java.base/sun.security.ssl.SSLSocketImpl.handleEOF(SSLSocketImpl.java:1714)
	at java.base/sun.security.ssl.SSLSocketImpl.decode(SSLSocketImpl.java:1514)
	at java.base/sun.security.ssl.SSLSocketImpl.readHandshakeRecord(SSLSocketImpl.java:1421)
	at java.base/sun.security.ssl.SSLSocketImpl.startHandshake(SSLSocketImpl.java:455)
	at java.base/sun.security.ssl.SSLSocketImpl.startHandshake(SSLSocketImpl.java:426)
	at java.base/sun.net.www.protocol.https.HttpsClient.afterConnect(HttpsClient.java:586)
	at java.base/sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:187)
	at java.base/sun.net.www.protocol.https.HttpsURLConnectionImpl.connect(HttpsURLConnectionImpl.java:141)
	at org.springframework.http.client.SimpleClientHttpRequest.executeInternal(SimpleClientHttpRequest.java:79)
	at org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:70)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.DefaultRestClient$DefaultRequestBodyUriSpec.exchangeInternal(DefaultRestClient.java:468)
	... 32 common frames omitted
Caused by: java.io.EOFException: SSL peer shut down incorrectly
	at java.base/sun.security.ssl.SSLSocketInputRecord.read(SSLSocketInputRecord.java:494)
	at java.base/sun.security.ssl.SSLSocketInputRecord.readHeader(SSLSocketInputRecord.java:483)
	at java.base/sun.security.ssl.SSLSocketInputRecord.decode(SSLSocketInputRecord.java:160)
	at java.base/sun.security.ssl.SSLTransport.decode(SSLTransport.java:111)
	at java.base/sun.security.ssl.SSLSocketImpl.decode(SSLSocketImpl.java:1506)
	... 42 common frames omitted
2025-07-23 00:14:27 [main] INFO  com.gigass.MarketVisionApplication - 热搜驱动交易系统启动完成！
2025-07-23 00:14:27 [RMI TCP Connection(3)-127.0.0.1] INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-07-23 00:14:27 [RMI TCP Connection(3)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-07-23 00:14:27 [RMI TCP Connection(2)-127.0.0.1] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-07-23 00:14:27 [RMI TCP Connection(3)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2025-07-23 00:14:27 [RMI TCP Connection(2)-127.0.0.1] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.p6spy.engine.wrapper.ConnectionWrapper@5758b103
2025-07-23 00:14:27 [RMI TCP Connection(2)-127.0.0.1] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-07-23 00:14:42 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-07-23 00:14:42 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-07-23 00:14:44 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2025-07-23 00:14:44 [main] INFO  com.gigass.MarketVisionApplication - Starting MarketVisionApplication using Java 21.0.8 with PID 62217 (/Users/gigass/DEVELOP/GitHub/MarketVision/target/classes started by gigass in /Users/gigass/DEVELOP/GitHub/MarketVision)
2025-07-23 00:14:44 [main] DEBUG com.gigass.MarketVisionApplication - Running with Spring Boot v3.2.1, Spring v6.1.2
2025-07-23 00:14:44 [main] INFO  com.gigass.MarketVisionApplication - No active profile set, falling back to 1 default profile: "default"
2025-07-23 00:14:44 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2025-07-23 00:14:44 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 49 ms. Found 1 Elasticsearch repository interface.
2025-07-23 00:14:44 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2025-07-23 00:14:44 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 1 ms. Found 1 Elasticsearch repository interface.
2025-07-23 00:14:44 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2025-07-23 00:14:44 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 9 ms. Found 0 Reactive Elasticsearch repository interfaces.
2025-07-23 00:14:44 [main] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=5a9dfd1a-56da-3808-84e5-b650b2d7c637
2025-07-23 00:14:45 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$RetryInterceptorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$RetryInterceptorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2025-07-23 00:14:45 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 00:14:45 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 00:14:45 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' of type [org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 00:14:45 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 00:14:45 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerClientsDefaultsMappingsProvider' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda/0x0000007001610580] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 00:14:45 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'defaultsBindHandlerAdvisor' of type [org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 00:14:45 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.cloud.loadbalancer-org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 00:14:45 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 00:14:45 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 00:14:45 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerClientFactory' of type [org.springframework.cloud.loadbalancer.support.LoadBalancerClientFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 00:14:45 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'blockingLoadBalancerClient' of type [org.springframework.cloud.loadbalancer.blocking.client.BlockingLoadBalancerClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 00:14:45 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerServiceInstanceCookieTransformer' of type [org.springframework.cloud.loadbalancer.core.LoadBalancerServiceInstanceCookieTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 00:14:45 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'xForwarderHeadersTransformer' of type [org.springframework.cloud.loadbalancer.blocking.XForwardedHeadersTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 00:14:45 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 00:14:45 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerRequestFactory' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerRequestFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 00:14:45 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerRetryConfig' of type [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerRetryConfig$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 00:14:45 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancedRetryFactory' of type [org.springframework.cloud.loadbalancer.blocking.retry.BlockingLoadBalancedRetryFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 00:14:45 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.RetryLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 00:14:45 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2025-07-23 00:14:45 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 00:14:45 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 00:14:45 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8091 (http)
2025-07-23 00:14:45 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8091"]
2025-07-23 00:14:45 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-07-23 00:14:45 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.17]
2025-07-23 00:14:45 [main] INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring embedded WebApplicationContext
2025-07-23 00:14:45 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1189 ms
2025-07-23 00:14:47 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 3 endpoint(s) beneath base path '/actuator'
2025-07-23 00:14:47 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8091"]
2025-07-23 00:14:47 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8091 (http) with context path '/api'
2025-07-23 00:14:47 [main] INFO  com.gigass.MarketVisionApplication - Started MarketVisionApplication in 3.854 seconds (process running for 4.623)
2025-07-23 00:14:48 [main] WARN  o.s.a.a.r.SpringAiRetryAutoConfiguration - Retry error. Retry count:1
org.springframework.web.client.ResourceAccessException: I/O error on POST request for "https://max.brother99.top/v1/chat/completions": Remote host terminated the handshake
	at org.springframework.web.client.DefaultRestClient$DefaultRequestBodyUriSpec.createResourceAccessException(DefaultRestClient.java:549)
	at org.springframework.web.client.DefaultRestClient$DefaultRequestBodyUriSpec.exchangeInternal(DefaultRestClient.java:474)
	at org.springframework.web.client.DefaultRestClient$DefaultRequestBodyUriSpec.retrieve(DefaultRestClient.java:439)
	at org.springframework.ai.openai.api.OpenAiApi.chatCompletionEntity(OpenAiApi.java:777)
	at org.springframework.ai.openai.OpenAiChatModel.doChatCompletion(OpenAiChatModel.java:376)
	at org.springframework.ai.openai.OpenAiChatModel.doChatCompletion(OpenAiChatModel.java:76)
	at org.springframework.ai.model.function.AbstractFunctionCallSupport.callWithFunctionSupport(AbstractFunctionCallSupport.java:127)
	at org.springframework.ai.openai.OpenAiChatModel.lambda$call$1(OpenAiChatModel.java:144)
	at org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:335)
	at org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:211)
	at org.springframework.ai.openai.OpenAiChatModel.call(OpenAiChatModel.java:142)
	at com.gigass.ai.service.impl.AiServiceImpl.chat(AiServiceImpl.java:64)
	at com.gigass.ai.demo.GeminiTestDemo.testSimpleChat(GeminiTestDemo.java:65)
	at com.gigass.ai.demo.GeminiTestDemo.run(GeminiTestDemo.java:49)
	at org.springframework.boot.SpringApplication.lambda$callRunner$5(SpringApplication.java:798)
	at org.springframework.util.function.ThrowingConsumer$1.acceptWithException(ThrowingConsumer.java:83)
	at org.springframework.util.function.ThrowingConsumer.accept(ThrowingConsumer.java:60)
	at org.springframework.util.function.ThrowingConsumer$1.accept(ThrowingConsumer.java:88)
	at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:806)
	at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:797)
	at org.springframework.boot.SpringApplication.lambda$callRunners$3(SpringApplication.java:782)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.SortedOps$SizedRefSortingSink.end(SortedOps.java:357)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:510)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at org.springframework.boot.SpringApplication.callRunners(SpringApplication.java:782)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:341)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1358)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1347)
	at com.gigass.MarketVisionApplication.main(MarketVisionApplication.java:29)
Caused by: javax.net.ssl.SSLHandshakeException: Remote host terminated the handshake
	at java.base/sun.security.ssl.SSLSocketImpl.handleEOF(SSLSocketImpl.java:1714)
	at java.base/sun.security.ssl.SSLSocketImpl.decode(SSLSocketImpl.java:1514)
	at java.base/sun.security.ssl.SSLSocketImpl.readHandshakeRecord(SSLSocketImpl.java:1421)
	at java.base/sun.security.ssl.SSLSocketImpl.startHandshake(SSLSocketImpl.java:455)
	at java.base/sun.security.ssl.SSLSocketImpl.startHandshake(SSLSocketImpl.java:426)
	at java.base/sun.net.www.protocol.https.HttpsClient.afterConnect(HttpsClient.java:586)
	at java.base/sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:187)
	at java.base/sun.net.www.protocol.https.HttpsURLConnectionImpl.connect(HttpsURLConnectionImpl.java:141)
	at org.springframework.http.client.SimpleClientHttpRequest.executeInternal(SimpleClientHttpRequest.java:79)
	at org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:70)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.DefaultRestClient$DefaultRequestBodyUriSpec.exchangeInternal(DefaultRestClient.java:468)
	... 32 common frames omitted
Caused by: java.io.EOFException: SSL peer shut down incorrectly
	at java.base/sun.security.ssl.SSLSocketInputRecord.read(SSLSocketInputRecord.java:494)
	at java.base/sun.security.ssl.SSLSocketInputRecord.readHeader(SSLSocketInputRecord.java:483)
	at java.base/sun.security.ssl.SSLSocketInputRecord.decode(SSLSocketInputRecord.java:160)
	at java.base/sun.security.ssl.SSLTransport.decode(SSLTransport.java:111)
	at java.base/sun.security.ssl.SSLSocketImpl.decode(SSLSocketImpl.java:1506)
	... 42 common frames omitted
2025-07-23 00:14:48 [main] ERROR c.g.ai.service.impl.AiServiceImpl - AI调用失败: I/O error on POST request for "https://max.brother99.top/v1/chat/completions": Remote host terminated the handshake
org.springframework.web.client.ResourceAccessException: I/O error on POST request for "https://max.brother99.top/v1/chat/completions": Remote host terminated the handshake
	at org.springframework.web.client.DefaultRestClient$DefaultRequestBodyUriSpec.createResourceAccessException(DefaultRestClient.java:549)
	at org.springframework.web.client.DefaultRestClient$DefaultRequestBodyUriSpec.exchangeInternal(DefaultRestClient.java:474)
	at org.springframework.web.client.DefaultRestClient$DefaultRequestBodyUriSpec.retrieve(DefaultRestClient.java:439)
	at org.springframework.ai.openai.api.OpenAiApi.chatCompletionEntity(OpenAiApi.java:777)
	at org.springframework.ai.openai.OpenAiChatModel.doChatCompletion(OpenAiChatModel.java:376)
	at org.springframework.ai.openai.OpenAiChatModel.doChatCompletion(OpenAiChatModel.java:76)
	at org.springframework.ai.model.function.AbstractFunctionCallSupport.callWithFunctionSupport(AbstractFunctionCallSupport.java:127)
	at org.springframework.ai.openai.OpenAiChatModel.lambda$call$1(OpenAiChatModel.java:144)
	at org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:335)
	at org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:211)
	at org.springframework.ai.openai.OpenAiChatModel.call(OpenAiChatModel.java:142)
	at com.gigass.ai.service.impl.AiServiceImpl.chat(AiServiceImpl.java:64)
	at com.gigass.ai.demo.GeminiTestDemo.testSimpleChat(GeminiTestDemo.java:65)
	at com.gigass.ai.demo.GeminiTestDemo.run(GeminiTestDemo.java:49)
	at org.springframework.boot.SpringApplication.lambda$callRunner$5(SpringApplication.java:798)
	at org.springframework.util.function.ThrowingConsumer$1.acceptWithException(ThrowingConsumer.java:83)
	at org.springframework.util.function.ThrowingConsumer.accept(ThrowingConsumer.java:60)
	at org.springframework.util.function.ThrowingConsumer$1.accept(ThrowingConsumer.java:88)
	at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:806)
	at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:797)
	at org.springframework.boot.SpringApplication.lambda$callRunners$3(SpringApplication.java:782)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.SortedOps$SizedRefSortingSink.end(SortedOps.java:357)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:510)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at org.springframework.boot.SpringApplication.callRunners(SpringApplication.java:782)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:341)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1358)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1347)
	at com.gigass.MarketVisionApplication.main(MarketVisionApplication.java:29)
Caused by: javax.net.ssl.SSLHandshakeException: Remote host terminated the handshake
	at java.base/sun.security.ssl.SSLSocketImpl.handleEOF(SSLSocketImpl.java:1714)
	at java.base/sun.security.ssl.SSLSocketImpl.decode(SSLSocketImpl.java:1514)
	at java.base/sun.security.ssl.SSLSocketImpl.readHandshakeRecord(SSLSocketImpl.java:1421)
	at java.base/sun.security.ssl.SSLSocketImpl.startHandshake(SSLSocketImpl.java:455)
	at java.base/sun.security.ssl.SSLSocketImpl.startHandshake(SSLSocketImpl.java:426)
	at java.base/sun.net.www.protocol.https.HttpsClient.afterConnect(HttpsClient.java:586)
	at java.base/sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:187)
	at java.base/sun.net.www.protocol.https.HttpsURLConnectionImpl.connect(HttpsURLConnectionImpl.java:141)
	at org.springframework.http.client.SimpleClientHttpRequest.executeInternal(SimpleClientHttpRequest.java:79)
	at org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:70)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.DefaultRestClient$DefaultRequestBodyUriSpec.exchangeInternal(DefaultRestClient.java:468)
	... 32 common frames omitted
Caused by: java.io.EOFException: SSL peer shut down incorrectly
	at java.base/sun.security.ssl.SSLSocketInputRecord.read(SSLSocketInputRecord.java:494)
	at java.base/sun.security.ssl.SSLSocketInputRecord.readHeader(SSLSocketInputRecord.java:483)
	at java.base/sun.security.ssl.SSLSocketInputRecord.decode(SSLSocketInputRecord.java:160)
	at java.base/sun.security.ssl.SSLTransport.decode(SSLTransport.java:111)
	at java.base/sun.security.ssl.SSLSocketImpl.decode(SSLSocketImpl.java:1506)
	... 42 common frames omitted
2025-07-23 00:14:48 [main] INFO  com.gigass.MarketVisionApplication - 热搜驱动交易系统启动完成！
2025-07-23 00:14:49 [RMI TCP Connection(4)-127.0.0.1] INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-07-23 00:14:49 [RMI TCP Connection(4)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-07-23 00:14:49 [RMI TCP Connection(3)-127.0.0.1] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-07-23 00:14:49 [RMI TCP Connection(4)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-07-23 00:14:49 [RMI TCP Connection(3)-127.0.0.1] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.p6spy.engine.wrapper.ConnectionWrapper@23e499ef
2025-07-23 00:14:49 [RMI TCP Connection(3)-127.0.0.1] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-07-23 00:15:22 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-07-23 00:15:22 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-07-23 00:15:24 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2025-07-23 00:15:24 [main] INFO  com.gigass.MarketVisionApplication - Starting MarketVisionApplication using Java 21.0.8 with PID 62548 (/Users/gigass/DEVELOP/GitHub/MarketVision/target/classes started by gigass in /Users/gigass/DEVELOP/GitHub/MarketVision)
2025-07-23 00:15:24 [main] DEBUG com.gigass.MarketVisionApplication - Running with Spring Boot v3.2.1, Spring v6.1.2
2025-07-23 00:15:24 [main] INFO  com.gigass.MarketVisionApplication - No active profile set, falling back to 1 default profile: "default"
2025-07-23 00:15:24 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2025-07-23 00:15:24 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 59 ms. Found 1 Elasticsearch repository interface.
2025-07-23 00:15:24 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2025-07-23 00:15:24 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 1 ms. Found 1 Elasticsearch repository interface.
2025-07-23 00:15:24 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2025-07-23 00:15:24 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 9 ms. Found 0 Reactive Elasticsearch repository interfaces.
2025-07-23 00:15:25 [main] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=5a9dfd1a-56da-3808-84e5-b650b2d7c637
2025-07-23 00:15:25 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$RetryInterceptorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$RetryInterceptorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2025-07-23 00:15:25 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 00:15:25 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 00:15:25 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' of type [org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 00:15:25 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 00:15:25 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerClientsDefaultsMappingsProvider' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda/0x000000800160fde8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 00:15:25 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'defaultsBindHandlerAdvisor' of type [org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 00:15:25 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.cloud.loadbalancer-org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 00:15:25 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 00:15:25 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 00:15:25 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerClientFactory' of type [org.springframework.cloud.loadbalancer.support.LoadBalancerClientFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 00:15:25 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'blockingLoadBalancerClient' of type [org.springframework.cloud.loadbalancer.blocking.client.BlockingLoadBalancerClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 00:15:25 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerServiceInstanceCookieTransformer' of type [org.springframework.cloud.loadbalancer.core.LoadBalancerServiceInstanceCookieTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 00:15:25 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'xForwarderHeadersTransformer' of type [org.springframework.cloud.loadbalancer.blocking.XForwardedHeadersTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 00:15:25 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 00:15:25 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerRequestFactory' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerRequestFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 00:15:25 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerRetryConfig' of type [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerRetryConfig$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 00:15:25 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancedRetryFactory' of type [org.springframework.cloud.loadbalancer.blocking.retry.BlockingLoadBalancedRetryFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 00:15:25 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.RetryLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 00:15:25 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2025-07-23 00:15:25 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 00:15:25 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 00:15:25 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8091 (http)
2025-07-23 00:15:25 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8091"]
2025-07-23 00:15:25 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-07-23 00:15:25 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.17]
2025-07-23 00:15:25 [main] INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring embedded WebApplicationContext
2025-07-23 00:15:25 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1206 ms
2025-07-23 00:15:28 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 3 endpoint(s) beneath base path '/actuator'
2025-07-23 00:15:28 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8091"]
2025-07-23 00:15:28 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8091 (http) with context path '/api'
2025-07-23 00:15:28 [main] INFO  com.gigass.MarketVisionApplication - Started MarketVisionApplication in 4.26 seconds (process running for 5.04)
2025-07-23 00:15:44 [main] INFO  c.g.ai.service.impl.AiServiceImpl - AI响应成功，模型: gemini, 消息长度: 318
2025-07-23 00:15:44 [main] INFO  com.gigass.MarketVisionApplication - 热搜驱动交易系统启动完成！
2025-07-23 00:15:45 [RMI TCP Connection(3)-127.0.0.1] INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-07-23 00:15:45 [RMI TCP Connection(3)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-07-23 00:15:45 [RMI TCP Connection(2)-127.0.0.1] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-07-23 00:15:45 [RMI TCP Connection(3)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2025-07-23 00:15:45 [RMI TCP Connection(2)-127.0.0.1] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.p6spy.engine.wrapper.ConnectionWrapper@3b45ad63
2025-07-23 00:15:45 [RMI TCP Connection(2)-127.0.0.1] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-07-23 00:16:10 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-07-23 00:16:10 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-07-23 00:16:12 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2025-07-23 00:16:12 [main] INFO  com.gigass.MarketVisionApplication - Starting MarketVisionApplication using Java 21.0.8 with PID 62966 (/Users/gigass/DEVELOP/GitHub/MarketVision/target/classes started by gigass in /Users/gigass/DEVELOP/GitHub/MarketVision)
2025-07-23 00:16:12 [main] DEBUG com.gigass.MarketVisionApplication - Running with Spring Boot v3.2.1, Spring v6.1.2
2025-07-23 00:16:12 [main] INFO  com.gigass.MarketVisionApplication - No active profile set, falling back to 1 default profile: "default"
2025-07-23 00:16:12 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2025-07-23 00:16:12 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 46 ms. Found 1 Elasticsearch repository interface.
2025-07-23 00:16:12 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2025-07-23 00:16:12 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 1 ms. Found 1 Elasticsearch repository interface.
2025-07-23 00:16:13 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2025-07-23 00:16:13 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 10 ms. Found 0 Reactive Elasticsearch repository interfaces.
2025-07-23 00:16:13 [main] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=5a9dfd1a-56da-3808-84e5-b650b2d7c637
2025-07-23 00:16:13 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$RetryInterceptorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$RetryInterceptorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2025-07-23 00:16:13 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 00:16:13 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 00:16:13 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' of type [org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 00:16:13 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 00:16:13 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerClientsDefaultsMappingsProvider' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda/0x000000b8015d50b8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 00:16:13 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'defaultsBindHandlerAdvisor' of type [org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 00:16:13 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.cloud.loadbalancer-org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 00:16:13 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 00:16:13 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 00:16:13 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerClientFactory' of type [org.springframework.cloud.loadbalancer.support.LoadBalancerClientFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 00:16:13 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'blockingLoadBalancerClient' of type [org.springframework.cloud.loadbalancer.blocking.client.BlockingLoadBalancerClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 00:16:13 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerServiceInstanceCookieTransformer' of type [org.springframework.cloud.loadbalancer.core.LoadBalancerServiceInstanceCookieTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 00:16:13 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'xForwarderHeadersTransformer' of type [org.springframework.cloud.loadbalancer.blocking.XForwardedHeadersTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 00:16:13 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 00:16:13 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerRequestFactory' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerRequestFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 00:16:13 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerRetryConfig' of type [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerRetryConfig$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 00:16:13 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancedRetryFactory' of type [org.springframework.cloud.loadbalancer.blocking.retry.BlockingLoadBalancedRetryFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 00:16:13 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.RetryLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 00:16:13 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2025-07-23 00:16:13 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 00:16:13 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 00:16:13 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8091 (http)
2025-07-23 00:16:13 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8091"]
2025-07-23 00:16:13 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-07-23 00:16:13 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.17]
2025-07-23 00:16:13 [main] INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring embedded WebApplicationContext
2025-07-23 00:16:13 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1071 ms
2025-07-23 00:16:15 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 3 endpoint(s) beneath base path '/actuator'
2025-07-23 00:16:15 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8091"]
2025-07-23 00:16:15 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8091 (http) with context path '/api'
2025-07-23 00:16:15 [main] INFO  com.gigass.MarketVisionApplication - Started MarketVisionApplication in 3.723 seconds (process running for 4.624)
2025-07-23 00:16:37 [main] INFO  c.g.ai.service.impl.AiServiceImpl - AI响应成功，模型: gemini, 消息长度: 381
2025-07-23 00:16:37 [main] INFO  com.gigass.MarketVisionApplication - 热搜驱动交易系统启动完成！
2025-07-23 00:16:37 [RMI TCP Connection(3)-127.0.0.1] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-07-23 00:16:37 [RMI TCP Connection(1)-127.0.0.1] INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-07-23 00:16:37 [RMI TCP Connection(1)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-07-23 00:16:37 [RMI TCP Connection(1)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-07-23 00:16:37 [RMI TCP Connection(3)-127.0.0.1] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.p6spy.engine.wrapper.ConnectionWrapper@57b2449c
2025-07-23 00:16:37 [RMI TCP Connection(3)-127.0.0.1] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-07-23 00:17:11 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-07-23 00:17:11 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-07-23 00:17:13 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2025-07-23 00:17:13 [main] INFO  com.gigass.MarketVisionApplication - Starting MarketVisionApplication using Java 21.0.8 with PID 63461 (/Users/gigass/DEVELOP/GitHub/MarketVision/target/classes started by gigass in /Users/gigass/DEVELOP/GitHub/MarketVision)
2025-07-23 00:17:13 [main] DEBUG com.gigass.MarketVisionApplication - Running with Spring Boot v3.2.1, Spring v6.1.2
2025-07-23 00:17:13 [main] INFO  com.gigass.MarketVisionApplication - No active profile set, falling back to 1 default profile: "default"
2025-07-23 00:17:14 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2025-07-23 00:17:14 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 66 ms. Found 1 Elasticsearch repository interface.
2025-07-23 00:17:14 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2025-07-23 00:17:14 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 1 ms. Found 1 Elasticsearch repository interface.
2025-07-23 00:17:14 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2025-07-23 00:17:14 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 12 ms. Found 0 Reactive Elasticsearch repository interfaces.
2025-07-23 00:17:14 [main] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=5a9dfd1a-56da-3808-84e5-b650b2d7c637
2025-07-23 00:17:14 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$RetryInterceptorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$RetryInterceptorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2025-07-23 00:17:14 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 00:17:14 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 00:17:14 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' of type [org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 00:17:14 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 00:17:14 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerClientsDefaultsMappingsProvider' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda/0x000000980160d340] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 00:17:14 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'defaultsBindHandlerAdvisor' of type [org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 00:17:14 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.cloud.loadbalancer-org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 00:17:14 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 00:17:14 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 00:17:14 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerClientFactory' of type [org.springframework.cloud.loadbalancer.support.LoadBalancerClientFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 00:17:14 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'blockingLoadBalancerClient' of type [org.springframework.cloud.loadbalancer.blocking.client.BlockingLoadBalancerClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 00:17:14 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerServiceInstanceCookieTransformer' of type [org.springframework.cloud.loadbalancer.core.LoadBalancerServiceInstanceCookieTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 00:17:14 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'xForwarderHeadersTransformer' of type [org.springframework.cloud.loadbalancer.blocking.XForwardedHeadersTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 00:17:14 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 00:17:14 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerRequestFactory' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerRequestFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 00:17:14 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerRetryConfig' of type [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerRetryConfig$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 00:17:14 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancedRetryFactory' of type [org.springframework.cloud.loadbalancer.blocking.retry.BlockingLoadBalancedRetryFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 00:17:14 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.RetryLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 00:17:14 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2025-07-23 00:17:14 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 00:17:14 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 00:17:15 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8091 (http)
2025-07-23 00:17:15 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8091"]
2025-07-23 00:17:15 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-07-23 00:17:15 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.17]
2025-07-23 00:17:15 [main] INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring embedded WebApplicationContext
2025-07-23 00:17:15 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1219 ms
2025-07-23 00:17:17 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 3 endpoint(s) beneath base path '/actuator'
2025-07-23 00:17:17 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8091"]
2025-07-23 00:17:17 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8091 (http) with context path '/api'
2025-07-23 00:17:17 [main] INFO  com.gigass.MarketVisionApplication - Started MarketVisionApplication in 3.71 seconds (process running for 4.643)
2025-07-23 00:17:36 [main] INFO  c.g.ai.service.impl.AiServiceImpl - AI响应成功，模型: gemini, 消息长度: 416
2025-07-23 00:17:36 [main] INFO  com.gigass.MarketVisionApplication - 热搜驱动交易系统启动完成！
2025-07-23 00:17:37 [RMI TCP Connection(1)-127.0.0.1] INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-07-23 00:17:37 [RMI TCP Connection(1)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-07-23 00:17:37 [RMI TCP Connection(4)-127.0.0.1] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-07-23 00:17:37 [RMI TCP Connection(1)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 4 ms
2025-07-23 00:17:37 [RMI TCP Connection(4)-127.0.0.1] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.p6spy.engine.wrapper.ConnectionWrapper@51579939
2025-07-23 00:17:37 [RMI TCP Connection(4)-127.0.0.1] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-07-23 00:18:15 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-07-23 00:18:15 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-07-23 00:18:16 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2025-07-23 00:18:16 [main] INFO  com.gigass.MarketVisionApplication - Starting MarketVisionApplication using Java 21.0.8 with PID 63960 (/Users/gigass/DEVELOP/GitHub/MarketVision/target/classes started by gigass in /Users/gigass/DEVELOP/GitHub/MarketVision)
2025-07-23 00:18:16 [main] DEBUG com.gigass.MarketVisionApplication - Running with Spring Boot v3.2.1, Spring v6.1.2
2025-07-23 00:18:16 [main] INFO  com.gigass.MarketVisionApplication - No active profile set, falling back to 1 default profile: "default"
2025-07-23 00:18:17 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2025-07-23 00:18:17 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 48 ms. Found 1 Elasticsearch repository interface.
2025-07-23 00:18:17 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2025-07-23 00:18:17 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 1 ms. Found 1 Elasticsearch repository interface.
2025-07-23 00:18:17 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2025-07-23 00:18:17 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 9 ms. Found 0 Reactive Elasticsearch repository interfaces.
2025-07-23 00:18:17 [main] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=5a9dfd1a-56da-3808-84e5-b650b2d7c637
2025-07-23 00:18:17 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$RetryInterceptorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$RetryInterceptorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2025-07-23 00:18:17 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 00:18:17 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 00:18:17 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' of type [org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 00:18:17 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 00:18:17 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerClientsDefaultsMappingsProvider' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda/0x000000980160ec30] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 00:18:17 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'defaultsBindHandlerAdvisor' of type [org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 00:18:17 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.cloud.loadbalancer-org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 00:18:17 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 00:18:17 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 00:18:17 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerClientFactory' of type [org.springframework.cloud.loadbalancer.support.LoadBalancerClientFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 00:18:17 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'blockingLoadBalancerClient' of type [org.springframework.cloud.loadbalancer.blocking.client.BlockingLoadBalancerClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 00:18:17 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerServiceInstanceCookieTransformer' of type [org.springframework.cloud.loadbalancer.core.LoadBalancerServiceInstanceCookieTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 00:18:17 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'xForwarderHeadersTransformer' of type [org.springframework.cloud.loadbalancer.blocking.XForwardedHeadersTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 00:18:17 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 00:18:17 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerRequestFactory' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerRequestFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 00:18:17 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerRetryConfig' of type [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerRetryConfig$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 00:18:17 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancedRetryFactory' of type [org.springframework.cloud.loadbalancer.blocking.retry.BlockingLoadBalancedRetryFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 00:18:17 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.RetryLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 00:18:17 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2025-07-23 00:18:17 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 00:18:17 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 00:18:18 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8091 (http)
2025-07-23 00:18:18 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8091"]
2025-07-23 00:18:18 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-07-23 00:18:18 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.17]
2025-07-23 00:18:18 [main] INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring embedded WebApplicationContext
2025-07-23 00:18:18 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1067 ms
2025-07-23 00:18:20 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 3 endpoint(s) beneath base path '/actuator'
2025-07-23 00:18:20 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8091"]
2025-07-23 00:18:20 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8091 (http) with context path '/api'
2025-07-23 00:18:20 [main] INFO  com.gigass.MarketVisionApplication - Started MarketVisionApplication in 3.533 seconds (process running for 4.318)
2025-07-23 00:18:37 [main] INFO  c.g.ai.service.impl.AiServiceImpl - AI响应成功，模型: gemini, 消息长度: 352
2025-07-23 00:18:37 [main] INFO  com.gigass.MarketVisionApplication - 热搜驱动交易系统启动完成！
2025-07-23 00:18:37 [RMI TCP Connection(6)-127.0.0.1] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-07-23 00:18:37 [RMI TCP Connection(7)-127.0.0.1] INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-07-23 00:18:37 [RMI TCP Connection(7)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-07-23 00:18:37 [RMI TCP Connection(7)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 5 ms
2025-07-23 00:18:38 [RMI TCP Connection(6)-127.0.0.1] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.p6spy.engine.wrapper.ConnectionWrapper@4dfad0d5
2025-07-23 00:18:38 [RMI TCP Connection(6)-127.0.0.1] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-07-23 00:18:58 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-07-23 00:18:58 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-07-23 00:19:00 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2025-07-23 00:19:00 [main] INFO  com.gigass.MarketVisionApplication - Starting MarketVisionApplication using Java 21.0.8 with PID 64311 (/Users/gigass/DEVELOP/GitHub/MarketVision/target/classes started by gigass in /Users/gigass/DEVELOP/GitHub/MarketVision)
2025-07-23 00:19:00 [main] DEBUG com.gigass.MarketVisionApplication - Running with Spring Boot v3.2.1, Spring v6.1.2
2025-07-23 00:19:00 [main] INFO  com.gigass.MarketVisionApplication - No active profile set, falling back to 1 default profile: "default"
2025-07-23 00:19:00 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2025-07-23 00:19:00 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 46 ms. Found 1 Elasticsearch repository interface.
2025-07-23 00:19:00 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2025-07-23 00:19:00 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 1 ms. Found 1 Elasticsearch repository interface.
2025-07-23 00:19:01 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2025-07-23 00:19:01 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 9 ms. Found 0 Reactive Elasticsearch repository interfaces.
2025-07-23 00:19:01 [main] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=5a9dfd1a-56da-3808-84e5-b650b2d7c637
2025-07-23 00:19:01 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$RetryInterceptorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$RetryInterceptorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2025-07-23 00:19:01 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 00:19:01 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 00:19:01 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' of type [org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 00:19:01 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 00:19:01 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerClientsDefaultsMappingsProvider' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda/0x000000080160f9a8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 00:19:01 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'defaultsBindHandlerAdvisor' of type [org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 00:19:01 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.cloud.loadbalancer-org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 00:19:01 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 00:19:01 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 00:19:01 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerClientFactory' of type [org.springframework.cloud.loadbalancer.support.LoadBalancerClientFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 00:19:01 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'blockingLoadBalancerClient' of type [org.springframework.cloud.loadbalancer.blocking.client.BlockingLoadBalancerClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 00:19:01 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerServiceInstanceCookieTransformer' of type [org.springframework.cloud.loadbalancer.core.LoadBalancerServiceInstanceCookieTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 00:19:01 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'xForwarderHeadersTransformer' of type [org.springframework.cloud.loadbalancer.blocking.XForwardedHeadersTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 00:19:01 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 00:19:01 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerRequestFactory' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerRequestFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 00:19:01 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerRetryConfig' of type [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerRetryConfig$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 00:19:01 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancedRetryFactory' of type [org.springframework.cloud.loadbalancer.blocking.retry.BlockingLoadBalancedRetryFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 00:19:01 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.RetryLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 00:19:01 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2025-07-23 00:19:01 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 00:19:01 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 00:19:01 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8091 (http)
2025-07-23 00:19:01 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8091"]
2025-07-23 00:19:01 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-07-23 00:19:01 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.17]
2025-07-23 00:19:01 [main] INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring embedded WebApplicationContext
2025-07-23 00:19:01 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1094 ms
2025-07-23 00:19:05 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 3 endpoint(s) beneath base path '/actuator'
2025-07-23 00:19:05 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8091"]
2025-07-23 00:19:05 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8091 (http) with context path '/api'
2025-07-23 00:19:05 [main] INFO  com.gigass.MarketVisionApplication - Started MarketVisionApplication in 5.283 seconds (process running for 6.107)
2025-07-23 00:19:28 [main] INFO  c.g.ai.service.impl.AiServiceImpl - AI响应成功，模型: gemini, 消息长度: 470
2025-07-23 00:19:28 [main] INFO  com.gigass.MarketVisionApplication - 热搜驱动交易系统启动完成！
2025-07-23 00:19:28 [RMI TCP Connection(1)-127.0.0.1] INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-07-23 00:19:28 [RMI TCP Connection(1)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-07-23 00:19:28 [RMI TCP Connection(4)-127.0.0.1] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-07-23 00:19:28 [RMI TCP Connection(1)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2025-07-23 00:19:28 [RMI TCP Connection(4)-127.0.0.1] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.p6spy.engine.wrapper.ConnectionWrapper@205f38f9
2025-07-23 00:19:28 [RMI TCP Connection(4)-127.0.0.1] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-07-23 00:20:00 [scheduling-1] INFO  c.g.t.scheduler.HotSearchCrawlTask - 开始执行热搜数据采集任务，时间: 2025-07-23T00:20:00.016802
2025-07-23 00:20:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:10 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:10 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:10 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:10 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:10 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:10 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:10 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:10 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:10 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:10 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:10 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:10 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:10 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:10 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:10 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:10 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:10 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:10 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:10 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:10 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:10 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:10 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:10 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:10 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:10 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:10 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:10 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:10 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:10 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:10 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:10 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:10 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:10 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:10 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:10 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:10 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:10 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:10 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:10 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:10 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:10 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:10 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:10 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:10 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:10 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:10 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:10 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:10 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:10 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:10 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:10 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:10 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:10 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:11 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:11 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:11 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:11 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:11 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:11 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:11 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:11 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:11 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:11 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:11 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:11 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:11 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:11 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:11 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:11 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:11 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:11 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:11 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:11 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:11 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:11 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:11 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:11 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:11 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:11 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:11 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:11 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:11 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:11 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:11 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:11 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:11 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:11 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:11 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:11 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:11 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:11 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:11 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:11 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:11 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:11 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:11 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:11 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:11 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:11 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:11 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:11 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:11 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:11 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:11 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:11 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:11 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:12 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:12 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:12 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:12 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:12 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:12 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:12 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:12 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:12 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:12 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:12 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:12 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:12 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:12 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:12 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:12 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:12 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:12 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:12 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:12 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:12 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:12 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:12 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:12 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:12 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:12 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:12 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:12 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:12 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:12 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:12 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:12 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:12 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:12 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:12 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:12 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:12 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:12 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:12 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:12 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:12 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:12 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:12 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:12 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:12 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:12 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:12 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:12 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:12 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:12 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:12 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:12 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:12 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:13 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:13 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:13 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:13 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:13 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:13 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:13 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:13 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:13 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:13 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:13 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:13 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:13 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:13 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:13 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:13 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:13 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:13 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:13 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:13 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:13 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:13 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:13 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:13 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:13 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:13 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:13 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:13 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:13 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:13 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:13 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:13 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:13 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:13 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:13 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:13 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:13 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:13 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:13 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:13 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:13 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:13 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:13 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:13 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:13 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:13 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:13 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:13 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:13 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:13 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:13 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:13 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:13 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:14 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:14 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:14 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:14 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:14 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:14 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:14 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:14 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:14 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:14 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:14 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:14 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:14 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:14 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:14 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:14 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:14 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:14 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:14 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:14 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:14 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:14 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:14 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:14 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:14 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:14 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:14 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:14 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:14 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:14 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:20:14 [scheduling-1] ERROR o.s.s.s.TaskUtils$LoggingErrorHandler - Unexpected error occurred in scheduled task
java.lang.StackOverflowError: null
	at java.base/java.util.concurrent.ConcurrentHashMap.putIfAbsent(ConcurrentHashMap.java:1541)
	at java.base/java.lang.ClassLoader.getClassLoadingLock(ClassLoader.java:681)
	at java.base/jdk.internal.loader.BuiltinClassLoader.loadClassOrNull(BuiltinClassLoader.java:651)
	at java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:639)
	at java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188)
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:526)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:152)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:249)
	at jdk.proxy2/jdk.proxy2.$Proxy125.save(Unknown Source)
	at com.gigass.trading.service.LogService.logOperation(LogService.java:32)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:352)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:57)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
2025-07-23 00:29:59 [scheduling-1] INFO  c.g.t.scheduler.HotSearchCrawlTask - 开始执行热搜数据采集任务，时间: 2025-07-23T00:29:59.981924
2025-07-23 00:30:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:10 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:10 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:10 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:10 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:10 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:10 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:10 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:10 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:10 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:10 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:10 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:10 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:10 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:10 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:10 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:10 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:10 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:10 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:10 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:10 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:10 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:10 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:10 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:10 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:10 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:10 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:10 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:10 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:10 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:10 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:10 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:10 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:10 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:10 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:10 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:10 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:10 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:10 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:10 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:10 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:10 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:10 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:10 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:10 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:10 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:10 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:10 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:10 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:10 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:10 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:10 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:10 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:10 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:10 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:30:10 [scheduling-1] ERROR o.s.s.s.TaskUtils$LoggingErrorHandler - Unexpected error occurred in scheduled task
java.lang.StackOverflowError: null
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:152)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:249)
	at jdk.proxy2/jdk.proxy2.$Proxy125.save(Unknown Source)
	at com.gigass.trading.service.LogService.logOperation(LogService.java:32)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:352)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:57)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
2025-07-23 00:40:00 [scheduling-1] INFO  c.g.t.scheduler.HotSearchCrawlTask - 开始执行热搜数据采集任务，时间: 2025-07-23T00:40:00.018886
2025-07-23 00:40:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:10 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:10 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:10 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:10 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:10 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:10 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:10 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:10 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:10 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:10 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:10 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:10 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:10 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:10 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:10 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:10 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:10 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:10 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:10 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:10 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:10 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:10 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:10 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:10 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:10 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:10 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:40:10 [scheduling-1] ERROR o.s.s.s.TaskUtils$LoggingErrorHandler - Unexpected error occurred in scheduled task
java.lang.StackOverflowError: null
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:152)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:249)
	at jdk.proxy2/jdk.proxy2.$Proxy125.save(Unknown Source)
	at com.gigass.trading.service.LogService.logOperation(LogService.java:32)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:352)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:57)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
2025-07-23 00:50:00 [scheduling-1] INFO  c.g.t.scheduler.HotSearchCrawlTask - 开始执行热搜数据采集任务，时间: 2025-07-23T00:50:00.000856
2025-07-23 00:50:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:10 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:10 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:10 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:10 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:10 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:10 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:10 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:10 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:10 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:10 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:10 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:10 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:10 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:10 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:10 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:10 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:10 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:10 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:10 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:10 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:10 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 00:50:10 [scheduling-1] ERROR o.s.s.s.TaskUtils$LoggingErrorHandler - Unexpected error occurred in scheduled task
java.lang.StackOverflowError: null
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:152)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:249)
	at jdk.proxy2/jdk.proxy2.$Proxy125.save(Unknown Source)
	at com.gigass.trading.service.LogService.logOperation(LogService.java:32)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:352)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:57)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
2025-07-23 01:00:00 [scheduling-1] INFO  c.g.t.scheduler.HotSearchCrawlTask - 开始执行热搜数据采集任务，时间: 2025-07-23T01:00:00.036310
2025-07-23 01:00:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:00 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:01 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:02 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:03 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:04 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:05 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:06 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:07 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:08 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:09 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:10 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:10 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:10 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:10 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:10 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:10 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:10 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:10 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:10 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:10 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:10 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:10 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:10 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:10 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:10 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:10 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:10 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:10 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:10 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:10 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:10 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:10 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:10 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:10 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:10 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:10 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:10 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:10 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:10 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:10 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:10 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:10 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:10 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:10 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:10 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:10 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:10 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:10 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:10 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:10 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:10 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:10 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:10 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:10 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:11 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:11 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:11 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:11 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:11 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:11 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:11 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:11 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:11 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:11 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:11 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:11 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:11 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:11 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:11 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:11 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:11 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:11 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:11 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:11 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:11 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:11 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:11 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:11 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:11 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:11 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:11 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:11 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:11 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:11 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:11 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:11 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:11 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:11 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:11 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:11 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:11 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:11 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:11 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:11 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:11 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:11 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:11 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:11 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:11 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:11 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:11 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:11 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:12 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:12 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:12 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:12 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:12 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:12 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:12 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:12 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:12 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:12 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:12 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:12 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:12 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:12 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:12 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:12 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:12 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:12 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:12 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:12 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:12 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:12 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:12 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:12 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:12 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:12 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:12 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:12 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:12 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:12 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:12 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:12 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:12 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:12 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:12 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:12 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:12 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:12 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:12 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:12 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:12 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:12 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:12 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:12 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:12 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:12 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:12 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:12 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:12 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:13 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:13 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:13 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:13 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:13 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:13 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:13 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:13 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:13 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:13 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:13 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:13 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:13 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:13 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:13 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:13 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:13 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:13 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:13 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:13 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:13 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:13 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:13 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:13 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:13 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:13 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:13 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:13 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:13 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:13 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:13 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:13 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:13 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:13 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:13 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:13 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:13 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:13 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:13 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:13 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:13 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:13 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:14 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:14 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:14 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:14 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:14 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:14 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:14 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:14 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:14 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:14 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:14 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:14 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:14 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:14 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:14 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:14 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:14 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:14 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:14 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:14 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:14 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:14 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:14 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:14 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:14 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:14 [scheduling-1] DEBUG c.gigass.trading.service.LogService - 操作日志已记录到 Elasticsearch: METHOD_SUCCESS
2025-07-23 01:00:15 [scheduling-1] ERROR o.s.s.s.TaskUtils$LoggingErrorHandler - Unexpected error occurred in scheduled task
java.lang.StackOverflowError: null
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:152)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:249)
	at jdk.proxy2/jdk.proxy2.$Proxy125.save(Unknown Source)
	at com.gigass.trading.service.LogService.logOperation(LogService.java:32)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:352)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:57)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.gigass.trading.service.LogService$$SpringCGLIB$$0.logOperation(<generated>)
	at com.gigass.trading.aspect.OperationLogAspect.doAfterReturning(OperationLogAspect.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
2025-07-23 01:01:42 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-07-23 01:01:42 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-07-23 01:04:47 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2025-07-23 01:04:47 [main] INFO  com.gigass.MarketVisionApplication - Starting MarketVisionApplication using Java 21.0.8 with PID 74446 (/Users/gigass/DEVELOP/GitHub/MarketVision/target/classes started by gigass in /Users/gigass/DEVELOP/GitHub/MarketVision)
2025-07-23 01:04:47 [main] DEBUG com.gigass.MarketVisionApplication - Running with Spring Boot v3.2.1, Spring v6.1.2
2025-07-23 01:04:47 [main] INFO  com.gigass.MarketVisionApplication - No active profile set, falling back to 1 default profile: "default"
2025-07-23 01:04:48 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2025-07-23 01:04:48 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 48 ms. Found 1 Elasticsearch repository interface.
2025-07-23 01:04:48 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2025-07-23 01:04:48 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 1 ms. Found 1 Elasticsearch repository interface.
2025-07-23 01:04:48 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2025-07-23 01:04:48 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 11 ms. Found 0 Reactive Elasticsearch repository interfaces.
2025-07-23 01:04:48 [main] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=5a9dfd1a-56da-3808-84e5-b650b2d7c637
2025-07-23 01:04:48 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$RetryInterceptorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$RetryInterceptorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2025-07-23 01:04:48 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 01:04:48 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 01:04:48 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' of type [org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 01:04:48 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 01:04:48 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerClientsDefaultsMappingsProvider' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda/0x00000003015c6f80] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 01:04:48 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'defaultsBindHandlerAdvisor' of type [org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 01:04:48 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.cloud.loadbalancer-org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 01:04:48 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 01:04:48 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 01:04:48 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerClientFactory' of type [org.springframework.cloud.loadbalancer.support.LoadBalancerClientFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 01:04:49 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'blockingLoadBalancerClient' of type [org.springframework.cloud.loadbalancer.blocking.client.BlockingLoadBalancerClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 01:04:49 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerServiceInstanceCookieTransformer' of type [org.springframework.cloud.loadbalancer.core.LoadBalancerServiceInstanceCookieTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 01:04:49 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'xForwarderHeadersTransformer' of type [org.springframework.cloud.loadbalancer.blocking.XForwardedHeadersTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 01:04:49 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 01:04:49 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerRequestFactory' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerRequestFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 01:04:49 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerRetryConfig' of type [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerRetryConfig$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 01:04:49 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancedRetryFactory' of type [org.springframework.cloud.loadbalancer.blocking.retry.BlockingLoadBalancedRetryFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 01:04:49 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.RetryLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 01:04:49 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2025-07-23 01:04:49 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 01:04:49 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-23 01:04:49 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8091 (http)
2025-07-23 01:04:49 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8091"]
2025-07-23 01:04:49 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-07-23 01:04:49 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.17]
2025-07-23 01:04:49 [main] INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring embedded WebApplicationContext
2025-07-23 01:04:49 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1127 ms
2025-07-23 01:04:52 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 3 endpoint(s) beneath base path '/actuator'
2025-07-23 01:04:52 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8091"]
2025-07-23 01:04:52 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8091 (http) with context path '/api'
2025-07-23 01:04:52 [main] INFO  com.gigass.MarketVisionApplication - Started MarketVisionApplication in 4.779 seconds (process running for 6.092)
2025-07-23 01:05:12 [main] INFO  c.g.ai.service.impl.AiServiceImpl - AI响应成功，模型: gemini, 消息长度: 313
2025-07-23 01:05:12 [main] INFO  com.gigass.MarketVisionApplication - 热搜驱动交易系统启动完成！
